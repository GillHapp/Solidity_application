{
	"id": "42d6e9b73f4692df4c236ada16136f66",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/VaultFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"./Vault.sol\";\n\ncontract VaultFactory {\n    address public immutable implementation;\n\n    event VaultCreated(address newVault, address owner);\n\n    constructor() {\n        implementation = address(new Vault()); // deploy main logic once\n    }\n\n    function createVault() external returns (address) {\n        address clone = Clones.clone(implementation); // create minimal proxy\n        Vault(clone).initialize(address(0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2)); // initialize state\n        emit VaultCreated(clone, msg.sender);\n        return clone;\n    }\n    \n}\n"
			},
			"Contracts/Vault.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract Vault {\n    address public owner;\n    uint256 public balance;\n\n    event Deposited(address user, uint256 amount);\n\n    function initialize(address _owner) external {\n        require(owner == address(0), \"Already initialized\");\n        owner = _owner;\n    }\n\n    function deposit() external payable {\n        require(msg.sender == owner, \"Only owner can deposit\");\n        balance += msg.value;\n        emit Deposited(msg.sender, msg.value);\n    }\n\n    function getBalance() external view returns (uint256) {\n        return balance;\n    }\n\n    \n}\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [
						{
							"inputs": [],
							"name": "CloneArgumentsTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:11840  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:11840  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220572cfd18686fd7b58fd93356925dae12b5c14ab97aa302cd22a4796560b2ab6464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220572cfd18686fd7b58fd93356925dae12b5c14ab97aa302cd22a4796560b2ab6464736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0x2C REVERT XOR PUSH9 0x6FD7B58FD93356925D 0xAE SLT 0xB5 0xC1 BLOBBASEFEE 0xB9 PUSH27 0xA302CD22A4796560B2AB6464736F6C634300081A00330000000000 ",
							"sourceMap": "817:11023:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220572cfd18686fd7b58fd93356925dae12b5c14ab97aa302cd22a4796560b2ab6464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0x2C REVERT XOR PUSH9 0x6FD7B58FD93356925D 0xAE SLT 0xB5 0xC1 BLOBBASEFEE 0xB9 PUSH27 0xA302CD22A4796560B2AB6464736F6C634300081A00330000000000 ",
							"sourceMap": "817:11023:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_cloneCodeWithImmutableArgs(address,bytes memory)": "infinite",
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32,uint256)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory,uint256)": "infinite",
								"fetchCloneArgs(address)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220572cfd18686fd7b58fd93356925dae12b5c14ab97aa302cd22a4796560b2ab6464736f6c634300081a0033",
									".code": [
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/Vault.sol",
								"Contracts/VaultFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [
						{
							"inputs": [],
							"name": "Create2EmptyBytecode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"errors": {
							"Create2EmptyBytecode()": [
								{
									"details": "There's no code to deploy."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4B 0x2D CALLCODE MCOPY SWAP14 MLOAD GASPRICE 0xA6 0xC9 MCOPY OR PUSH3 0x461E2C OR MSTORE8 PUSH15 0xEB62AA9BDB6011B3D03F6D259B6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4B 0x2D CALLCODE MCOPY SWAP14 MLOAD GASPRICE 0xA6 0xC9 MCOPY OR PUSH3 0x461E2C OR MSTORE8 PUSH15 0xEB62AA9BDB6011B3D03F6D259B6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeAddress(bytes32,bytes32)": "infinite",
								"computeAddress(bytes32,bytes32,address)": "infinite",
								"deploy(uint256,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033",
									".code": [
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/Vault.sol",
								"Contracts/VaultFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/Vault.sol",
								"Contracts/VaultFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/Vault.sol": {
				"Vault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/Vault.sol\":58:612  contract Vault {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/Vault.sol\":58:612  contract Vault {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/Vault.sol\":519:604  function getBalance() external view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/Vault.sol\":79:99  address public owner */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/Vault.sol\":105:127  uint256 public balance */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/Vault.sol\":186:323  function initialize(address _owner) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"Contracts/Vault.sol\":329:513  function deposit() external payable {... */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"Contracts/Vault.sol\":519:604  function getBalance() external view returns (uint256) {... */\n    tag_9:\n        /* \"Contracts/Vault.sol\":564:571  uint256 */\n      0x00\n        /* \"Contracts/Vault.sol\":590:597  balance */\n      sload(0x01)\n        /* \"Contracts/Vault.sol\":583:597  return balance */\n      swap1\n      pop\n        /* \"Contracts/Vault.sol\":519:604  function getBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Contracts/Vault.sol\":79:99  address public owner */\n    tag_14:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Contracts/Vault.sol\":105:127  uint256 public balance */\n    tag_19:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Contracts/Vault.sol\":186:323  function initialize(address _owner) external {... */\n    tag_25:\n        /* \"Contracts/Vault.sol\":266:267  0 */\n      0x00\n        /* \"Contracts/Vault.sol\":249:268  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Vault.sol\":249:254  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Vault.sol\":249:268  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/Vault.sol\":241:292  require(owner == address(0), \"Already initialized\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"Contracts/Vault.sol\":310:316  _owner */\n      dup1\n        /* \"Contracts/Vault.sol\":302:307  owner */\n      0x00\n      dup1\n        /* \"Contracts/Vault.sol\":302:316  owner = _owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Vault.sol\":186:323  function initialize(address _owner) external {... */\n      pop\n      jump\t// out\n        /* \"Contracts/Vault.sol\":329:513  function deposit() external payable {... */\n    tag_27:\n        /* \"Contracts/Vault.sol\":397:402  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Vault.sol\":383:402  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Vault.sol\":383:393  msg.sender */\n      caller\n        /* \"Contracts/Vault.sol\":383:402  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/Vault.sol\":375:429  require(msg.sender == owner, \"Only owner can deposit\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"Contracts/Vault.sol\":450:459  msg.value */\n      callvalue\n        /* \"Contracts/Vault.sol\":439:446  balance */\n      0x01\n      0x00\n        /* \"Contracts/Vault.sol\":439:459  balance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Vault.sol\":474:506  Deposited(msg.sender, msg.value) */\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n        /* \"Contracts/Vault.sol\":484:494  msg.sender */\n      caller\n        /* \"Contracts/Vault.sol\":496:505  msg.value */\n      callvalue\n        /* \"Contracts/Vault.sol\":474:506  Deposited(msg.sender, msg.value) */\n      mload(0x40)\n      tag_39\n      swap3\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/Vault.sol\":329:513  function deposit() external payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_41:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_42:\n        /* \"#utility.yul\":177:201   */\n      tag_60\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_41\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_11:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_62\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_42\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_43:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_44:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_65\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_43\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_45:\n        /* \"#utility.yul\":763:787   */\n      tag_67\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_44\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_16:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_69\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_45\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_47:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_49:\n        /* \"#utility.yul\":1428:1452   */\n      tag_74\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_44\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_75\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_75:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_50:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_77\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_49\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_24:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_80\n      tag_47\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1704:1823   */\n    tag_79:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_81\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_50\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2132   */\n    tag_51:\n        /* \"#utility.yul\":2047:2058   */\n      0x00\n        /* \"#utility.yul\":2081:2087   */\n      dup3\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2088   */\n      mstore\n        /* \"#utility.yul\":2121:2125   */\n      0x20\n        /* \"#utility.yul\":2116:2119   */\n      dup3\n        /* \"#utility.yul\":2112:2126   */\n      add\n        /* \"#utility.yul\":2097:2126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2138:2307   */\n    tag_52:\n        /* \"#utility.yul\":2278:2299   */\n      0x416c726561647920696e697469616c697a656400000000000000000000000000\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2266:2272   */\n      dup3\n        /* \"#utility.yul\":2262:2276   */\n      add\n        /* \"#utility.yul\":2255:2300   */\n      mstore\n        /* \"#utility.yul\":2138:2307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2313:2679   */\n    tag_53:\n        /* \"#utility.yul\":2455:2458   */\n      0x00\n        /* \"#utility.yul\":2476:2543   */\n      tag_85\n        /* \"#utility.yul\":2540:2542   */\n      0x13\n        /* \"#utility.yul\":2535:2538   */\n      dup4\n        /* \"#utility.yul\":2476:2543   */\n      tag_51\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2469:2543   */\n      swap2\n      pop\n        /* \"#utility.yul\":2552:2645   */\n      tag_86\n        /* \"#utility.yul\":2641:2644   */\n      dup3\n        /* \"#utility.yul\":2552:2645   */\n      tag_52\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2670:2672   */\n      0x20\n        /* \"#utility.yul\":2665:2668   */\n      dup3\n        /* \"#utility.yul\":2661:2673   */\n      add\n        /* \"#utility.yul\":2654:2673   */\n      swap1\n      pop\n        /* \"#utility.yul\":2313:2679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2685:3104   */\n    tag_32:\n        /* \"#utility.yul\":2851:2855   */\n      0x00\n        /* \"#utility.yul\":2889:2891   */\n      0x20\n        /* \"#utility.yul\":2878:2887   */\n      dup3\n        /* \"#utility.yul\":2874:2892   */\n      add\n        /* \"#utility.yul\":2866:2892   */\n      swap1\n      pop\n        /* \"#utility.yul\":2938:2947   */\n      dup2\n        /* \"#utility.yul\":2932:2936   */\n      dup2\n        /* \"#utility.yul\":2928:2948   */\n      sub\n        /* \"#utility.yul\":2924:2925   */\n      0x00\n        /* \"#utility.yul\":2913:2922   */\n      dup4\n        /* \"#utility.yul\":2909:2926   */\n      add\n        /* \"#utility.yul\":2902:2949   */\n      mstore\n        /* \"#utility.yul\":2966:3097   */\n      tag_88\n        /* \"#utility.yul\":3092:3096   */\n      dup2\n        /* \"#utility.yul\":2966:3097   */\n      tag_53\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2958:3097   */\n      swap1\n      pop\n        /* \"#utility.yul\":2685:3104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3110:3282   */\n    tag_54:\n        /* \"#utility.yul\":3250:3274   */\n      0x4f6e6c79206f776e65722063616e206465706f73697400000000000000000000\n        /* \"#utility.yul\":3246:3247   */\n      0x00\n        /* \"#utility.yul\":3238:3244   */\n      dup3\n        /* \"#utility.yul\":3234:3248   */\n      add\n        /* \"#utility.yul\":3227:3275   */\n      mstore\n        /* \"#utility.yul\":3110:3282   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3288:3654   */\n    tag_55:\n        /* \"#utility.yul\":3430:3433   */\n      0x00\n        /* \"#utility.yul\":3451:3518   */\n      tag_91\n        /* \"#utility.yul\":3515:3517   */\n      0x16\n        /* \"#utility.yul\":3510:3513   */\n      dup4\n        /* \"#utility.yul\":3451:3518   */\n      tag_51\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3444:3518   */\n      swap2\n      pop\n        /* \"#utility.yul\":3527:3620   */\n      tag_92\n        /* \"#utility.yul\":3616:3619   */\n      dup3\n        /* \"#utility.yul\":3527:3620   */\n      tag_54\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3645:3647   */\n      0x20\n        /* \"#utility.yul\":3640:3643   */\n      dup3\n        /* \"#utility.yul\":3636:3648   */\n      add\n        /* \"#utility.yul\":3629:3648   */\n      swap1\n      pop\n        /* \"#utility.yul\":3288:3654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3660:4079   */\n    tag_36:\n        /* \"#utility.yul\":3826:3830   */\n      0x00\n        /* \"#utility.yul\":3864:3866   */\n      0x20\n        /* \"#utility.yul\":3853:3862   */\n      dup3\n        /* \"#utility.yul\":3849:3867   */\n      add\n        /* \"#utility.yul\":3841:3867   */\n      swap1\n      pop\n        /* \"#utility.yul\":3913:3922   */\n      dup2\n        /* \"#utility.yul\":3907:3911   */\n      dup2\n        /* \"#utility.yul\":3903:3923   */\n      sub\n        /* \"#utility.yul\":3899:3900   */\n      0x00\n        /* \"#utility.yul\":3888:3897   */\n      dup4\n        /* \"#utility.yul\":3884:3901   */\n      add\n        /* \"#utility.yul\":3877:3924   */\n      mstore\n        /* \"#utility.yul\":3941:4072   */\n      tag_94\n        /* \"#utility.yul\":4067:4071   */\n      dup2\n        /* \"#utility.yul\":3941:4072   */\n      tag_55\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3933:4072   */\n      swap1\n      pop\n        /* \"#utility.yul\":3660:4079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4085:4265   */\n    tag_56:\n        /* \"#utility.yul\":4133:4210   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4130:4131   */\n      0x00\n        /* \"#utility.yul\":4123:4211   */\n      mstore\n        /* \"#utility.yul\":4230:4234   */\n      0x11\n        /* \"#utility.yul\":4227:4228   */\n      0x04\n        /* \"#utility.yul\":4220:4235   */\n      mstore\n        /* \"#utility.yul\":4254:4258   */\n      0x24\n        /* \"#utility.yul\":4251:4252   */\n      0x00\n        /* \"#utility.yul\":4244:4259   */\n      revert\n        /* \"#utility.yul\":4271:4462   */\n    tag_38:\n        /* \"#utility.yul\":4311:4314   */\n      0x00\n        /* \"#utility.yul\":4330:4350   */\n      tag_97\n        /* \"#utility.yul\":4348:4349   */\n      dup3\n        /* \"#utility.yul\":4330:4350   */\n      tag_41\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":4325:4350   */\n      swap2\n      pop\n        /* \"#utility.yul\":4364:4384   */\n      tag_98\n        /* \"#utility.yul\":4382:4383   */\n      dup4\n        /* \"#utility.yul\":4364:4384   */\n      tag_41\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4359:4384   */\n      swap3\n      pop\n        /* \"#utility.yul\":4407:4408   */\n      dup3\n        /* \"#utility.yul\":4404:4405   */\n      dup3\n        /* \"#utility.yul\":4400:4409   */\n      add\n        /* \"#utility.yul\":4393:4409   */\n      swap1\n      pop\n        /* \"#utility.yul\":4428:4431   */\n      dup1\n        /* \"#utility.yul\":4425:4426   */\n      dup3\n        /* \"#utility.yul\":4422:4432   */\n      gt\n        /* \"#utility.yul\":4419:4455   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":4435:4453   */\n      tag_100\n      tag_56\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":4419:4455   */\n    tag_99:\n        /* \"#utility.yul\":4271:4462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4468:4800   */\n    tag_40:\n        /* \"#utility.yul\":4589:4593   */\n      0x00\n        /* \"#utility.yul\":4627:4629   */\n      0x40\n        /* \"#utility.yul\":4616:4625   */\n      dup3\n        /* \"#utility.yul\":4612:4630   */\n      add\n        /* \"#utility.yul\":4604:4630   */\n      swap1\n      pop\n        /* \"#utility.yul\":4640:4711   */\n      tag_102\n        /* \"#utility.yul\":4708:4709   */\n      0x00\n        /* \"#utility.yul\":4697:4706   */\n      dup4\n        /* \"#utility.yul\":4693:4710   */\n      add\n        /* \"#utility.yul\":4684:4690   */\n      dup6\n        /* \"#utility.yul\":4640:4711   */\n      tag_45\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4721:4793   */\n      tag_103\n        /* \"#utility.yul\":4789:4791   */\n      0x20\n        /* \"#utility.yul\":4778:4787   */\n      dup4\n        /* \"#utility.yul\":4774:4792   */\n      add\n        /* \"#utility.yul\":4765:4771   */\n      dup5\n        /* \"#utility.yul\":4721:4793   */\n      tag_42\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4468:4800   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cd684d7c73adb53c6e4bcf47c1202a304093b7072894771eea58aaa8813ff21064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061055d8061001c5f395ff3fe608060405260043610610049575f3560e01c806312065fe01461004d5780638da5cb5b14610077578063b69ef8a8146100a1578063c4d66de8146100cb578063d0e30db0146100f3575b5f80fd5b348015610058575f80fd5b506100616100fd565b60405161006e91906102f6565b60405180910390f35b348015610082575f80fd5b5061008b610106565b604051610098919061034e565b60405180910390f35b3480156100ac575f80fd5b506100b5610129565b6040516100c291906102f6565b60405180910390f35b3480156100d6575f80fd5b506100f160048036038101906100ec9190610395565b61012f565b005b6100fb6101fe565b005b5f600154905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b39061041a565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028290610482565b60405180910390fd5b3460015f82825461029c91906104cd565b925050819055507f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c433346040516102d4929190610500565b60405180910390a1565b5f819050919050565b6102f0816102de565b82525050565b5f6020820190506103095f8301846102e7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103388261030f565b9050919050565b6103488161032e565b82525050565b5f6020820190506103615f83018461033f565b92915050565b5f80fd5b6103748161032e565b811461037e575f80fd5b50565b5f8135905061038f8161036b565b92915050565b5f602082840312156103aa576103a9610367565b5b5f6103b784828501610381565b91505092915050565b5f82825260208201905092915050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f6104046013836103c0565b915061040f826103d0565b602082019050919050565b5f6020820190508181035f830152610431816103f8565b9050919050565b7f4f6e6c79206f776e65722063616e206465706f736974000000000000000000005f82015250565b5f61046c6016836103c0565b915061047782610438565b602082019050919050565b5f6020820190508181035f83015261049981610460565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6104d7826102de565b91506104e2836102de565b92508282019050808211156104fa576104f96104a0565b5b92915050565b5f6040820190506105135f83018561033f565b61052060208301846102e7565b939250505056fea2646970667358221220cd684d7c73adb53c6e4bcf47c1202a304093b7072894771eea58aaa8813ff21064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x55D DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x395 JUMP JUMPDEST PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x1FE JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3 SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x282 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x4CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP3 SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F0 DUP2 PUSH2 0x2DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x338 DUP3 PUSH2 0x30F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348 DUP2 PUSH2 0x32E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x361 PUSH0 DUP4 ADD DUP5 PUSH2 0x33F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x32E JUMP JUMPDEST DUP2 EQ PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38F DUP2 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x367 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3B7 DUP5 DUP3 DUP6 ADD PUSH2 0x381 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x404 PUSH1 0x13 DUP4 PUSH2 0x3C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x40F DUP3 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x431 DUP2 PUSH2 0x3F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E206465706F73697400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x46C PUSH1 0x16 DUP4 PUSH2 0x3C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x477 DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x499 DUP2 PUSH2 0x460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x4D7 DUP3 PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP PUSH2 0x4E2 DUP4 PUSH2 0x2DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4FA JUMPI PUSH2 0x4F9 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x513 PUSH0 DUP4 ADD DUP6 PUSH2 0x33F JUMP JUMPDEST PUSH2 0x520 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH9 0x4D7C73ADB53C6E4BCF SELFBALANCE 0xC1 KECCAK256 0x2A ADDRESS BLOCKHASH SWAP4 0xB7 SMOD 0x28 SWAP5 PUSH24 0x1EEA58AAA8813FF21064736F6C634300081A003300000000 ",
							"sourceMap": "58:554:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balance_525": {
									"entryPoint": 297,
									"id": 525,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_575": {
									"entryPoint": 510,
									"id": 575,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_583": {
									"entryPoint": 253,
									"id": 583,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_551": {
									"entryPoint": 303,
									"id": 551,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_523": {
									"entryPoint": 262,
									"id": 523,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4803:5",
										"nodeType": "YulBlock",
										"src": "0:4803:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:5",
													"nodeType": "YulBlock",
													"src": "52:32:5",
													"statements": [
														{
															"nativeSrc": "62:16:5",
															"nodeType": "YulAssignment",
															"src": "62:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:5",
																"nodeType": "YulIdentifier",
																"src": "73:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:77:5"
											},
											{
												"body": {
													"nativeSrc": "155:53:5",
													"nodeType": "YulBlock",
													"src": "155:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:5"
																		},
																		"nativeSrc": "177:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:5"
																},
																"nativeSrc": "165:37:5",
																"nodeType": "YulFunctionCall",
																"src": "165:37:5"
															},
															"nativeSrc": "165:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:5",
														"nodeType": "YulTypedName",
														"src": "143:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:5",
														"nodeType": "YulTypedName",
														"src": "150:3:5",
														"type": ""
													}
												],
												"src": "90:118:5"
											},
											{
												"body": {
													"nativeSrc": "312:124:5",
													"nodeType": "YulBlock",
													"src": "312:124:5",
													"statements": [
														{
															"nativeSrc": "322:26:5",
															"nodeType": "YulAssignment",
															"src": "322:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:5",
																		"nodeType": "YulLiteral",
																		"src": "345:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:5"
																},
																"nativeSrc": "330:18:5",
																"nodeType": "YulFunctionCall",
																"src": "330:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:5",
																				"nodeType": "YulLiteral",
																				"src": "426:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:5"
																		},
																		"nativeSrc": "411:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:5"
																},
																"nativeSrc": "358:71:5",
																"nodeType": "YulFunctionCall",
																"src": "358:71:5"
															},
															"nativeSrc": "358:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:5",
														"nodeType": "YulTypedName",
														"src": "284:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:5",
														"nodeType": "YulTypedName",
														"src": "296:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:5",
														"nodeType": "YulTypedName",
														"src": "307:4:5",
														"type": ""
													}
												],
												"src": "214:222:5"
											},
											{
												"body": {
													"nativeSrc": "487:81:5",
													"nodeType": "YulBlock",
													"src": "487:81:5",
													"statements": [
														{
															"nativeSrc": "497:65:5",
															"nodeType": "YulAssignment",
															"src": "497:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:5",
																		"nodeType": "YulLiteral",
																		"src": "519:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:5"
																},
																"nativeSrc": "508:54:5",
																"nodeType": "YulFunctionCall",
																"src": "508:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:5",
														"nodeType": "YulTypedName",
														"src": "469:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:5",
														"nodeType": "YulTypedName",
														"src": "479:7:5",
														"type": ""
													}
												],
												"src": "442:126:5"
											},
											{
												"body": {
													"nativeSrc": "619:51:5",
													"nodeType": "YulBlock",
													"src": "619:51:5",
													"statements": [
														{
															"nativeSrc": "629:35:5",
															"nodeType": "YulAssignment",
															"src": "629:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "658:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "640:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:5"
																},
																"nativeSrc": "640:24:5",
																"nodeType": "YulFunctionCall",
																"src": "640:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "629:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "574:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "601:5:5",
														"nodeType": "YulTypedName",
														"src": "601:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "611:7:5",
														"nodeType": "YulTypedName",
														"src": "611:7:5",
														"type": ""
													}
												],
												"src": "574:96:5"
											},
											{
												"body": {
													"nativeSrc": "741:53:5",
													"nodeType": "YulBlock",
													"src": "741:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "763:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:5"
																		},
																		"nativeSrc": "763:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:5"
																},
																"nativeSrc": "751:37:5",
																"nodeType": "YulFunctionCall",
																"src": "751:37:5"
															},
															"nativeSrc": "751:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "676:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:5",
														"nodeType": "YulTypedName",
														"src": "729:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:5",
														"nodeType": "YulTypedName",
														"src": "736:3:5",
														"type": ""
													}
												],
												"src": "676:118:5"
											},
											{
												"body": {
													"nativeSrc": "898:124:5",
													"nodeType": "YulBlock",
													"src": "898:124:5",
													"statements": [
														{
															"nativeSrc": "908:26:5",
															"nodeType": "YulAssignment",
															"src": "908:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:5",
																		"nodeType": "YulLiteral",
																		"src": "931:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:5"
																},
																"nativeSrc": "916:18:5",
																"nodeType": "YulFunctionCall",
																"src": "916:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:5"
																		},
																		"nativeSrc": "997:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "944:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:5"
																},
																"nativeSrc": "944:71:5",
																"nodeType": "YulFunctionCall",
																"src": "944:71:5"
															},
															"nativeSrc": "944:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "800:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:5",
														"nodeType": "YulTypedName",
														"src": "870:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:5",
														"nodeType": "YulTypedName",
														"src": "882:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:5",
														"nodeType": "YulTypedName",
														"src": "893:4:5",
														"type": ""
													}
												],
												"src": "800:222:5"
											},
											{
												"body": {
													"nativeSrc": "1068:35:5",
													"nodeType": "YulBlock",
													"src": "1068:35:5",
													"statements": [
														{
															"nativeSrc": "1078:19:5",
															"nodeType": "YulAssignment",
															"src": "1078:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:5"
																},
																"nativeSrc": "1088:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:5",
														"nodeType": "YulTypedName",
														"src": "1061:6:5",
														"type": ""
													}
												],
												"src": "1028:75:5"
											},
											{
												"body": {
													"nativeSrc": "1198:28:5",
													"nodeType": "YulBlock",
													"src": "1198:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:5"
																},
																"nativeSrc": "1208:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:5"
															},
															"nativeSrc": "1208:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:5"
											},
											{
												"body": {
													"nativeSrc": "1321:28:5",
													"nodeType": "YulBlock",
													"src": "1321:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:5"
																},
																"nativeSrc": "1331:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:5"
															},
															"nativeSrc": "1331:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:5"
											},
											{
												"body": {
													"nativeSrc": "1398:79:5",
													"nodeType": "YulBlock",
													"src": "1398:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:5",
																"nodeType": "YulBlock",
																"src": "1455:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:5"
																			},
																			"nativeSrc": "1457:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:5"
																		},
																		"nativeSrc": "1457:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1428:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:5"
																				},
																				"nativeSrc": "1428:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:5"
																		},
																		"nativeSrc": "1418:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:5"
																},
																"nativeSrc": "1411:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:5"
															},
															"nativeSrc": "1408:63:5",
															"nodeType": "YulIf",
															"src": "1408:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1355:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:5",
														"nodeType": "YulTypedName",
														"src": "1391:5:5",
														"type": ""
													}
												],
												"src": "1355:122:5"
											},
											{
												"body": {
													"nativeSrc": "1535:87:5",
													"nodeType": "YulBlock",
													"src": "1535:87:5",
													"statements": [
														{
															"nativeSrc": "1545:29:5",
															"nodeType": "YulAssignment",
															"src": "1545:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1567:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1554:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:5"
																},
																"nativeSrc": "1554:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1554:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1545:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1610:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1583:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:5"
																},
																"nativeSrc": "1583:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1583:33:5"
															},
															"nativeSrc": "1583:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1483:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1513:6:5",
														"nodeType": "YulTypedName",
														"src": "1513:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1521:3:5",
														"nodeType": "YulTypedName",
														"src": "1521:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1529:5:5",
														"nodeType": "YulTypedName",
														"src": "1529:5:5",
														"type": ""
													}
												],
												"src": "1483:139:5"
											},
											{
												"body": {
													"nativeSrc": "1694:263:5",
													"nodeType": "YulBlock",
													"src": "1694:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1740:83:5",
																"nodeType": "YulBlock",
																"src": "1740:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1742:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:5"
																			},
																			"nativeSrc": "1742:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:5"
																		},
																		"nativeSrc": "1742:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1724:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1711:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:5"
																		},
																		"nativeSrc": "1711:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1707:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:5"
																},
																"nativeSrc": "1707:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1707:32:5"
															},
															"nativeSrc": "1704:119:5",
															"nodeType": "YulIf",
															"src": "1704:119:5"
														},
														{
															"nativeSrc": "1833:117:5",
															"nodeType": "YulBlock",
															"src": "1833:117:5",
															"statements": [
																{
																	"nativeSrc": "1848:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1862:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1852:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1877:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1877:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1912:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1923:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1908:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:5"
																				},
																				"nativeSrc": "1908:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1932:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1887:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:5"
																		},
																		"nativeSrc": "1887:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1877:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1628:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1664:9:5",
														"nodeType": "YulTypedName",
														"src": "1664:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1675:7:5",
														"nodeType": "YulTypedName",
														"src": "1675:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1687:6:5",
														"nodeType": "YulTypedName",
														"src": "1687:6:5",
														"type": ""
													}
												],
												"src": "1628:329:5"
											},
											{
												"body": {
													"nativeSrc": "2059:73:5",
													"nodeType": "YulBlock",
													"src": "2059:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2076:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2081:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:5"
																},
																"nativeSrc": "2069:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2069:19:5"
															},
															"nativeSrc": "2069:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "2069:19:5"
														},
														{
															"nativeSrc": "2097:29:5",
															"nodeType": "YulAssignment",
															"src": "2097:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2116:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2116:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2121:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2121:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2112:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2112:3:5"
																},
																"nativeSrc": "2112:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2112:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2097:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "2097:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1963:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2031:3:5",
														"nodeType": "YulTypedName",
														"src": "2031:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2036:6:5",
														"nodeType": "YulTypedName",
														"src": "2036:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2047:11:5",
														"nodeType": "YulTypedName",
														"src": "2047:11:5",
														"type": ""
													}
												],
												"src": "1963:169:5"
											},
											{
												"body": {
													"nativeSrc": "2244:63:5",
													"nodeType": "YulBlock",
													"src": "2244:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2266:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2274:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2274:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2262:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2262:3:5"
																		},
																		"nativeSrc": "2262:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2262:14:5"
																	},
																	{
																		"hexValue": "416c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "2278:21:5",
																		"nodeType": "YulLiteral",
																		"src": "2278:21:5",
																		"type": "",
																		"value": "Already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2255:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:5"
																},
																"nativeSrc": "2255:45:5",
																"nodeType": "YulFunctionCall",
																"src": "2255:45:5"
															},
															"nativeSrc": "2255:45:5",
															"nodeType": "YulExpressionStatement",
															"src": "2255:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
												"nativeSrc": "2138:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2236:6:5",
														"nodeType": "YulTypedName",
														"src": "2236:6:5",
														"type": ""
													}
												],
												"src": "2138:169:5"
											},
											{
												"body": {
													"nativeSrc": "2459:220:5",
													"nodeType": "YulBlock",
													"src": "2459:220:5",
													"statements": [
														{
															"nativeSrc": "2469:74:5",
															"nodeType": "YulAssignment",
															"src": "2469:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2535:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2535:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2540:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2540:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2476:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "2476:58:5"
																},
																"nativeSrc": "2476:67:5",
																"nodeType": "YulFunctionCall",
																"src": "2476:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2469:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2641:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2641:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																	"nativeSrc": "2552:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "2552:88:5"
																},
																"nativeSrc": "2552:93:5",
																"nodeType": "YulFunctionCall",
																"src": "2552:93:5"
															},
															"nativeSrc": "2552:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "2552:93:5"
														},
														{
															"nativeSrc": "2654:19:5",
															"nodeType": "YulAssignment",
															"src": "2654:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2665:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2670:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2670:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2661:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2661:3:5"
																},
																"nativeSrc": "2661:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2661:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2654:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2313:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2447:3:5",
														"nodeType": "YulTypedName",
														"src": "2447:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2455:3:5",
														"nodeType": "YulTypedName",
														"src": "2455:3:5",
														"type": ""
													}
												],
												"src": "2313:366:5"
											},
											{
												"body": {
													"nativeSrc": "2856:248:5",
													"nodeType": "YulBlock",
													"src": "2856:248:5",
													"statements": [
														{
															"nativeSrc": "2866:26:5",
															"nodeType": "YulAssignment",
															"src": "2866:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2878:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2878:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2889:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2889:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2874:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2874:3:5"
																},
																"nativeSrc": "2874:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2874:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2866:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2866:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2913:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2913:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2924:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2924:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2909:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2909:3:5"
																		},
																		"nativeSrc": "2909:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2932:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2932:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2938:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2938:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2928:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2928:3:5"
																		},
																		"nativeSrc": "2928:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2928:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2902:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:5"
																},
																"nativeSrc": "2902:47:5",
																"nodeType": "YulFunctionCall",
																"src": "2902:47:5"
															},
															"nativeSrc": "2902:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "2902:47:5"
														},
														{
															"nativeSrc": "2958:139:5",
															"nodeType": "YulAssignment",
															"src": "2958:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3092:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3092:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2966:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "2966:124:5"
																},
																"nativeSrc": "2966:131:5",
																"nodeType": "YulFunctionCall",
																"src": "2966:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2958:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2958:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2685:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2836:9:5",
														"nodeType": "YulTypedName",
														"src": "2836:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2851:4:5",
														"nodeType": "YulTypedName",
														"src": "2851:4:5",
														"type": ""
													}
												],
												"src": "2685:419:5"
											},
											{
												"body": {
													"nativeSrc": "3216:66:5",
													"nodeType": "YulBlock",
													"src": "3216:66:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3238:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3238:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3246:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3246:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3234:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3234:3:5"
																		},
																		"nativeSrc": "3234:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:14:5"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e206465706f736974",
																		"kind": "string",
																		"nativeSrc": "3250:24:5",
																		"nodeType": "YulLiteral",
																		"src": "3250:24:5",
																		"type": "",
																		"value": "Only owner can deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3227:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:5"
																},
																"nativeSrc": "3227:48:5",
																"nodeType": "YulFunctionCall",
																"src": "3227:48:5"
															},
															"nativeSrc": "3227:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "3227:48:5"
														}
													]
												},
												"name": "store_literal_in_memory_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba",
												"nativeSrc": "3110:172:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3208:6:5",
														"nodeType": "YulTypedName",
														"src": "3208:6:5",
														"type": ""
													}
												],
												"src": "3110:172:5"
											},
											{
												"body": {
													"nativeSrc": "3434:220:5",
													"nodeType": "YulBlock",
													"src": "3434:220:5",
													"statements": [
														{
															"nativeSrc": "3444:74:5",
															"nodeType": "YulAssignment",
															"src": "3444:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3510:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3510:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3515:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3515:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3451:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "3451:58:5"
																},
																"nativeSrc": "3451:67:5",
																"nodeType": "YulFunctionCall",
																"src": "3451:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3444:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3444:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3616:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3616:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba",
																	"nativeSrc": "3527:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "3527:88:5"
																},
																"nativeSrc": "3527:93:5",
																"nodeType": "YulFunctionCall",
																"src": "3527:93:5"
															},
															"nativeSrc": "3527:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "3527:93:5"
														},
														{
															"nativeSrc": "3629:19:5",
															"nodeType": "YulAssignment",
															"src": "3629:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3640:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3640:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3645:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3645:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3636:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3636:3:5"
																},
																"nativeSrc": "3636:12:5",
																"nodeType": "YulFunctionCall",
																"src": "3636:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3629:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3288:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3422:3:5",
														"nodeType": "YulTypedName",
														"src": "3422:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3430:3:5",
														"nodeType": "YulTypedName",
														"src": "3430:3:5",
														"type": ""
													}
												],
												"src": "3288:366:5"
											},
											{
												"body": {
													"nativeSrc": "3831:248:5",
													"nodeType": "YulBlock",
													"src": "3831:248:5",
													"statements": [
														{
															"nativeSrc": "3841:26:5",
															"nodeType": "YulAssignment",
															"src": "3841:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3853:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3853:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3864:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3864:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3849:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3849:3:5"
																},
																"nativeSrc": "3849:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3849:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3841:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3841:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3888:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3899:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3899:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3884:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3884:3:5"
																		},
																		"nativeSrc": "3884:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3884:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3907:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "3907:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3913:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3913:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3903:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3903:3:5"
																		},
																		"nativeSrc": "3903:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3903:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3877:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3877:6:5"
																},
																"nativeSrc": "3877:47:5",
																"nodeType": "YulFunctionCall",
																"src": "3877:47:5"
															},
															"nativeSrc": "3877:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "3877:47:5"
														},
														{
															"nativeSrc": "3933:139:5",
															"nodeType": "YulAssignment",
															"src": "3933:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4067:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4067:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3941:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "3941:124:5"
																},
																"nativeSrc": "3941:131:5",
																"nodeType": "YulFunctionCall",
																"src": "3941:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3933:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3933:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3660:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3811:9:5",
														"nodeType": "YulTypedName",
														"src": "3811:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3826:4:5",
														"nodeType": "YulTypedName",
														"src": "3826:4:5",
														"type": ""
													}
												],
												"src": "3660:419:5"
											},
											{
												"body": {
													"nativeSrc": "4113:152:5",
													"nodeType": "YulBlock",
													"src": "4113:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4130:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4130:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4133:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4133:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4123:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:5"
																},
																"nativeSrc": "4123:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4123:88:5"
															},
															"nativeSrc": "4123:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4123:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4227:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4227:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4230:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4230:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4220:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:5"
																},
																"nativeSrc": "4220:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4220:15:5"
															},
															"nativeSrc": "4220:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4220:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4251:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4251:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4254:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4254:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4244:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4244:6:5"
																},
																"nativeSrc": "4244:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4244:15:5"
															},
															"nativeSrc": "4244:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4244:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4085:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4085:180:5"
											},
											{
												"body": {
													"nativeSrc": "4315:147:5",
													"nodeType": "YulBlock",
													"src": "4315:147:5",
													"statements": [
														{
															"nativeSrc": "4325:25:5",
															"nodeType": "YulAssignment",
															"src": "4325:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4348:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4348:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4330:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4330:17:5"
																},
																"nativeSrc": "4330:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4330:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4325:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4325:1:5"
																}
															]
														},
														{
															"nativeSrc": "4359:25:5",
															"nodeType": "YulAssignment",
															"src": "4359:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4382:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4382:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4364:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4364:17:5"
																},
																"nativeSrc": "4364:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4364:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4359:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4359:1:5"
																}
															]
														},
														{
															"nativeSrc": "4393:16:5",
															"nodeType": "YulAssignment",
															"src": "4393:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4404:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4404:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4407:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4407:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4400:3:5"
																},
																"nativeSrc": "4400:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4400:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4393:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4433:22:5",
																"nodeType": "YulBlock",
																"src": "4433:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4435:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4435:16:5"
																			},
																			"nativeSrc": "4435:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4435:18:5"
																		},
																		"nativeSrc": "4435:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4435:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4425:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4425:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4428:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4428:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4422:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4422:2:5"
																},
																"nativeSrc": "4422:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4422:10:5"
															},
															"nativeSrc": "4419:36:5",
															"nodeType": "YulIf",
															"src": "4419:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4271:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4302:1:5",
														"nodeType": "YulTypedName",
														"src": "4302:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4305:1:5",
														"nodeType": "YulTypedName",
														"src": "4305:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4311:3:5",
														"nodeType": "YulTypedName",
														"src": "4311:3:5",
														"type": ""
													}
												],
												"src": "4271:191:5"
											},
											{
												"body": {
													"nativeSrc": "4594:206:5",
													"nodeType": "YulBlock",
													"src": "4594:206:5",
													"statements": [
														{
															"nativeSrc": "4604:26:5",
															"nodeType": "YulAssignment",
															"src": "4604:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4616:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4616:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4627:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4627:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4612:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4612:3:5"
																},
																"nativeSrc": "4612:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4612:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4604:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4604:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4684:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4684:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4697:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4697:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4708:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4708:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4693:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4693:3:5"
																		},
																		"nativeSrc": "4693:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4693:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4640:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4640:43:5"
																},
																"nativeSrc": "4640:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4640:71:5"
															},
															"nativeSrc": "4640:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4640:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4765:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4765:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4778:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4778:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4789:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4789:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4774:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4774:3:5"
																		},
																		"nativeSrc": "4774:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4774:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4721:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4721:43:5"
																},
																"nativeSrc": "4721:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4721:72:5"
															},
															"nativeSrc": "4721:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4721:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4468:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4558:9:5",
														"nodeType": "YulTypedName",
														"src": "4558:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4570:6:5",
														"nodeType": "YulTypedName",
														"src": "4570:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4578:6:5",
														"nodeType": "YulTypedName",
														"src": "4578:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4589:4:5",
														"nodeType": "YulTypedName",
														"src": "4589:4:5",
														"type": ""
													}
												],
												"src": "4468:332:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can deposit\")\n\n    }\n\n    function abi_encode_t_stringliteral_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610049575f3560e01c806312065fe01461004d5780638da5cb5b14610077578063b69ef8a8146100a1578063c4d66de8146100cb578063d0e30db0146100f3575b5f80fd5b348015610058575f80fd5b506100616100fd565b60405161006e91906102f6565b60405180910390f35b348015610082575f80fd5b5061008b610106565b604051610098919061034e565b60405180910390f35b3480156100ac575f80fd5b506100b5610129565b6040516100c291906102f6565b60405180910390f35b3480156100d6575f80fd5b506100f160048036038101906100ec9190610395565b61012f565b005b6100fb6101fe565b005b5f600154905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b39061041a565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028290610482565b60405180910390fd5b3460015f82825461029c91906104cd565b925050819055507f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c433346040516102d4929190610500565b60405180910390a1565b5f819050919050565b6102f0816102de565b82525050565b5f6020820190506103095f8301846102e7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103388261030f565b9050919050565b6103488161032e565b82525050565b5f6020820190506103615f83018461033f565b92915050565b5f80fd5b6103748161032e565b811461037e575f80fd5b50565b5f8135905061038f8161036b565b92915050565b5f602082840312156103aa576103a9610367565b5b5f6103b784828501610381565b91505092915050565b5f82825260208201905092915050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f6104046013836103c0565b915061040f826103d0565b602082019050919050565b5f6020820190508181035f830152610431816103f8565b9050919050565b7f4f6e6c79206f776e65722063616e206465706f736974000000000000000000005f82015250565b5f61046c6016836103c0565b915061047782610438565b602082019050919050565b5f6020820190508181035f83015261049981610460565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6104d7826102de565b91506104e2836102de565b92508282019050808211156104fa576104f96104a0565b5b92915050565b5f6040820190506105135f83018561033f565b61052060208301846102e7565b939250505056fea2646970667358221220cd684d7c73adb53c6e4bcf47c1202a304093b7072894771eea58aaa8813ff21064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x395 JUMP JUMPDEST PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x1FE JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3 SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x282 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x4CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP3 SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F0 DUP2 PUSH2 0x2DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x338 DUP3 PUSH2 0x30F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348 DUP2 PUSH2 0x32E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x361 PUSH0 DUP4 ADD DUP5 PUSH2 0x33F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x32E JUMP JUMPDEST DUP2 EQ PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38F DUP2 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x367 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3B7 DUP5 DUP3 DUP6 ADD PUSH2 0x381 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x404 PUSH1 0x13 DUP4 PUSH2 0x3C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x40F DUP3 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x431 DUP2 PUSH2 0x3F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E206465706F73697400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x46C PUSH1 0x16 DUP4 PUSH2 0x3C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x477 DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x499 DUP2 PUSH2 0x460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x4D7 DUP3 PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP PUSH2 0x4E2 DUP4 PUSH2 0x2DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4FA JUMPI PUSH2 0x4F9 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x513 PUSH0 DUP4 ADD DUP6 PUSH2 0x33F JUMP JUMPDEST PUSH2 0x520 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH9 0x4D7C73ADB53C6E4BCF SELFBALANCE 0xC1 KECCAK256 0x2A ADDRESS BLOCKHASH SWAP4 0xB7 SMOD 0x28 SWAP5 PUSH24 0x1EEA58AAA8813FF21064736F6C634300081A003300000000 ",
							"sourceMap": "58:554:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;519:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;105:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;186:137;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;329:184;;;:::i;:::-;;519:85;564:7;590;;583:14;;519:85;:::o;79:20::-;;;;;;;;;;;;:::o;105:22::-;;;;:::o;186:137::-;266:1;249:19;;:5;;;;;;;;;;:19;;;241:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;310:6;302:5;;:14;;;;;;;;;;;;;;;;;;186:137;:::o;329:184::-;397:5;;;;;;;;;;383:19;;:10;:19;;;375:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;450:9;439:7;;:20;;;;;;;:::i;:::-;;;;;;;;474:32;484:10;496:9;474:32;;;;;;;:::i;:::-;;;;;;;;329:184::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:169::-;2047:11;2081:6;2076:3;2069:19;2121:4;2116:3;2112:14;2097:29;;1963:169;;;;:::o;2138:::-;2278:21;2274:1;2266:6;2262:14;2255:45;2138:169;:::o;2313:366::-;2455:3;2476:67;2540:2;2535:3;2476:67;:::i;:::-;2469:74;;2552:93;2641:3;2552:93;:::i;:::-;2670:2;2665:3;2661:12;2654:19;;2313:366;;;:::o;2685:419::-;2851:4;2889:2;2878:9;2874:18;2866:26;;2938:9;2932:4;2928:20;2924:1;2913:9;2909:17;2902:47;2966:131;3092:4;2966:131;:::i;:::-;2958:139;;2685:419;;;:::o;3110:172::-;3250:24;3246:1;3238:6;3234:14;3227:48;3110:172;:::o;3288:366::-;3430:3;3451:67;3515:2;3510:3;3451:67;:::i;:::-;3444:74;;3527:93;3616:3;3527:93;:::i;:::-;3645:2;3640:3;3636:12;3629:19;;3288:366;;;:::o;3660:419::-;3826:4;3864:2;3853:9;3849:18;3841:26;;3913:9;3907:4;3903:20;3899:1;3888:9;3884:17;3877:47;3941:131;4067:4;3941:131;:::i;:::-;3933:139;;3660:419;;;:::o;4085:180::-;4133:77;4130:1;4123:88;4230:4;4227:1;4220:15;4254:4;4251:1;4244:15;4271:191;4311:3;4330:20;4348:1;4330:20;:::i;:::-;4325:25;;4364:20;4382:1;4364:20;:::i;:::-;4359:25;;4407:1;4404;4400:9;4393:16;;4428:3;4425:1;4422:10;4419:36;;;4435:18;;:::i;:::-;4419:36;4271:191;;;;:::o;4468:332::-;4589:4;4627:2;4616:9;4612:18;4604:26;;4640:71;4708:1;4697:9;4693:17;4684:6;4640:71;:::i;:::-;4721:72;4789:2;4778:9;4774:18;4765:6;4721:72;:::i;:::-;4468:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "274600",
								"executionCost": "310",
								"totalCost": "274910"
							},
							"external": {
								"balance()": "2447",
								"deposit()": "infinite",
								"getBalance()": "2410",
								"initialize(address)": "26925",
								"owner()": "2505"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 612,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 612,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 612,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 612,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 612,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 612,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 612,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 612,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 612,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 58,
									"end": 612,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 612,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd684d7c73adb53c6e4bcf47c1202a304093b7072894771eea58aaa8813ff21064736f6c634300081a0033",
									".code": [
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "12065FE0"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "B69EF8A8"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "C4D66DE8"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "D0E30DB0"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 519,
											"end": 604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 519,
											"end": 604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 79,
											"end": 99,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 79,
											"end": 99,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 105,
											"end": 127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 105,
											"end": 127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 186,
											"end": 323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 186,
											"end": 323,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 186,
											"end": 323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 186,
											"end": 323,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 186,
											"end": 323,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 186,
											"end": 323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 186,
											"end": 323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 186,
											"end": 323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 186,
											"end": 323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 329,
											"end": 513,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 329,
											"end": 513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 329,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 329,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 329,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 329,
											"end": 513,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 329,
											"end": 513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 329,
											"end": 513,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 519,
											"end": 604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 564,
											"end": 571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 597,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 590,
											"end": 597,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 583,
											"end": 597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 79,
											"end": 99,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 105,
											"end": 127,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 105,
											"end": 127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 186,
											"end": 323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 249,
											"end": 254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 249,
											"end": 254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 249,
											"end": 254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 249,
											"end": 254,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 249,
											"end": 254,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 249,
											"end": 254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 249,
											"end": 254,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 249,
											"end": 254,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 249,
											"end": 254,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 249,
											"end": 268,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 249,
											"end": 268,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 241,
											"end": 292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 292,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 241,
											"end": 292,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 292,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 241,
											"end": 292,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 241,
											"end": 292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 241,
											"end": 292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 292,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 241,
											"end": 292,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 241,
											"end": 292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 302,
											"end": 307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 302,
											"end": 316,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 316,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 316,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 302,
											"end": 316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 186,
											"end": 323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 329,
											"end": 513,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 329,
											"end": 513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 397,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 402,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 397,
											"end": 402,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 397,
											"end": 402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 397,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 397,
											"end": 402,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 397,
											"end": 402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 397,
											"end": 402,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 397,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 397,
											"end": 402,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 383,
											"end": 393,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 383,
											"end": 402,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 375,
											"end": 429,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 429,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 375,
											"end": 429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 375,
											"end": 429,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 375,
											"end": 429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 375,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 375,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 429,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 375,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 375,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 450,
											"end": 459,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 459,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 439,
											"end": 459,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 439,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 439,
											"end": 459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "PUSH",
											"source": 3,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 484,
											"end": 494,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 496,
											"end": 505,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 474,
											"end": 506,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 474,
											"end": 506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 506,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2307,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2138,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "PUSH",
											"source": 5,
											"value": "416C726561647920696E697469616C697A656400000000000000000000000000"
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2300,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2540,
											"end": 2542,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2535,
											"end": 2538,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2476,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2543,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2476,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2543,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2641,
											"end": 2644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2552,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2645,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2552,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2673,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2654,
											"end": 2673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2654,
											"end": 2673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2891,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2938,
											"end": 2947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2936,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2948,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2949,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2966,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3092,
											"end": 3096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2966,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2966,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2966,
											"end": 3097,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2966,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 3104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3282,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3110,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3274,
											"name": "PUSH",
											"source": 5,
											"value": "4F6E6C79206F776E65722063616E206465706F73697400000000000000000000"
										},
										{
											"begin": 3246,
											"end": 3247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3244,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3654,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3288,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3515,
											"end": 3517,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3510,
											"end": 3513,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3451,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3518,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3451,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3444,
											"end": 3518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3444,
											"end": 3518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3616,
											"end": 3619,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3527,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3620,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3527,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3640,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 4079,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3660,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3864,
											"end": 3866,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3913,
											"end": 3922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 3911,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 3923,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3899,
											"end": 3900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3924,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3941,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4072,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3941,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 4072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 4072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 4079,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 4079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 4079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 4079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4085,
											"end": 4265,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4085,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4210,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4130,
											"end": 4131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4211,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4230,
											"end": 4234,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4220,
											"end": 4235,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4258,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4259,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4462,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4271,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4330,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4350,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4330,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4325,
											"end": 4350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4325,
											"end": 4350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4382,
											"end": 4383,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4364,
											"end": 4384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4384,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4409,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4393,
											"end": 4409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4393,
											"end": 4409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4428,
											"end": 4431,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4422,
											"end": 4432,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4455,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4419,
											"end": 4455,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4435,
											"end": 4453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4455,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4419,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4462,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4468,
											"end": 4800,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4468,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4593,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4616,
											"end": 4625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4612,
											"end": 4630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4708,
											"end": 4709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4684,
											"end": 4690,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4640,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4711,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4640,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4778,
											"end": 4787,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4774,
											"end": 4792,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4765,
											"end": 4771,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4721,
											"end": 4793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4793,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4721,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4468,
											"end": 4800,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4468,
											"end": 4800,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4468,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4468,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4468,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4468,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/Vault.sol",
								"Contracts/VaultFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balance()": "b69ef8a8",
							"deposit()": "d0e30db0",
							"getBalance()": "12065fe0",
							"initialize(address)": "c4d66de8",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Vault.sol\":\"Vault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/Vault.sol\":{\"keccak256\":\"0xa27b7593b907c38d12d277fbc082bbcd1c8571c2015c6eedc3c2a71776f75b01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://804c235f43635db1fce3a354df285c7122bae95ec8c4372de32abae74b574e17\",\"dweb:/ipfs/QmasJvSo7MwrGymHTsArJZpcnNa1CAm1i3uZUujnH5KeKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 523,
								"contract": "Contracts/Vault.sol:Vault",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 525,
								"contract": "Contracts/Vault.sol:Vault",
								"label": "balance",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/VaultFactory.sol": {
				"VaultFactory": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newVault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "VaultCreated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "createVault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/VaultFactory.sol\":132:680  contract VaultFactory {... */\n  mstore(0x40, 0xa0)\n    /* \"Contracts/VaultFactory.sol\":264:358  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Contracts/VaultFactory.sol\":313:324  new Vault() */\n  mload(0x40)\n  tag_4\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_6\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_6:\n  pop\n    /* \"Contracts/VaultFactory.sol\":288:325  implementation = address(new Vault()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Contracts/VaultFactory.sol\":132:680  contract VaultFactory {... */\n  jump(tag_7)\ntag_5:\n  dataSize(sub_1)\n  dup1\n  dataOffset(sub_1)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\ntag_7:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x253f1b147b4889852e9b1c570dd9d3e9c39aab5859e44f2ec74d7528f2f54a9d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Contracts/VaultFactory.sol\":132:680  contract VaultFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c60da1b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5d12928b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/VaultFactory.sol\":160:199  address public immutable implementation */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/VaultFactory.sol\":364:673  function createVault() external returns (address) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/VaultFactory.sol\":160:199  address public immutable implementation */\n    tag_6:\n      immutable(\"0x253f1b147b4889852e9b1c570dd9d3e9c39aab5859e44f2ec74d7528f2f54a9d\")\n      dup2\n      jump\t// out\n        /* \"Contracts/VaultFactory.sol\":364:673  function createVault() external returns (address) {... */\n    tag_10:\n        /* \"Contracts/VaultFactory.sol\":405:412  address */\n      0x00\n        /* \"Contracts/VaultFactory.sol\":424:437  address clone */\n      dup1\n        /* \"Contracts/VaultFactory.sol\":440:468  Clones.clone(implementation) */\n      tag_13\n        /* \"Contracts/VaultFactory.sol\":453:467  implementation */\n      immutable(\"0x253f1b147b4889852e9b1c570dd9d3e9c39aab5859e44f2ec74d7528f2f54a9d\")\n        /* \"Contracts/VaultFactory.sol\":440:452  Clones.clone */\n      tag_14\n        /* \"Contracts/VaultFactory.sol\":440:468  Clones.clone(implementation) */\n      jump\t// in\n    tag_13:\n        /* \"Contracts/VaultFactory.sol\":424:468  address clone = Clones.clone(implementation) */\n      swap1\n      pop\n        /* \"Contracts/VaultFactory.sol\":508:513  clone */\n      dup1\n        /* \"Contracts/VaultFactory.sol\":502:525  Vault(clone).initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc4d66de8\n        /* \"Contracts/VaultFactory.sol\":534:576  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Contracts/VaultFactory.sol\":502:578  Vault(clone).initialize(address(0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_15:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/VaultFactory.sol\":613:644  VaultCreated(clone, msg.sender) */\n      0x5d9c31ffa0fecffd7cf379989a3c7af252f0335e0d2a1320b55245912c781f53\n        /* \"Contracts/VaultFactory.sol\":626:631  clone */\n      dup2\n        /* \"Contracts/VaultFactory.sol\":633:643  msg.sender */\n      caller\n        /* \"Contracts/VaultFactory.sol\":613:644  VaultCreated(clone, msg.sender) */\n      mload(0x40)\n      tag_19\n      swap3\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/VaultFactory.sol\":661:666  clone */\n      dup1\n        /* \"Contracts/VaultFactory.sol\":654:666  return clone */\n      swap2\n      pop\n      pop\n        /* \"Contracts/VaultFactory.sol\":364:673  function createVault() external returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1070:1193  function clone(address implementation) internal returns (address instance) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1127:1143  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1162:1186  clone(implementation, 0) */\n      tag_22\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1168:1182  implementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1184:1185  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1162:1167  clone */\n      tag_23\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1162:1186  clone(implementation, 0) */\n      jump\t// in\n    tag_22:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1155:1186  return clone(implementation, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1070:1193  function clone(address implementation) internal returns (address instance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1585:2495  function clone(address implementation, uint256 value) internal returns (address instance) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1657:1673  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1713:1718  value */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1689:1710  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1689:1718  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1685:1808  if (address(this).balance < value) {... */\n      iszero\n      tag_25\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1768:1789  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1791:1796  value */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1741:1797  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1685:1808  if (address(this).balance < value) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2094:2142  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2076:2090  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2070:2074  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2066:2091  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2060:2064  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2056:2092  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2053:2143  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2047:2051  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2040:2144  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2301:2333  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2284:2298  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2278:2282  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2274:2299  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2271:2334  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2265:2269  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2258:2335  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2380:2384  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2374:2378  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2367:2372  value */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2360:2385  create(value, 0x09, 0x37) */\n      create\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2348:2385  instance := create(value, 0x09, 0x37) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2428:2429  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2408:2430  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2408:2416  instance */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2408:2430  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2404:2489  if (instance == address(0)) {... */\n      tag_28\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2453:2478  Errors.FailedDeployment() */\n      mload(0x40)\n      0xb06ebf3d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2404:2489  if (instance == address(0)) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1585:2495  function clone(address implementation, uint256 value) internal returns (address instance) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_29:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_30:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_37\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_29\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_31:\n        /* \"#utility.yul\":328:352   */\n      tag_39\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_30\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_8:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_41\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_31\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:925   */\n    tag_20:\n        /* \"#utility.yul\":714:718   */\n      0x00\n        /* \"#utility.yul\":752:754   */\n      0x40\n        /* \"#utility.yul\":741:750   */\n      dup3\n        /* \"#utility.yul\":737:755   */\n      add\n        /* \"#utility.yul\":729:755   */\n      swap1\n      pop\n        /* \"#utility.yul\":765:836   */\n      tag_43\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":822:831   */\n      dup4\n        /* \"#utility.yul\":818:835   */\n      add\n        /* \"#utility.yul\":809:815   */\n      dup6\n        /* \"#utility.yul\":765:836   */\n      tag_31\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":846:918   */\n      tag_44\n        /* \"#utility.yul\":914:916   */\n      0x20\n        /* \"#utility.yul\":903:912   */\n      dup4\n        /* \"#utility.yul\":899:917   */\n      add\n        /* \"#utility.yul\":890:896   */\n      dup5\n        /* \"#utility.yul\":846:918   */\n      tag_31\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":593:925   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":931:1008   */\n    tag_32:\n        /* \"#utility.yul\":968:975   */\n      0x00\n        /* \"#utility.yul\":997:1002   */\n      dup2\n        /* \"#utility.yul\":986:1002   */\n      swap1\n      pop\n        /* \"#utility.yul\":931:1008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1014:1132   */\n    tag_33:\n        /* \"#utility.yul\":1101:1125   */\n      tag_47\n        /* \"#utility.yul\":1119:1124   */\n      dup2\n        /* \"#utility.yul\":1101:1125   */\n      tag_32\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1096:1099   */\n      dup3\n        /* \"#utility.yul\":1089:1126   */\n      mstore\n        /* \"#utility.yul\":1014:1132   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1138:1470   */\n    tag_27:\n        /* \"#utility.yul\":1259:1263   */\n      0x00\n        /* \"#utility.yul\":1297:1299   */\n      0x40\n        /* \"#utility.yul\":1286:1295   */\n      dup3\n        /* \"#utility.yul\":1282:1300   */\n      add\n        /* \"#utility.yul\":1274:1300   */\n      swap1\n      pop\n        /* \"#utility.yul\":1310:1381   */\n      tag_49\n        /* \"#utility.yul\":1378:1379   */\n      0x00\n        /* \"#utility.yul\":1367:1376   */\n      dup4\n        /* \"#utility.yul\":1363:1380   */\n      add\n        /* \"#utility.yul\":1354:1360   */\n      dup6\n        /* \"#utility.yul\":1310:1381   */\n      tag_33\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1391:1463   */\n      tag_50\n        /* \"#utility.yul\":1459:1461   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup4\n        /* \"#utility.yul\":1444:1462   */\n      add\n        /* \"#utility.yul\":1435:1441   */\n      dup5\n        /* \"#utility.yul\":1391:1463   */\n      tag_33\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1138:1470   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a57e50634c1aeab73c5934050ed75fe22320fd9f925df45ca66b72b489fa4ca564736f6c634300081a0033\n}\n\nsub_1: assembly {\n        /* \"Contracts/Vault.sol\":58:612  contract Vault {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      0x00\n      codecopy\n      0x00\n      return\n    stop\n\n    sub_0: assembly {\n            /* \"Contracts/Vault.sol\":58:612  contract Vault {... */\n          mstore(0x40, 0x80)\n          jumpi(tag_1, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x12065fe0\n          eq\n          tag_2\n          jumpi\n          dup1\n          0x8da5cb5b\n          eq\n          tag_3\n          jumpi\n          dup1\n          0xb69ef8a8\n          eq\n          tag_4\n          jumpi\n          dup1\n          0xc4d66de8\n          eq\n          tag_5\n          jumpi\n          dup1\n          0xd0e30db0\n          eq\n          tag_6\n          jumpi\n        tag_1:\n          0x00\n          dup1\n          revert\n            /* \"Contracts/Vault.sol\":519:604  function getBalance() external view returns (uint256) {... */\n        tag_2:\n          callvalue\n          dup1\n          iszero\n          tag_7\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_7:\n          pop\n          tag_8\n          tag_9\n          jump\t// in\n        tag_8:\n          mload(0x40)\n          tag_10\n          swap2\n          swap1\n          tag_11\n          jump\t// in\n        tag_10:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"Contracts/Vault.sol\":79:99  address public owner */\n        tag_3:\n          callvalue\n          dup1\n          iszero\n          tag_12\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_12:\n          pop\n          tag_13\n          tag_14\n          jump\t// in\n        tag_13:\n          mload(0x40)\n          tag_15\n          swap2\n          swap1\n          tag_16\n          jump\t// in\n        tag_15:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"Contracts/Vault.sol\":105:127  uint256 public balance */\n        tag_4:\n          callvalue\n          dup1\n          iszero\n          tag_17\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_17:\n          pop\n          tag_18\n          tag_19\n          jump\t// in\n        tag_18:\n          mload(0x40)\n          tag_20\n          swap2\n          swap1\n          tag_11\n          jump\t// in\n        tag_20:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"Contracts/Vault.sol\":186:323  function initialize(address _owner) external {... */\n        tag_5:\n          callvalue\n          dup1\n          iszero\n          tag_21\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_21:\n          pop\n          tag_22\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_23\n          swap2\n          swap1\n          tag_24\n          jump\t// in\n        tag_23:\n          tag_25\n          jump\t// in\n        tag_22:\n          stop\n            /* \"Contracts/Vault.sol\":329:513  function deposit() external payable {... */\n        tag_6:\n          tag_26\n          tag_27\n          jump\t// in\n        tag_26:\n          stop\n            /* \"Contracts/Vault.sol\":519:604  function getBalance() external view returns (uint256) {... */\n        tag_9:\n            /* \"Contracts/Vault.sol\":564:571  uint256 */\n          0x00\n            /* \"Contracts/Vault.sol\":590:597  balance */\n          sload(0x01)\n            /* \"Contracts/Vault.sol\":583:597  return balance */\n          swap1\n          pop\n            /* \"Contracts/Vault.sol\":519:604  function getBalance() external view returns (uint256) {... */\n          swap1\n          jump\t// out\n            /* \"Contracts/Vault.sol\":79:99  address public owner */\n        tag_14:\n          0x00\n          dup1\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          jump\t// out\n            /* \"Contracts/Vault.sol\":105:127  uint256 public balance */\n        tag_19:\n          sload(0x01)\n          dup2\n          jump\t// out\n            /* \"Contracts/Vault.sol\":186:323  function initialize(address _owner) external {... */\n        tag_25:\n            /* \"Contracts/Vault.sol\":266:267  0 */\n          0x00\n            /* \"Contracts/Vault.sol\":249:268  owner == address(0) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"Contracts/Vault.sol\":249:254  owner */\n          0x00\n          dup1\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"Contracts/Vault.sol\":249:268  owner == address(0) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          eq\n            /* \"Contracts/Vault.sol\":241:292  require(owner == address(0), \"Already initialized\") */\n          tag_30\n          jumpi\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x04\n          add\n          tag_31\n          swap1\n          tag_32\n          jump\t// in\n        tag_31:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n        tag_30:\n            /* \"Contracts/Vault.sol\":310:316  _owner */\n          dup1\n            /* \"Contracts/Vault.sol\":302:307  owner */\n          0x00\n          dup1\n            /* \"Contracts/Vault.sol\":302:316  owner = _owner */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n          mul\n          not\n          and\n          swap1\n          dup4\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"Contracts/Vault.sol\":186:323  function initialize(address _owner) external {... */\n          pop\n          jump\t// out\n            /* \"Contracts/Vault.sol\":329:513  function deposit() external payable {... */\n        tag_27:\n            /* \"Contracts/Vault.sol\":397:402  owner */\n          0x00\n          dup1\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"Contracts/Vault.sol\":383:402  msg.sender == owner */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"Contracts/Vault.sol\":383:393  msg.sender */\n          caller\n            /* \"Contracts/Vault.sol\":383:402  msg.sender == owner */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          eq\n            /* \"Contracts/Vault.sol\":375:429  require(msg.sender == owner, \"Only owner can deposit\") */\n          tag_34\n          jumpi\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x04\n          add\n          tag_35\n          swap1\n          tag_36\n          jump\t// in\n        tag_35:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n        tag_34:\n            /* \"Contracts/Vault.sol\":450:459  msg.value */\n          callvalue\n            /* \"Contracts/Vault.sol\":439:446  balance */\n          0x01\n          0x00\n            /* \"Contracts/Vault.sol\":439:459  balance += msg.value */\n          dup3\n          dup3\n          sload\n          tag_37\n          swap2\n          swap1\n          tag_38\n          jump\t// in\n        tag_37:\n          swap3\n          pop\n          pop\n          dup2\n          swap1\n          sstore\n          pop\n            /* \"Contracts/Vault.sol\":474:506  Deposited(msg.sender, msg.value) */\n          0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n            /* \"Contracts/Vault.sol\":484:494  msg.sender */\n          caller\n            /* \"Contracts/Vault.sol\":496:505  msg.value */\n          callvalue\n            /* \"Contracts/Vault.sol\":474:506  Deposited(msg.sender, msg.value) */\n          mload(0x40)\n          tag_39\n          swap3\n          swap2\n          swap1\n          tag_40\n          jump\t// in\n        tag_39:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log1\n            /* \"Contracts/Vault.sol\":329:513  function deposit() external payable {... */\n          jump\t// out\n            /* \"#utility.yul\":7:84   */\n        tag_41:\n            /* \"#utility.yul\":44:51   */\n          0x00\n            /* \"#utility.yul\":73:78   */\n          dup2\n            /* \"#utility.yul\":62:78   */\n          swap1\n          pop\n            /* \"#utility.yul\":7:84   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":90:208   */\n        tag_42:\n            /* \"#utility.yul\":177:201   */\n          tag_60\n            /* \"#utility.yul\":195:200   */\n          dup2\n            /* \"#utility.yul\":177:201   */\n          tag_41\n          jump\t// in\n        tag_60:\n            /* \"#utility.yul\":172:175   */\n          dup3\n            /* \"#utility.yul\":165:202   */\n          mstore\n            /* \"#utility.yul\":90:208   */\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":214:436   */\n        tag_11:\n            /* \"#utility.yul\":307:311   */\n          0x00\n            /* \"#utility.yul\":345:347   */\n          0x20\n            /* \"#utility.yul\":334:343   */\n          dup3\n            /* \"#utility.yul\":330:348   */\n          add\n            /* \"#utility.yul\":322:348   */\n          swap1\n          pop\n            /* \"#utility.yul\":358:429   */\n          tag_62\n            /* \"#utility.yul\":426:427   */\n          0x00\n            /* \"#utility.yul\":415:424   */\n          dup4\n            /* \"#utility.yul\":411:428   */\n          add\n            /* \"#utility.yul\":402:408   */\n          dup5\n            /* \"#utility.yul\":358:429   */\n          tag_42\n          jump\t// in\n        tag_62:\n            /* \"#utility.yul\":214:436   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":442:568   */\n        tag_43:\n            /* \"#utility.yul\":479:486   */\n          0x00\n            /* \"#utility.yul\":519:561   */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"#utility.yul\":512:517   */\n          dup3\n            /* \"#utility.yul\":508:562   */\n          and\n            /* \"#utility.yul\":497:562   */\n          swap1\n          pop\n            /* \"#utility.yul\":442:568   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":574:670   */\n        tag_44:\n            /* \"#utility.yul\":611:618   */\n          0x00\n            /* \"#utility.yul\":640:664   */\n          tag_65\n            /* \"#utility.yul\":658:663   */\n          dup3\n            /* \"#utility.yul\":640:664   */\n          tag_43\n          jump\t// in\n        tag_65:\n            /* \"#utility.yul\":629:664   */\n          swap1\n          pop\n            /* \"#utility.yul\":574:670   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":676:794   */\n        tag_45:\n            /* \"#utility.yul\":763:787   */\n          tag_67\n            /* \"#utility.yul\":781:786   */\n          dup2\n            /* \"#utility.yul\":763:787   */\n          tag_44\n          jump\t// in\n        tag_67:\n            /* \"#utility.yul\":758:761   */\n          dup3\n            /* \"#utility.yul\":751:788   */\n          mstore\n            /* \"#utility.yul\":676:794   */\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":800:1022   */\n        tag_16:\n            /* \"#utility.yul\":893:897   */\n          0x00\n            /* \"#utility.yul\":931:933   */\n          0x20\n            /* \"#utility.yul\":920:929   */\n          dup3\n            /* \"#utility.yul\":916:934   */\n          add\n            /* \"#utility.yul\":908:934   */\n          swap1\n          pop\n            /* \"#utility.yul\":944:1015   */\n          tag_69\n            /* \"#utility.yul\":1012:1013   */\n          0x00\n            /* \"#utility.yul\":1001:1010   */\n          dup4\n            /* \"#utility.yul\":997:1014   */\n          add\n            /* \"#utility.yul\":988:994   */\n          dup5\n            /* \"#utility.yul\":944:1015   */\n          tag_45\n          jump\t// in\n        tag_69:\n            /* \"#utility.yul\":800:1022   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1109:1226   */\n        tag_47:\n            /* \"#utility.yul\":1218:1219   */\n          0x00\n            /* \"#utility.yul\":1215:1216   */\n          dup1\n            /* \"#utility.yul\":1208:1220   */\n          revert\n            /* \"#utility.yul\":1355:1477   */\n        tag_49:\n            /* \"#utility.yul\":1428:1452   */\n          tag_74\n            /* \"#utility.yul\":1446:1451   */\n          dup2\n            /* \"#utility.yul\":1428:1452   */\n          tag_44\n          jump\t// in\n        tag_74:\n            /* \"#utility.yul\":1421:1426   */\n          dup2\n            /* \"#utility.yul\":1418:1453   */\n          eq\n            /* \"#utility.yul\":1408:1471   */\n          tag_75\n          jumpi\n            /* \"#utility.yul\":1467:1468   */\n          0x00\n            /* \"#utility.yul\":1464:1465   */\n          dup1\n            /* \"#utility.yul\":1457:1469   */\n          revert\n            /* \"#utility.yul\":1408:1471   */\n        tag_75:\n            /* \"#utility.yul\":1355:1477   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1483:1622   */\n        tag_50:\n            /* \"#utility.yul\":1529:1534   */\n          0x00\n            /* \"#utility.yul\":1567:1573   */\n          dup2\n            /* \"#utility.yul\":1554:1574   */\n          calldataload\n            /* \"#utility.yul\":1545:1574   */\n          swap1\n          pop\n            /* \"#utility.yul\":1583:1616   */\n          tag_77\n            /* \"#utility.yul\":1610:1615   */\n          dup2\n            /* \"#utility.yul\":1583:1616   */\n          tag_49\n          jump\t// in\n        tag_77:\n            /* \"#utility.yul\":1483:1622   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1628:1957   */\n        tag_24:\n            /* \"#utility.yul\":1687:1693   */\n          0x00\n            /* \"#utility.yul\":1736:1738   */\n          0x20\n            /* \"#utility.yul\":1724:1733   */\n          dup3\n            /* \"#utility.yul\":1715:1722   */\n          dup5\n            /* \"#utility.yul\":1711:1734   */\n          sub\n            /* \"#utility.yul\":1707:1739   */\n          slt\n            /* \"#utility.yul\":1704:1823   */\n          iszero\n          tag_79\n          jumpi\n            /* \"#utility.yul\":1742:1821   */\n          tag_80\n          tag_47\n          jump\t// in\n        tag_80:\n            /* \"#utility.yul\":1704:1823   */\n        tag_79:\n            /* \"#utility.yul\":1862:1863   */\n          0x00\n            /* \"#utility.yul\":1887:1940   */\n          tag_81\n            /* \"#utility.yul\":1932:1939   */\n          dup5\n            /* \"#utility.yul\":1923:1929   */\n          dup3\n            /* \"#utility.yul\":1912:1921   */\n          dup6\n            /* \"#utility.yul\":1908:1930   */\n          add\n            /* \"#utility.yul\":1887:1940   */\n          tag_50\n          jump\t// in\n        tag_81:\n            /* \"#utility.yul\":1877:1940   */\n          swap2\n          pop\n            /* \"#utility.yul\":1833:1950   */\n          pop\n            /* \"#utility.yul\":1628:1957   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1963:2132   */\n        tag_51:\n            /* \"#utility.yul\":2047:2058   */\n          0x00\n            /* \"#utility.yul\":2081:2087   */\n          dup3\n            /* \"#utility.yul\":2076:2079   */\n          dup3\n            /* \"#utility.yul\":2069:2088   */\n          mstore\n            /* \"#utility.yul\":2121:2125   */\n          0x20\n            /* \"#utility.yul\":2116:2119   */\n          dup3\n            /* \"#utility.yul\":2112:2126   */\n          add\n            /* \"#utility.yul\":2097:2126   */\n          swap1\n          pop\n            /* \"#utility.yul\":1963:2132   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2138:2307   */\n        tag_52:\n            /* \"#utility.yul\":2278:2299   */\n          0x416c726561647920696e697469616c697a656400000000000000000000000000\n            /* \"#utility.yul\":2274:2275   */\n          0x00\n            /* \"#utility.yul\":2266:2272   */\n          dup3\n            /* \"#utility.yul\":2262:2276   */\n          add\n            /* \"#utility.yul\":2255:2300   */\n          mstore\n            /* \"#utility.yul\":2138:2307   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2313:2679   */\n        tag_53:\n            /* \"#utility.yul\":2455:2458   */\n          0x00\n            /* \"#utility.yul\":2476:2543   */\n          tag_85\n            /* \"#utility.yul\":2540:2542   */\n          0x13\n            /* \"#utility.yul\":2535:2538   */\n          dup4\n            /* \"#utility.yul\":2476:2543   */\n          tag_51\n          jump\t// in\n        tag_85:\n            /* \"#utility.yul\":2469:2543   */\n          swap2\n          pop\n            /* \"#utility.yul\":2552:2645   */\n          tag_86\n            /* \"#utility.yul\":2641:2644   */\n          dup3\n            /* \"#utility.yul\":2552:2645   */\n          tag_52\n          jump\t// in\n        tag_86:\n            /* \"#utility.yul\":2670:2672   */\n          0x20\n            /* \"#utility.yul\":2665:2668   */\n          dup3\n            /* \"#utility.yul\":2661:2673   */\n          add\n            /* \"#utility.yul\":2654:2673   */\n          swap1\n          pop\n            /* \"#utility.yul\":2313:2679   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2685:3104   */\n        tag_32:\n            /* \"#utility.yul\":2851:2855   */\n          0x00\n            /* \"#utility.yul\":2889:2891   */\n          0x20\n            /* \"#utility.yul\":2878:2887   */\n          dup3\n            /* \"#utility.yul\":2874:2892   */\n          add\n            /* \"#utility.yul\":2866:2892   */\n          swap1\n          pop\n            /* \"#utility.yul\":2938:2947   */\n          dup2\n            /* \"#utility.yul\":2932:2936   */\n          dup2\n            /* \"#utility.yul\":2928:2948   */\n          sub\n            /* \"#utility.yul\":2924:2925   */\n          0x00\n            /* \"#utility.yul\":2913:2922   */\n          dup4\n            /* \"#utility.yul\":2909:2926   */\n          add\n            /* \"#utility.yul\":2902:2949   */\n          mstore\n            /* \"#utility.yul\":2966:3097   */\n          tag_88\n            /* \"#utility.yul\":3092:3096   */\n          dup2\n            /* \"#utility.yul\":2966:3097   */\n          tag_53\n          jump\t// in\n        tag_88:\n            /* \"#utility.yul\":2958:3097   */\n          swap1\n          pop\n            /* \"#utility.yul\":2685:3104   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":3110:3282   */\n        tag_54:\n            /* \"#utility.yul\":3250:3274   */\n          0x4f6e6c79206f776e65722063616e206465706f73697400000000000000000000\n            /* \"#utility.yul\":3246:3247   */\n          0x00\n            /* \"#utility.yul\":3238:3244   */\n          dup3\n            /* \"#utility.yul\":3234:3248   */\n          add\n            /* \"#utility.yul\":3227:3275   */\n          mstore\n            /* \"#utility.yul\":3110:3282   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":3288:3654   */\n        tag_55:\n            /* \"#utility.yul\":3430:3433   */\n          0x00\n            /* \"#utility.yul\":3451:3518   */\n          tag_91\n            /* \"#utility.yul\":3515:3517   */\n          0x16\n            /* \"#utility.yul\":3510:3513   */\n          dup4\n            /* \"#utility.yul\":3451:3518   */\n          tag_51\n          jump\t// in\n        tag_91:\n            /* \"#utility.yul\":3444:3518   */\n          swap2\n          pop\n            /* \"#utility.yul\":3527:3620   */\n          tag_92\n            /* \"#utility.yul\":3616:3619   */\n          dup3\n            /* \"#utility.yul\":3527:3620   */\n          tag_54\n          jump\t// in\n        tag_92:\n            /* \"#utility.yul\":3645:3647   */\n          0x20\n            /* \"#utility.yul\":3640:3643   */\n          dup3\n            /* \"#utility.yul\":3636:3648   */\n          add\n            /* \"#utility.yul\":3629:3648   */\n          swap1\n          pop\n            /* \"#utility.yul\":3288:3654   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":3660:4079   */\n        tag_36:\n            /* \"#utility.yul\":3826:3830   */\n          0x00\n            /* \"#utility.yul\":3864:3866   */\n          0x20\n            /* \"#utility.yul\":3853:3862   */\n          dup3\n            /* \"#utility.yul\":3849:3867   */\n          add\n            /* \"#utility.yul\":3841:3867   */\n          swap1\n          pop\n            /* \"#utility.yul\":3913:3922   */\n          dup2\n            /* \"#utility.yul\":3907:3911   */\n          dup2\n            /* \"#utility.yul\":3903:3923   */\n          sub\n            /* \"#utility.yul\":3899:3900   */\n          0x00\n            /* \"#utility.yul\":3888:3897   */\n          dup4\n            /* \"#utility.yul\":3884:3901   */\n          add\n            /* \"#utility.yul\":3877:3924   */\n          mstore\n            /* \"#utility.yul\":3941:4072   */\n          tag_94\n            /* \"#utility.yul\":4067:4071   */\n          dup2\n            /* \"#utility.yul\":3941:4072   */\n          tag_55\n          jump\t// in\n        tag_94:\n            /* \"#utility.yul\":3933:4072   */\n          swap1\n          pop\n            /* \"#utility.yul\":3660:4079   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":4085:4265   */\n        tag_56:\n            /* \"#utility.yul\":4133:4210   */\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n            /* \"#utility.yul\":4130:4131   */\n          0x00\n            /* \"#utility.yul\":4123:4211   */\n          mstore\n            /* \"#utility.yul\":4230:4234   */\n          0x11\n            /* \"#utility.yul\":4227:4228   */\n          0x04\n            /* \"#utility.yul\":4220:4235   */\n          mstore\n            /* \"#utility.yul\":4254:4258   */\n          0x24\n            /* \"#utility.yul\":4251:4252   */\n          0x00\n            /* \"#utility.yul\":4244:4259   */\n          revert\n            /* \"#utility.yul\":4271:4462   */\n        tag_38:\n            /* \"#utility.yul\":4311:4314   */\n          0x00\n            /* \"#utility.yul\":4330:4350   */\n          tag_97\n            /* \"#utility.yul\":4348:4349   */\n          dup3\n            /* \"#utility.yul\":4330:4350   */\n          tag_41\n          jump\t// in\n        tag_97:\n            /* \"#utility.yul\":4325:4350   */\n          swap2\n          pop\n            /* \"#utility.yul\":4364:4384   */\n          tag_98\n            /* \"#utility.yul\":4382:4383   */\n          dup4\n            /* \"#utility.yul\":4364:4384   */\n          tag_41\n          jump\t// in\n        tag_98:\n            /* \"#utility.yul\":4359:4384   */\n          swap3\n          pop\n            /* \"#utility.yul\":4407:4408   */\n          dup3\n            /* \"#utility.yul\":4404:4405   */\n          dup3\n            /* \"#utility.yul\":4400:4409   */\n          add\n            /* \"#utility.yul\":4393:4409   */\n          swap1\n          pop\n            /* \"#utility.yul\":4428:4431   */\n          dup1\n            /* \"#utility.yul\":4425:4426   */\n          dup3\n            /* \"#utility.yul\":4422:4432   */\n          gt\n            /* \"#utility.yul\":4419:4455   */\n          iszero\n          tag_99\n          jumpi\n            /* \"#utility.yul\":4435:4453   */\n          tag_100\n          tag_56\n          jump\t// in\n        tag_100:\n            /* \"#utility.yul\":4419:4455   */\n        tag_99:\n            /* \"#utility.yul\":4271:4462   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":4468:4800   */\n        tag_40:\n            /* \"#utility.yul\":4589:4593   */\n          0x00\n            /* \"#utility.yul\":4627:4629   */\n          0x40\n            /* \"#utility.yul\":4616:4625   */\n          dup3\n            /* \"#utility.yul\":4612:4630   */\n          add\n            /* \"#utility.yul\":4604:4630   */\n          swap1\n          pop\n            /* \"#utility.yul\":4640:4711   */\n          tag_102\n            /* \"#utility.yul\":4708:4709   */\n          0x00\n            /* \"#utility.yul\":4697:4706   */\n          dup4\n            /* \"#utility.yul\":4693:4710   */\n          add\n            /* \"#utility.yul\":4684:4690   */\n          dup6\n            /* \"#utility.yul\":4640:4711   */\n          tag_45\n          jump\t// in\n        tag_102:\n            /* \"#utility.yul\":4721:4793   */\n          tag_103\n            /* \"#utility.yul\":4789:4791   */\n          0x20\n            /* \"#utility.yul\":4778:4787   */\n          dup4\n            /* \"#utility.yul\":4774:4792   */\n          add\n            /* \"#utility.yul\":4765:4771   */\n          dup5\n            /* \"#utility.yul\":4721:4793   */\n          tag_42\n          jump\t// in\n        tag_103:\n            /* \"#utility.yul\":4468:4800   */\n          swap4\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n\n        auxdata: 0xa2646970667358221220cd684d7c73adb53c6e4bcf47c1202a304093b7072894771eea58aaa8813ff21064736f6c634300081a0033\n    }\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_610": {
									"entryPoint": null,
									"id": 610,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052348015600e575f80fd5b506040516019906069565b604051809103905ff0801580156031573d5f803e3d5ffd5b5073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506076565b6105798061040d83390190565b60805161037a6100935f395f818160760152609f015261037a5ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80635c60da1b146100385780635d12928b14610056575b5f80fd5b610040610074565b60405161004d91906102c5565b60405180910390f35b61005e610098565b60405161006b91906102c5565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b5f806100c37f000000000000000000000000000000000000000000000000000000000000000061017f565b90508073ffffffffffffffffffffffffffffffffffffffff1663c4d66de873ab8483f64d9c6d1ecf9b849ae677dd3315835cb26040518263ffffffff1660e01b815260040161011291906102c5565b5f604051808303815f87803b158015610129575f80fd5b505af115801561013b573d5f803e3d5ffd5b505050507f5d9c31ffa0fecffd7cf379989a3c7af252f0335e0d2a1320b55245912c781f5381336040516101709291906102de565b60405180910390a18091505090565b5f61018a825f610191565b9050919050565b5f814710156101d95747826040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016101d092919061031d565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610280576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102af82610286565b9050919050565b6102bf816102a5565b82525050565b5f6020820190506102d85f8301846102b6565b92915050565b5f6040820190506102f15f8301856102b6565b6102fe60208301846102b6565b9392505050565b5f819050919050565b61031781610305565b82525050565b5f6040820190506103305f83018561030e565b61033d602083018461030e565b939250505056fea2646970667358221220a57e50634c1aeab73c5934050ed75fe22320fd9f925df45ca66b72b489fa4ca564736f6c634300081a00336080604052348015600e575f80fd5b5061055d8061001c5f395ff3fe608060405260043610610049575f3560e01c806312065fe01461004d5780638da5cb5b14610077578063b69ef8a8146100a1578063c4d66de8146100cb578063d0e30db0146100f3575b5f80fd5b348015610058575f80fd5b506100616100fd565b60405161006e91906102f6565b60405180910390f35b348015610082575f80fd5b5061008b610106565b604051610098919061034e565b60405180910390f35b3480156100ac575f80fd5b506100b5610129565b6040516100c291906102f6565b60405180910390f35b3480156100d6575f80fd5b506100f160048036038101906100ec9190610395565b61012f565b005b6100fb6101fe565b005b5f600154905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b39061041a565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028290610482565b60405180910390fd5b3460015f82825461029c91906104cd565b925050819055507f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c433346040516102d4929190610500565b60405180910390a1565b5f819050919050565b6102f0816102de565b82525050565b5f6020820190506103095f8301846102e7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103388261030f565b9050919050565b6103488161032e565b82525050565b5f6020820190506103615f83018461033f565b92915050565b5f80fd5b6103748161032e565b811461037e575f80fd5b50565b5f8135905061038f8161036b565b92915050565b5f602082840312156103aa576103a9610367565b5b5f6103b784828501610381565b91505092915050565b5f82825260208201905092915050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f6104046013836103c0565b915061040f826103d0565b602082019050919050565b5f6020820190508181035f830152610431816103f8565b9050919050565b7f4f6e6c79206f776e65722063616e206465706f736974000000000000000000005f82015250565b5f61046c6016836103c0565b915061047782610438565b602082019050919050565b5f6020820190508181035f83015261049981610460565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6104d7826102de565b91506104e2836102de565b92508282019050808211156104fa576104f96104a0565b5b92915050565b5f6040820190506105135f83018561033f565b61052060208301846102e7565b939250505056fea2646970667358221220cd684d7c73adb53c6e4bcf47c1202a304093b7072894771eea58aaa8813ff21064736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x19 SWAP1 PUSH1 0x69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH1 0x31 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x76 JUMP JUMPDEST PUSH2 0x579 DUP1 PUSH2 0x40D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x37A PUSH2 0x93 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0x76 ADD MSTORE PUSH1 0x9F ADD MSTORE PUSH2 0x37A PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x5D12928B EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC3 PUSH32 0x0 PUSH2 0x17F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC4D66DE8 PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x2C5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x129 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH32 0x5D9C31FFA0FECFFD7CF379989A3C7AF252F0335E0D2A1320B55245912C781F53 DUP2 CALLER PUSH1 0x40 MLOAD PUSH2 0x170 SWAP3 SWAP2 SWAP1 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x18A DUP3 PUSH0 PUSH2 0x191 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1D9 JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP3 SWAP2 SWAP1 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AF DUP3 PUSH2 0x286 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF DUP2 PUSH2 0x2A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F1 PUSH0 DUP4 ADD DUP6 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x317 DUP2 PUSH2 0x305 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x330 PUSH0 DUP4 ADD DUP6 PUSH2 0x30E JUMP JUMPDEST PUSH2 0x33D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x30E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 PUSH31 0x50634C1AEAB73C5934050ED75FE22320FD9F925DF45CA66B72B489FA4CA564 PUSH20 0x6F6C634300081A00336080604052348015600E57 PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x55D DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x395 JUMP JUMPDEST PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x1FE JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3 SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x282 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x4CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP3 SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F0 DUP2 PUSH2 0x2DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x338 DUP3 PUSH2 0x30F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348 DUP2 PUSH2 0x32E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x361 PUSH0 DUP4 ADD DUP5 PUSH2 0x33F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x32E JUMP JUMPDEST DUP2 EQ PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38F DUP2 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH2 0x3A9 PUSH2 0x367 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3B7 DUP5 DUP3 DUP6 ADD PUSH2 0x381 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x404 PUSH1 0x13 DUP4 PUSH2 0x3C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x40F DUP3 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x431 DUP2 PUSH2 0x3F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E206465706F73697400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x46C PUSH1 0x16 DUP4 PUSH2 0x3C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x477 DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x499 DUP2 PUSH2 0x460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x4D7 DUP3 PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP PUSH2 0x4E2 DUP4 PUSH2 0x2DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4FA JUMPI PUSH2 0x4F9 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x513 PUSH0 DUP4 ADD DUP6 PUSH2 0x33F JUMP JUMPDEST PUSH2 0x520 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH9 0x4D7C73ADB53C6E4BCF SELFBALANCE 0xC1 KECCAK256 0x2A ADDRESS BLOCKHASH SWAP4 0xB7 SMOD 0x28 SWAP5 PUSH24 0x1EEA58AAA8813FF21064736F6C634300081A003300000000 ",
							"sourceMap": "132:548:4:-:0;;;264:94;;;;;;;;;;313:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;288:37;;;;;;;;;;132:548;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@clone_22": {
									"entryPoint": 383,
									"id": 22,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@clone_67": {
									"entryPoint": 401,
									"id": 67,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createVault_641": {
									"entryPoint": 152,
									"id": 641,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@implementation_590": {
									"entryPoint": 116,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1473:5",
										"nodeType": "YulBlock",
										"src": "0:1473:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:5",
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nativeSrc": "62:65:5",
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:5",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nativeSrc": "73:54:5",
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nativeSrc": "184:51:5",
													"nodeType": "YulBlock",
													"src": "184:51:5",
													"statements": [
														{
															"nativeSrc": "194:35:5",
															"nodeType": "YulAssignment",
															"src": "194:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:5"
																},
																"nativeSrc": "205:24:5",
																"nodeType": "YulFunctionCall",
																"src": "205:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:5",
														"nodeType": "YulTypedName",
														"src": "166:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:5",
														"nodeType": "YulTypedName",
														"src": "176:7:5",
														"type": ""
													}
												],
												"src": "139:96:5"
											},
											{
												"body": {
													"nativeSrc": "306:53:5",
													"nodeType": "YulBlock",
													"src": "306:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:5"
																		},
																		"nativeSrc": "328:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:5"
																},
																"nativeSrc": "316:37:5",
																"nodeType": "YulFunctionCall",
																"src": "316:37:5"
															},
															"nativeSrc": "316:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:5",
														"nodeType": "YulTypedName",
														"src": "294:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:5",
														"nodeType": "YulTypedName",
														"src": "301:3:5",
														"type": ""
													}
												],
												"src": "241:118:5"
											},
											{
												"body": {
													"nativeSrc": "463:124:5",
													"nodeType": "YulBlock",
													"src": "463:124:5",
													"statements": [
														{
															"nativeSrc": "473:26:5",
															"nodeType": "YulAssignment",
															"src": "473:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:5",
																		"nodeType": "YulLiteral",
																		"src": "496:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nativeSrc": "481:18:5",
																"nodeType": "YulFunctionCall",
																"src": "481:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:5",
																				"nodeType": "YulLiteral",
																				"src": "577:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:5"
																		},
																		"nativeSrc": "562:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:5"
																},
																"nativeSrc": "509:71:5",
																"nodeType": "YulFunctionCall",
																"src": "509:71:5"
															},
															"nativeSrc": "509:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:5",
														"nodeType": "YulTypedName",
														"src": "435:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:5",
														"nodeType": "YulTypedName",
														"src": "447:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:5",
														"nodeType": "YulTypedName",
														"src": "458:4:5",
														"type": ""
													}
												],
												"src": "365:222:5"
											},
											{
												"body": {
													"nativeSrc": "719:206:5",
													"nodeType": "YulBlock",
													"src": "719:206:5",
													"statements": [
														{
															"nativeSrc": "729:26:5",
															"nodeType": "YulAssignment",
															"src": "729:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "741:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "741:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "752:2:5",
																		"nodeType": "YulLiteral",
																		"src": "752:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "737:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "737:3:5"
																},
																"nativeSrc": "737:18:5",
																"nodeType": "YulFunctionCall",
																"src": "737:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "729:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "729:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "809:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "809:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "822:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "822:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "833:1:5",
																				"nodeType": "YulLiteral",
																				"src": "833:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "818:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "818:3:5"
																		},
																		"nativeSrc": "818:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "818:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "765:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "765:43:5"
																},
																"nativeSrc": "765:71:5",
																"nodeType": "YulFunctionCall",
																"src": "765:71:5"
															},
															"nativeSrc": "765:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "765:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "890:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "890:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "903:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "903:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "914:2:5",
																				"nodeType": "YulLiteral",
																				"src": "914:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "899:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "899:3:5"
																		},
																		"nativeSrc": "899:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "899:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "846:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "846:43:5"
																},
																"nativeSrc": "846:72:5",
																"nodeType": "YulFunctionCall",
																"src": "846:72:5"
															},
															"nativeSrc": "846:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "846:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "593:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "683:9:5",
														"nodeType": "YulTypedName",
														"src": "683:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "695:6:5",
														"nodeType": "YulTypedName",
														"src": "695:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "703:6:5",
														"nodeType": "YulTypedName",
														"src": "703:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "714:4:5",
														"nodeType": "YulTypedName",
														"src": "714:4:5",
														"type": ""
													}
												],
												"src": "593:332:5"
											},
											{
												"body": {
													"nativeSrc": "976:32:5",
													"nodeType": "YulBlock",
													"src": "976:32:5",
													"statements": [
														{
															"nativeSrc": "986:16:5",
															"nodeType": "YulAssignment",
															"src": "986:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "997:5:5",
																"nodeType": "YulIdentifier",
																"src": "997:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "986:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "986:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "931:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "958:5:5",
														"nodeType": "YulTypedName",
														"src": "958:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "968:7:5",
														"nodeType": "YulTypedName",
														"src": "968:7:5",
														"type": ""
													}
												],
												"src": "931:77:5"
											},
											{
												"body": {
													"nativeSrc": "1079:53:5",
													"nodeType": "YulBlock",
													"src": "1079:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1096:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1096:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1119:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1119:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1101:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1101:17:5"
																		},
																		"nativeSrc": "1101:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1101:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1089:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:5"
																},
																"nativeSrc": "1089:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1089:37:5"
															},
															"nativeSrc": "1089:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1089:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1014:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1067:5:5",
														"nodeType": "YulTypedName",
														"src": "1067:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1074:3:5",
														"nodeType": "YulTypedName",
														"src": "1074:3:5",
														"type": ""
													}
												],
												"src": "1014:118:5"
											},
											{
												"body": {
													"nativeSrc": "1264:206:5",
													"nodeType": "YulBlock",
													"src": "1264:206:5",
													"statements": [
														{
															"nativeSrc": "1274:26:5",
															"nodeType": "YulAssignment",
															"src": "1274:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1286:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1286:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1297:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1297:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1282:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1282:3:5"
																},
																"nativeSrc": "1282:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1282:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1274:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1274:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1354:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1354:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1367:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1367:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1378:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1378:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1363:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1363:3:5"
																		},
																		"nativeSrc": "1363:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1363:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1310:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1310:43:5"
																},
																"nativeSrc": "1310:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1310:71:5"
															},
															"nativeSrc": "1310:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1310:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1435:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1435:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1459:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1459:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1444:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:5"
																		},
																		"nativeSrc": "1444:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1444:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1391:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1391:43:5"
																},
																"nativeSrc": "1391:72:5",
																"nodeType": "YulFunctionCall",
																"src": "1391:72:5"
															},
															"nativeSrc": "1391:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "1391:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1138:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1228:9:5",
														"nodeType": "YulTypedName",
														"src": "1228:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1240:6:5",
														"nodeType": "YulTypedName",
														"src": "1240:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1248:6:5",
														"nodeType": "YulTypedName",
														"src": "1248:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1259:4:5",
														"nodeType": "YulTypedName",
														"src": "1259:4:5",
														"type": ""
													}
												],
												"src": "1138:332:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"590": [
									{
										"length": 32,
										"start": 118
									},
									{
										"length": 32,
										"start": 159
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80635c60da1b146100385780635d12928b14610056575b5f80fd5b610040610074565b60405161004d91906102c5565b60405180910390f35b61005e610098565b60405161006b91906102c5565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b5f806100c37f000000000000000000000000000000000000000000000000000000000000000061017f565b90508073ffffffffffffffffffffffffffffffffffffffff1663c4d66de873ab8483f64d9c6d1ecf9b849ae677dd3315835cb26040518263ffffffff1660e01b815260040161011291906102c5565b5f604051808303815f87803b158015610129575f80fd5b505af115801561013b573d5f803e3d5ffd5b505050507f5d9c31ffa0fecffd7cf379989a3c7af252f0335e0d2a1320b55245912c781f5381336040516101709291906102de565b60405180910390a18091505090565b5f61018a825f610191565b9050919050565b5f814710156101d95747826040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016101d092919061031d565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610280576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102af82610286565b9050919050565b6102bf816102a5565b82525050565b5f6020820190506102d85f8301846102b6565b92915050565b5f6040820190506102f15f8301856102b6565b6102fe60208301846102b6565b9392505050565b5f819050919050565b61031781610305565b82525050565b5f6040820190506103305f83018561030e565b61033d602083018461030e565b939250505056fea2646970667358221220a57e50634c1aeab73c5934050ed75fe22320fd9f925df45ca66b72b489fa4ca564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x5D12928B EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC3 PUSH32 0x0 PUSH2 0x17F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC4D66DE8 PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x2C5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x129 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH32 0x5D9C31FFA0FECFFD7CF379989A3C7AF252F0335E0D2A1320B55245912C781F53 DUP2 CALLER PUSH1 0x40 MLOAD PUSH2 0x170 SWAP3 SWAP2 SWAP1 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x18A DUP3 PUSH0 PUSH2 0x191 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1D9 JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP3 SWAP2 SWAP1 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AF DUP3 PUSH2 0x286 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF DUP2 PUSH2 0x2A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F1 PUSH0 DUP4 ADD DUP6 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x317 DUP2 PUSH2 0x305 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x330 PUSH0 DUP4 ADD DUP6 PUSH2 0x30E JUMP JUMPDEST PUSH2 0x33D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x30E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 PUSH31 0x50634C1AEAB73C5934050ED75FE22320FD9F925DF45CA66B72B489FA4CA564 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "132:548:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;160:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;364:309;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;160:39;;;:::o;364:309::-;405:7;424:13;440:28;453:14;440:12;:28::i;:::-;424:44;;508:5;502:23;;;534:42;502:76;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:31;626:5;633:10;613:31;;;;;;;:::i;:::-;;;;;;;;661:5;654:12;;;364:309;:::o;1070:123:0:-;1127:16;1162:24;1168:14;1184:1;1162:5;:24::i;:::-;1155:31;;1070:123;;;:::o;1585:910::-;1657:16;1713:5;1689:21;:29;1685:123;;;1768:21;1791:5;1741:56;;;;;;;;;;;;:::i;:::-;;;;;;;;1685:123;2094:48;2076:14;2070:4;2066:25;2060:4;2056:36;2053:90;2047:4;2040:104;2301:32;2284:14;2278:4;2274:25;2271:63;2265:4;2258:77;2380:4;2374;2367:5;2360:25;2348:37;;2428:1;2408:22;;:8;:22;;;2404:85;;2453:25;;;;;;;;;;;;;;2404:85;1585:910;;;;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:332::-;714:4;752:2;741:9;737:18;729:26;;765:71;833:1;822:9;818:17;809:6;765:71;:::i;:::-;846:72;914:2;903:9;899:18;890:6;846:72;:::i;:::-;593:332;;;;;:::o;931:77::-;968:7;997:5;986:16;;931:77;;;:::o;1014:118::-;1101:24;1119:5;1101:24;:::i;:::-;1096:3;1089:37;1014:118;;:::o;1138:332::-;1259:4;1297:2;1286:9;1282:18;1274:26;;1310:71;1378:1;1367:9;1363:17;1354:6;1310:71;:::i;:::-;1391:72;1459:2;1448:9;1444:18;1435:6;1391:72;:::i;:::-;1138:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "178000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createVault()": "infinite",
								"implementation()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 264,
									"end": 358,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 264,
									"end": 358,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 264,
									"end": 358,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 264,
									"end": 358,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 358,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 264,
									"end": 358,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 358,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 264,
									"end": 358,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 264,
									"end": 358,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 358,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 264,
									"end": 358,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 313,
									"end": 324,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 313,
									"end": 324,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 313,
									"end": 324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 313,
									"end": 324,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 313,
									"end": 324,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 324,
									"name": "CREATE",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 313,
									"end": 324,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 324,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 324,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 313,
									"end": 324,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 313,
									"end": 324,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 288,
									"end": 325,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 288,
									"end": 325,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 288,
									"end": 325,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 288,
									"end": 325,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 288,
									"end": 325,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 288,
									"end": 325,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 288,
									"end": 325,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 288,
									"end": 325,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 288,
									"end": 325,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 288,
									"end": 325,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "590"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 680,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a57e50634c1aeab73c5934050ed75fe22320fd9f925df45ca66b72b489fa4ca564736f6c634300081a0033",
									".code": [
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "5C60DA1B"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "5D12928B"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 680,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 160,
											"end": 199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 160,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 160,
											"end": 199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 160,
											"end": 199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 160,
											"end": 199,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 160,
											"end": 199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 160,
											"end": 199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 160,
											"end": 199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 160,
											"end": 199,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 364,
											"end": 673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 364,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 364,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 364,
											"end": 673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 673,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 364,
											"end": 673,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 364,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 364,
											"end": 673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 673,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 160,
											"end": 199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "590"
										},
										{
											"begin": 160,
											"end": 199,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 364,
											"end": 673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 405,
											"end": 412,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 453,
											"end": 467,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "590"
										},
										{
											"begin": 440,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 440,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 468,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 440,
											"end": 468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 424,
											"end": 468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 525,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 502,
											"end": 525,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 502,
											"end": 525,
											"name": "PUSH",
											"source": 4,
											"value": "C4D66DE8"
										},
										{
											"begin": 534,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 502,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 502,
											"end": 578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "PUSH",
											"source": 4,
											"value": "5D9C31FFA0FECFFD7CF379989A3C7AF252F0335E0D2A1320B55245912C781F53"
										},
										{
											"begin": 626,
											"end": 631,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 633,
											"end": 643,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 613,
											"end": 644,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 613,
											"end": 644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 613,
											"end": 644,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 654,
											"end": 666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 654,
											"end": 666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 654,
											"end": 666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 364,
											"end": 673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1168,
											"end": 1182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1162,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1710,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1789,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1741,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 2076,
											"end": 2090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2074,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2143,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 2284,
											"end": 2298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2334,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2385,
											"name": "CREATE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "B06EBF3D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 925,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 593,
											"end": 925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 714,
											"end": 718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 754,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 750,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 737,
											"end": 755,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 729,
											"end": 755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 729,
											"end": 755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 765,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 831,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 818,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 765,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 765,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 765,
											"end": 836,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 765,
											"end": 836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 914,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 912,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 899,
											"end": 917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 846,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 846,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 846,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 593,
											"end": 925,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 593,
											"end": 925,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 593,
											"end": 925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1008,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 931,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 968,
											"end": 975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1008,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1132,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1014,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1101,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1125,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1101,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1126,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1470,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1138,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1299,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1310,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1380,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1310,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1310,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1310,
											"end": 1381,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1310,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1391,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1463,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1391,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1470,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1470,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								},
								"1": {
									".code": [
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH #[$]",
											"source": 3,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH [$]",
											"source": 3,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 58,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 612,
											"name": "RETURN",
											"source": 3
										}
									],
									".data": {
										"0": {
											".auxdata": "a2646970667358221220cd684d7c73adb53c6e4bcf47c1202a304093b7072894771eea58aaa8813ff21064736f6c634300081a0033",
											".code": [
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "80"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "MSTORE",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "4"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "CALLDATASIZE",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "LT",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "1"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "CALLDATALOAD",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "E0"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "SHR",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "12065FE0"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "EQ",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "2"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "8DA5CB5B"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "EQ",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "3"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "B69EF8A8"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "EQ",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "4"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "C4D66DE8"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "EQ",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "5"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "D0E30DB0"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "EQ",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "6"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "tag",
													"source": 3,
													"value": "1"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 58,
													"end": 612,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 58,
													"end": 612,
													"name": "REVERT",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "tag",
													"source": 3,
													"value": "2"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "CALLVALUE",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "ISZERO",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "7"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "REVERT",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "tag",
													"source": 3,
													"value": "7"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "POP",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "8"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "9"
												},
												{
													"begin": 519,
													"end": 604,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "tag",
													"source": 3,
													"value": "8"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "10"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "11"
												},
												{
													"begin": 519,
													"end": 604,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "tag",
													"source": 3,
													"value": "10"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "SUB",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "RETURN",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "tag",
													"source": 3,
													"value": "3"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "CALLVALUE",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "ISZERO",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "12"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "REVERT",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "tag",
													"source": 3,
													"value": "12"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "POP",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "13"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "14"
												},
												{
													"begin": 79,
													"end": 99,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "tag",
													"source": 3,
													"value": "13"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "15"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "16"
												},
												{
													"begin": 79,
													"end": 99,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "tag",
													"source": 3,
													"value": "15"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "SUB",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "RETURN",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "tag",
													"source": 3,
													"value": "4"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "CALLVALUE",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "ISZERO",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "17"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "REVERT",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "tag",
													"source": 3,
													"value": "17"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "POP",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "18"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "19"
												},
												{
													"begin": 105,
													"end": 127,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "tag",
													"source": 3,
													"value": "18"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "20"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "11"
												},
												{
													"begin": 105,
													"end": 127,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "tag",
													"source": 3,
													"value": "20"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "SUB",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "RETURN",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "tag",
													"source": 3,
													"value": "5"
												},
												{
													"begin": 186,
													"end": 323,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "CALLVALUE",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "ISZERO",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "21"
												},
												{
													"begin": 186,
													"end": 323,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 186,
													"end": 323,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "REVERT",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "tag",
													"source": 3,
													"value": "21"
												},
												{
													"begin": 186,
													"end": 323,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "POP",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "22"
												},
												{
													"begin": 186,
													"end": 323,
													"name": "PUSH",
													"source": 3,
													"value": "4"
												},
												{
													"begin": 186,
													"end": 323,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "CALLDATASIZE",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "SUB",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "DUP2",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "ADD",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "23"
												},
												{
													"begin": 186,
													"end": 323,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "24"
												},
												{
													"begin": 186,
													"end": 323,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "tag",
													"source": 3,
													"value": "23"
												},
												{
													"begin": 186,
													"end": 323,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "25"
												},
												{
													"begin": 186,
													"end": 323,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "tag",
													"source": 3,
													"value": "22"
												},
												{
													"begin": 186,
													"end": 323,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "STOP",
													"source": 3
												},
												{
													"begin": 329,
													"end": 513,
													"name": "tag",
													"source": 3,
													"value": "6"
												},
												{
													"begin": 329,
													"end": 513,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 329,
													"end": 513,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "26"
												},
												{
													"begin": 329,
													"end": 513,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "27"
												},
												{
													"begin": 329,
													"end": 513,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 329,
													"end": 513,
													"name": "tag",
													"source": 3,
													"value": "26"
												},
												{
													"begin": 329,
													"end": 513,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 329,
													"end": 513,
													"name": "STOP",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "tag",
													"source": 3,
													"value": "9"
												},
												{
													"begin": 519,
													"end": 604,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 564,
													"end": 571,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 590,
													"end": 597,
													"name": "PUSH",
													"source": 3,
													"value": "1"
												},
												{
													"begin": 590,
													"end": 597,
													"name": "SLOAD",
													"source": 3
												},
												{
													"begin": 583,
													"end": 597,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 583,
													"end": 597,
													"name": "POP",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 519,
													"end": 604,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "tag",
													"source": 3,
													"value": "14"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "SLOAD",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH",
													"source": 3,
													"value": "100"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "EXP",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "DIV",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "PUSH",
													"source": 3,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 79,
													"end": 99,
													"name": "AND",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"name": "DUP2",
													"source": 3
												},
												{
													"begin": 79,
													"end": 99,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "tag",
													"source": 3,
													"value": "19"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "PUSH",
													"source": 3,
													"value": "1"
												},
												{
													"begin": 105,
													"end": 127,
													"name": "SLOAD",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"name": "DUP2",
													"source": 3
												},
												{
													"begin": 105,
													"end": 127,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "tag",
													"source": 3,
													"value": "25"
												},
												{
													"begin": 186,
													"end": 323,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 266,
													"end": 267,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 249,
													"end": 268,
													"name": "PUSH",
													"source": 3,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 249,
													"end": 268,
													"name": "AND",
													"source": 3
												},
												{
													"begin": 249,
													"end": 254,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 249,
													"end": 254,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 249,
													"end": 254,
													"name": "SLOAD",
													"source": 3
												},
												{
													"begin": 249,
													"end": 254,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 249,
													"end": 254,
													"name": "PUSH",
													"source": 3,
													"value": "100"
												},
												{
													"begin": 249,
													"end": 254,
													"name": "EXP",
													"source": 3
												},
												{
													"begin": 249,
													"end": 254,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 249,
													"end": 254,
													"name": "DIV",
													"source": 3
												},
												{
													"begin": 249,
													"end": 254,
													"name": "PUSH",
													"source": 3,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 249,
													"end": 254,
													"name": "AND",
													"source": 3
												},
												{
													"begin": 249,
													"end": 268,
													"name": "PUSH",
													"source": 3,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 249,
													"end": 268,
													"name": "AND",
													"source": 3
												},
												{
													"begin": 249,
													"end": 268,
													"name": "EQ",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "30"
												},
												{
													"begin": 241,
													"end": 292,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 241,
													"end": 292,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "PUSH",
													"source": 3,
													"value": "8C379A000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 241,
													"end": 292,
													"name": "DUP2",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "MSTORE",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "PUSH",
													"source": 3,
													"value": "4"
												},
												{
													"begin": 241,
													"end": 292,
													"name": "ADD",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "31"
												},
												{
													"begin": 241,
													"end": 292,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "32"
												},
												{
													"begin": 241,
													"end": 292,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "tag",
													"source": 3,
													"value": "31"
												},
												{
													"begin": 241,
													"end": 292,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 241,
													"end": 292,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "SUB",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "REVERT",
													"source": 3
												},
												{
													"begin": 241,
													"end": 292,
													"name": "tag",
													"source": 3,
													"value": "30"
												},
												{
													"begin": 241,
													"end": 292,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 310,
													"end": 316,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 302,
													"end": 307,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 302,
													"end": 307,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "PUSH",
													"source": 3,
													"value": "100"
												},
												{
													"begin": 302,
													"end": 316,
													"name": "EXP",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "DUP2",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "SLOAD",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "DUP2",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "PUSH",
													"source": 3,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 302,
													"end": 316,
													"name": "MUL",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "NOT",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "AND",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "DUP4",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "PUSH",
													"source": 3,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 302,
													"end": 316,
													"name": "AND",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "MUL",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "OR",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "SSTORE",
													"source": 3
												},
												{
													"begin": 302,
													"end": 316,
													"name": "POP",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"name": "POP",
													"source": 3
												},
												{
													"begin": 186,
													"end": 323,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 329,
													"end": 513,
													"name": "tag",
													"source": 3,
													"value": "27"
												},
												{
													"begin": 329,
													"end": 513,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 397,
													"end": 402,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 397,
													"end": 402,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 397,
													"end": 402,
													"name": "SLOAD",
													"source": 3
												},
												{
													"begin": 397,
													"end": 402,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 397,
													"end": 402,
													"name": "PUSH",
													"source": 3,
													"value": "100"
												},
												{
													"begin": 397,
													"end": 402,
													"name": "EXP",
													"source": 3
												},
												{
													"begin": 397,
													"end": 402,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 397,
													"end": 402,
													"name": "DIV",
													"source": 3
												},
												{
													"begin": 397,
													"end": 402,
													"name": "PUSH",
													"source": 3,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 397,
													"end": 402,
													"name": "AND",
													"source": 3
												},
												{
													"begin": 383,
													"end": 402,
													"name": "PUSH",
													"source": 3,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 383,
													"end": 402,
													"name": "AND",
													"source": 3
												},
												{
													"begin": 383,
													"end": 393,
													"name": "CALLER",
													"source": 3
												},
												{
													"begin": 383,
													"end": 402,
													"name": "PUSH",
													"source": 3,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 383,
													"end": 402,
													"name": "AND",
													"source": 3
												},
												{
													"begin": 383,
													"end": 402,
													"name": "EQ",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "34"
												},
												{
													"begin": 375,
													"end": 429,
													"name": "JUMPI",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 375,
													"end": 429,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "PUSH",
													"source": 3,
													"value": "8C379A000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 375,
													"end": 429,
													"name": "DUP2",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "MSTORE",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "PUSH",
													"source": 3,
													"value": "4"
												},
												{
													"begin": 375,
													"end": 429,
													"name": "ADD",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "35"
												},
												{
													"begin": 375,
													"end": 429,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "36"
												},
												{
													"begin": 375,
													"end": 429,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "tag",
													"source": 3,
													"value": "35"
												},
												{
													"begin": 375,
													"end": 429,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 375,
													"end": 429,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "SUB",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "REVERT",
													"source": 3
												},
												{
													"begin": 375,
													"end": 429,
													"name": "tag",
													"source": 3,
													"value": "34"
												},
												{
													"begin": 375,
													"end": 429,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 450,
													"end": 459,
													"name": "CALLVALUE",
													"source": 3
												},
												{
													"begin": 439,
													"end": 446,
													"name": "PUSH",
													"source": 3,
													"value": "1"
												},
												{
													"begin": 439,
													"end": 446,
													"name": "PUSH",
													"source": 3,
													"value": "0"
												},
												{
													"begin": 439,
													"end": 459,
													"name": "DUP3",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "DUP3",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "SLOAD",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "37"
												},
												{
													"begin": 439,
													"end": 459,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "38"
												},
												{
													"begin": 439,
													"end": 459,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "tag",
													"source": 3,
													"value": "37"
												},
												{
													"begin": 439,
													"end": 459,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "SWAP3",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "POP",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "POP",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "DUP2",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "SSTORE",
													"source": 3
												},
												{
													"begin": 439,
													"end": 459,
													"name": "POP",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "PUSH",
													"source": 3,
													"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
												},
												{
													"begin": 484,
													"end": 494,
													"name": "CALLER",
													"source": 3
												},
												{
													"begin": 496,
													"end": 505,
													"name": "CALLVALUE",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 474,
													"end": 506,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "39"
												},
												{
													"begin": 474,
													"end": 506,
													"name": "SWAP3",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "PUSH [tag]",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 474,
													"end": 506,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "tag",
													"source": 3,
													"value": "39"
												},
												{
													"begin": 474,
													"end": 506,
													"name": "JUMPDEST",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "PUSH",
													"source": 3,
													"value": "40"
												},
												{
													"begin": 474,
													"end": 506,
													"name": "MLOAD",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "DUP1",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "SWAP2",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "SUB",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "SWAP1",
													"source": 3
												},
												{
													"begin": 474,
													"end": 506,
													"name": "LOG1",
													"source": 3
												},
												{
													"begin": 329,
													"end": 513,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 3
												},
												{
													"begin": 7,
													"end": 84,
													"name": "tag",
													"source": 5,
													"value": "41"
												},
												{
													"begin": 7,
													"end": 84,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 44,
													"end": 51,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 73,
													"end": 78,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 62,
													"end": 78,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 62,
													"end": 78,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 7,
													"end": 84,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 7,
													"end": 84,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 7,
													"end": 84,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 7,
													"end": 84,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 90,
													"end": 208,
													"name": "tag",
													"source": 5,
													"value": "42"
												},
												{
													"begin": 90,
													"end": 208,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 177,
													"end": 201,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "60"
												},
												{
													"begin": 195,
													"end": 200,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 177,
													"end": 201,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "41"
												},
												{
													"begin": 177,
													"end": 201,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 177,
													"end": 201,
													"name": "tag",
													"source": 5,
													"value": "60"
												},
												{
													"begin": 177,
													"end": 201,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 172,
													"end": 175,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 165,
													"end": 202,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 90,
													"end": 208,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 90,
													"end": 208,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 90,
													"end": 208,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 214,
													"end": 436,
													"name": "tag",
													"source": 5,
													"value": "11"
												},
												{
													"begin": 214,
													"end": 436,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 307,
													"end": 311,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 345,
													"end": 347,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 334,
													"end": 343,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 330,
													"end": 348,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 322,
													"end": 348,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 322,
													"end": 348,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 358,
													"end": 429,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "62"
												},
												{
													"begin": 426,
													"end": 427,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 415,
													"end": 424,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 411,
													"end": 428,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 402,
													"end": 408,
													"name": "DUP5",
													"source": 5
												},
												{
													"begin": 358,
													"end": 429,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "42"
												},
												{
													"begin": 358,
													"end": 429,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 358,
													"end": 429,
													"name": "tag",
													"source": 5,
													"value": "62"
												},
												{
													"begin": 358,
													"end": 429,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 214,
													"end": 436,
													"name": "SWAP3",
													"source": 5
												},
												{
													"begin": 214,
													"end": 436,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 214,
													"end": 436,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 214,
													"end": 436,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 214,
													"end": 436,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 442,
													"end": 568,
													"name": "tag",
													"source": 5,
													"value": "43"
												},
												{
													"begin": 442,
													"end": 568,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 479,
													"end": 486,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 519,
													"end": 561,
													"name": "PUSH",
													"source": 5,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 512,
													"end": 517,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 508,
													"end": 562,
													"name": "AND",
													"source": 5
												},
												{
													"begin": 497,
													"end": 562,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 497,
													"end": 562,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 442,
													"end": 568,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 442,
													"end": 568,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 442,
													"end": 568,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 442,
													"end": 568,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 574,
													"end": 670,
													"name": "tag",
													"source": 5,
													"value": "44"
												},
												{
													"begin": 574,
													"end": 670,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 611,
													"end": 618,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 640,
													"end": 664,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "65"
												},
												{
													"begin": 658,
													"end": 663,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 640,
													"end": 664,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "43"
												},
												{
													"begin": 640,
													"end": 664,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 640,
													"end": 664,
													"name": "tag",
													"source": 5,
													"value": "65"
												},
												{
													"begin": 640,
													"end": 664,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 629,
													"end": 664,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 629,
													"end": 664,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 574,
													"end": 670,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 574,
													"end": 670,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 574,
													"end": 670,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 574,
													"end": 670,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 676,
													"end": 794,
													"name": "tag",
													"source": 5,
													"value": "45"
												},
												{
													"begin": 676,
													"end": 794,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 763,
													"end": 787,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "67"
												},
												{
													"begin": 781,
													"end": 786,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 763,
													"end": 787,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "44"
												},
												{
													"begin": 763,
													"end": 787,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 763,
													"end": 787,
													"name": "tag",
													"source": 5,
													"value": "67"
												},
												{
													"begin": 763,
													"end": 787,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 758,
													"end": 761,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 751,
													"end": 788,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 676,
													"end": 794,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 676,
													"end": 794,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 676,
													"end": 794,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "tag",
													"source": 5,
													"value": "16"
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 893,
													"end": 897,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 931,
													"end": 933,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 920,
													"end": 929,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 916,
													"end": 934,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 908,
													"end": 934,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 908,
													"end": 934,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 944,
													"end": 1015,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "69"
												},
												{
													"begin": 1012,
													"end": 1013,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 1001,
													"end": 1010,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 997,
													"end": 1014,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 988,
													"end": 994,
													"name": "DUP5",
													"source": 5
												},
												{
													"begin": 944,
													"end": 1015,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "45"
												},
												{
													"begin": 944,
													"end": 1015,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 944,
													"end": 1015,
													"name": "tag",
													"source": 5,
													"value": "69"
												},
												{
													"begin": 944,
													"end": 1015,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "SWAP3",
													"source": 5
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 800,
													"end": 1022,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 1109,
													"end": 1226,
													"name": "tag",
													"source": 5,
													"value": "47"
												},
												{
													"begin": 1109,
													"end": 1226,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 1218,
													"end": 1219,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 1215,
													"end": 1216,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 1208,
													"end": 1220,
													"name": "REVERT",
													"source": 5
												},
												{
													"begin": 1355,
													"end": 1477,
													"name": "tag",
													"source": 5,
													"value": "49"
												},
												{
													"begin": 1355,
													"end": 1477,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 1428,
													"end": 1452,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "74"
												},
												{
													"begin": 1446,
													"end": 1451,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 1428,
													"end": 1452,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "44"
												},
												{
													"begin": 1428,
													"end": 1452,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 1428,
													"end": 1452,
													"name": "tag",
													"source": 5,
													"value": "74"
												},
												{
													"begin": 1428,
													"end": 1452,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 1421,
													"end": 1426,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 1418,
													"end": 1453,
													"name": "EQ",
													"source": 5
												},
												{
													"begin": 1408,
													"end": 1471,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "75"
												},
												{
													"begin": 1408,
													"end": 1471,
													"name": "JUMPI",
													"source": 5
												},
												{
													"begin": 1467,
													"end": 1468,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 1464,
													"end": 1465,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 1457,
													"end": 1469,
													"name": "REVERT",
													"source": 5
												},
												{
													"begin": 1408,
													"end": 1471,
													"name": "tag",
													"source": 5,
													"value": "75"
												},
												{
													"begin": 1408,
													"end": 1471,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 1355,
													"end": 1477,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1355,
													"end": 1477,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 1483,
													"end": 1622,
													"name": "tag",
													"source": 5,
													"value": "50"
												},
												{
													"begin": 1483,
													"end": 1622,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 1529,
													"end": 1534,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 1567,
													"end": 1573,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 1554,
													"end": 1574,
													"name": "CALLDATALOAD",
													"source": 5
												},
												{
													"begin": 1545,
													"end": 1574,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 1545,
													"end": 1574,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1583,
													"end": 1616,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "77"
												},
												{
													"begin": 1610,
													"end": 1615,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 1583,
													"end": 1616,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "49"
												},
												{
													"begin": 1583,
													"end": 1616,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 1583,
													"end": 1616,
													"name": "tag",
													"source": 5,
													"value": "77"
												},
												{
													"begin": 1583,
													"end": 1616,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 1483,
													"end": 1622,
													"name": "SWAP3",
													"source": 5
												},
												{
													"begin": 1483,
													"end": 1622,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 1483,
													"end": 1622,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1483,
													"end": 1622,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1483,
													"end": 1622,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 1628,
													"end": 1957,
													"name": "tag",
													"source": 5,
													"value": "24"
												},
												{
													"begin": 1628,
													"end": 1957,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 1687,
													"end": 1693,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 1736,
													"end": 1738,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 1724,
													"end": 1733,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 1715,
													"end": 1722,
													"name": "DUP5",
													"source": 5
												},
												{
													"begin": 1711,
													"end": 1734,
													"name": "SUB",
													"source": 5
												},
												{
													"begin": 1707,
													"end": 1739,
													"name": "SLT",
													"source": 5
												},
												{
													"begin": 1704,
													"end": 1823,
													"name": "ISZERO",
													"source": 5
												},
												{
													"begin": 1704,
													"end": 1823,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "79"
												},
												{
													"begin": 1704,
													"end": 1823,
													"name": "JUMPI",
													"source": 5
												},
												{
													"begin": 1742,
													"end": 1821,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "80"
												},
												{
													"begin": 1742,
													"end": 1821,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "47"
												},
												{
													"begin": 1742,
													"end": 1821,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 1742,
													"end": 1821,
													"name": "tag",
													"source": 5,
													"value": "80"
												},
												{
													"begin": 1742,
													"end": 1821,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 1704,
													"end": 1823,
													"name": "tag",
													"source": 5,
													"value": "79"
												},
												{
													"begin": 1704,
													"end": 1823,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 1862,
													"end": 1863,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 1887,
													"end": 1940,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "81"
												},
												{
													"begin": 1932,
													"end": 1939,
													"name": "DUP5",
													"source": 5
												},
												{
													"begin": 1923,
													"end": 1929,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 1912,
													"end": 1921,
													"name": "DUP6",
													"source": 5
												},
												{
													"begin": 1908,
													"end": 1930,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 1887,
													"end": 1940,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "50"
												},
												{
													"begin": 1887,
													"end": 1940,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 1887,
													"end": 1940,
													"name": "tag",
													"source": 5,
													"value": "81"
												},
												{
													"begin": 1887,
													"end": 1940,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 1877,
													"end": 1940,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 1877,
													"end": 1940,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1833,
													"end": 1950,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1628,
													"end": 1957,
													"name": "SWAP3",
													"source": 5
												},
												{
													"begin": 1628,
													"end": 1957,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 1628,
													"end": 1957,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1628,
													"end": 1957,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1628,
													"end": 1957,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 1963,
													"end": 2132,
													"name": "tag",
													"source": 5,
													"value": "51"
												},
												{
													"begin": 1963,
													"end": 2132,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 2047,
													"end": 2058,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 2081,
													"end": 2087,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 2076,
													"end": 2079,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 2069,
													"end": 2088,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 2121,
													"end": 2125,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 2116,
													"end": 2119,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 2112,
													"end": 2126,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 2097,
													"end": 2126,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 2097,
													"end": 2126,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1963,
													"end": 2132,
													"name": "SWAP3",
													"source": 5
												},
												{
													"begin": 1963,
													"end": 2132,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 1963,
													"end": 2132,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1963,
													"end": 2132,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 1963,
													"end": 2132,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 2138,
													"end": 2307,
													"name": "tag",
													"source": 5,
													"value": "52"
												},
												{
													"begin": 2138,
													"end": 2307,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 2278,
													"end": 2299,
													"name": "PUSH",
													"source": 5,
													"value": "416C726561647920696E697469616C697A656400000000000000000000000000"
												},
												{
													"begin": 2274,
													"end": 2275,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 2266,
													"end": 2272,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 2262,
													"end": 2276,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 2255,
													"end": 2300,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 2138,
													"end": 2307,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 2138,
													"end": 2307,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 2313,
													"end": 2679,
													"name": "tag",
													"source": 5,
													"value": "53"
												},
												{
													"begin": 2313,
													"end": 2679,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 2455,
													"end": 2458,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 2476,
													"end": 2543,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "85"
												},
												{
													"begin": 2540,
													"end": 2542,
													"name": "PUSH",
													"source": 5,
													"value": "13"
												},
												{
													"begin": 2535,
													"end": 2538,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 2476,
													"end": 2543,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "51"
												},
												{
													"begin": 2476,
													"end": 2543,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 2476,
													"end": 2543,
													"name": "tag",
													"source": 5,
													"value": "85"
												},
												{
													"begin": 2476,
													"end": 2543,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 2469,
													"end": 2543,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 2469,
													"end": 2543,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 2552,
													"end": 2645,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "86"
												},
												{
													"begin": 2641,
													"end": 2644,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 2552,
													"end": 2645,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "52"
												},
												{
													"begin": 2552,
													"end": 2645,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 2552,
													"end": 2645,
													"name": "tag",
													"source": 5,
													"value": "86"
												},
												{
													"begin": 2552,
													"end": 2645,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 2670,
													"end": 2672,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 2665,
													"end": 2668,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 2661,
													"end": 2673,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 2654,
													"end": 2673,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 2654,
													"end": 2673,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 2313,
													"end": 2679,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 2313,
													"end": 2679,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 2313,
													"end": 2679,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 2313,
													"end": 2679,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 2685,
													"end": 3104,
													"name": "tag",
													"source": 5,
													"value": "32"
												},
												{
													"begin": 2685,
													"end": 3104,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 2851,
													"end": 2855,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 2889,
													"end": 2891,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 2878,
													"end": 2887,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 2874,
													"end": 2892,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 2866,
													"end": 2892,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 2866,
													"end": 2892,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 2938,
													"end": 2947,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 2932,
													"end": 2936,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 2928,
													"end": 2948,
													"name": "SUB",
													"source": 5
												},
												{
													"begin": 2924,
													"end": 2925,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 2913,
													"end": 2922,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 2909,
													"end": 2926,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 2902,
													"end": 2949,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 2966,
													"end": 3097,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "88"
												},
												{
													"begin": 3092,
													"end": 3096,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 2966,
													"end": 3097,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "53"
												},
												{
													"begin": 2966,
													"end": 3097,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 2966,
													"end": 3097,
													"name": "tag",
													"source": 5,
													"value": "88"
												},
												{
													"begin": 2966,
													"end": 3097,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 2958,
													"end": 3097,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 2958,
													"end": 3097,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 2685,
													"end": 3104,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 2685,
													"end": 3104,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 2685,
													"end": 3104,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 2685,
													"end": 3104,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 3110,
													"end": 3282,
													"name": "tag",
													"source": 5,
													"value": "54"
												},
												{
													"begin": 3110,
													"end": 3282,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 3250,
													"end": 3274,
													"name": "PUSH",
													"source": 5,
													"value": "4F6E6C79206F776E65722063616E206465706F73697400000000000000000000"
												},
												{
													"begin": 3246,
													"end": 3247,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 3238,
													"end": 3244,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 3234,
													"end": 3248,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 3227,
													"end": 3275,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 3110,
													"end": 3282,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 3110,
													"end": 3282,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 3288,
													"end": 3654,
													"name": "tag",
													"source": 5,
													"value": "55"
												},
												{
													"begin": 3288,
													"end": 3654,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 3430,
													"end": 3433,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 3451,
													"end": 3518,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "91"
												},
												{
													"begin": 3515,
													"end": 3517,
													"name": "PUSH",
													"source": 5,
													"value": "16"
												},
												{
													"begin": 3510,
													"end": 3513,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 3451,
													"end": 3518,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "51"
												},
												{
													"begin": 3451,
													"end": 3518,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 3451,
													"end": 3518,
													"name": "tag",
													"source": 5,
													"value": "91"
												},
												{
													"begin": 3451,
													"end": 3518,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 3444,
													"end": 3518,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 3444,
													"end": 3518,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 3527,
													"end": 3620,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "92"
												},
												{
													"begin": 3616,
													"end": 3619,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 3527,
													"end": 3620,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "54"
												},
												{
													"begin": 3527,
													"end": 3620,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 3527,
													"end": 3620,
													"name": "tag",
													"source": 5,
													"value": "92"
												},
												{
													"begin": 3527,
													"end": 3620,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 3645,
													"end": 3647,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 3640,
													"end": 3643,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 3636,
													"end": 3648,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 3629,
													"end": 3648,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 3629,
													"end": 3648,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 3288,
													"end": 3654,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 3288,
													"end": 3654,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 3288,
													"end": 3654,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 3288,
													"end": 3654,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 3660,
													"end": 4079,
													"name": "tag",
													"source": 5,
													"value": "36"
												},
												{
													"begin": 3660,
													"end": 4079,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 3826,
													"end": 3830,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 3864,
													"end": 3866,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 3853,
													"end": 3862,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 3849,
													"end": 3867,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 3841,
													"end": 3867,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 3841,
													"end": 3867,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 3913,
													"end": 3922,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 3907,
													"end": 3911,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 3903,
													"end": 3923,
													"name": "SUB",
													"source": 5
												},
												{
													"begin": 3899,
													"end": 3900,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 3888,
													"end": 3897,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 3884,
													"end": 3901,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 3877,
													"end": 3924,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 3941,
													"end": 4072,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "94"
												},
												{
													"begin": 4067,
													"end": 4071,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 3941,
													"end": 4072,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "55"
												},
												{
													"begin": 3941,
													"end": 4072,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 3941,
													"end": 4072,
													"name": "tag",
													"source": 5,
													"value": "94"
												},
												{
													"begin": 3941,
													"end": 4072,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 3933,
													"end": 4072,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 3933,
													"end": 4072,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 3660,
													"end": 4079,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 3660,
													"end": 4079,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 3660,
													"end": 4079,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 3660,
													"end": 4079,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4085,
													"end": 4265,
													"name": "tag",
													"source": 5,
													"value": "56"
												},
												{
													"begin": 4085,
													"end": 4265,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4133,
													"end": 4210,
													"name": "PUSH",
													"source": 5,
													"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 4130,
													"end": 4131,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 4123,
													"end": 4211,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 4230,
													"end": 4234,
													"name": "PUSH",
													"source": 5,
													"value": "11"
												},
												{
													"begin": 4227,
													"end": 4228,
													"name": "PUSH",
													"source": 5,
													"value": "4"
												},
												{
													"begin": 4220,
													"end": 4235,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 4254,
													"end": 4258,
													"name": "PUSH",
													"source": 5,
													"value": "24"
												},
												{
													"begin": 4251,
													"end": 4252,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 4244,
													"end": 4259,
													"name": "REVERT",
													"source": 5
												},
												{
													"begin": 4271,
													"end": 4462,
													"name": "tag",
													"source": 5,
													"value": "38"
												},
												{
													"begin": 4271,
													"end": 4462,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4311,
													"end": 4314,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 4330,
													"end": 4350,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "97"
												},
												{
													"begin": 4348,
													"end": 4349,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4330,
													"end": 4350,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "41"
												},
												{
													"begin": 4330,
													"end": 4350,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4330,
													"end": 4350,
													"name": "tag",
													"source": 5,
													"value": "97"
												},
												{
													"begin": 4330,
													"end": 4350,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4325,
													"end": 4350,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 4325,
													"end": 4350,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4364,
													"end": 4384,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "98"
												},
												{
													"begin": 4382,
													"end": 4383,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 4364,
													"end": 4384,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "41"
												},
												{
													"begin": 4364,
													"end": 4384,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4364,
													"end": 4384,
													"name": "tag",
													"source": 5,
													"value": "98"
												},
												{
													"begin": 4364,
													"end": 4384,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4359,
													"end": 4384,
													"name": "SWAP3",
													"source": 5
												},
												{
													"begin": 4359,
													"end": 4384,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4407,
													"end": 4408,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4404,
													"end": 4405,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4400,
													"end": 4409,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 4393,
													"end": 4409,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 4393,
													"end": 4409,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4428,
													"end": 4431,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 4425,
													"end": 4426,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4422,
													"end": 4432,
													"name": "GT",
													"source": 5
												},
												{
													"begin": 4419,
													"end": 4455,
													"name": "ISZERO",
													"source": 5
												},
												{
													"begin": 4419,
													"end": 4455,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "99"
												},
												{
													"begin": 4419,
													"end": 4455,
													"name": "JUMPI",
													"source": 5
												},
												{
													"begin": 4435,
													"end": 4453,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "100"
												},
												{
													"begin": 4435,
													"end": 4453,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "56"
												},
												{
													"begin": 4435,
													"end": 4453,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4435,
													"end": 4453,
													"name": "tag",
													"source": 5,
													"value": "100"
												},
												{
													"begin": 4435,
													"end": 4453,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4419,
													"end": 4455,
													"name": "tag",
													"source": 5,
													"value": "99"
												},
												{
													"begin": 4419,
													"end": 4455,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4271,
													"end": 4462,
													"name": "SWAP3",
													"source": 5
												},
												{
													"begin": 4271,
													"end": 4462,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 4271,
													"end": 4462,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4271,
													"end": 4462,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4271,
													"end": 4462,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4468,
													"end": 4800,
													"name": "tag",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 4468,
													"end": 4800,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4589,
													"end": 4593,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 4627,
													"end": 4629,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 4616,
													"end": 4625,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4612,
													"end": 4630,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 4604,
													"end": 4630,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 4604,
													"end": 4630,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4640,
													"end": 4711,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "102"
												},
												{
													"begin": 4708,
													"end": 4709,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 4697,
													"end": 4706,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 4693,
													"end": 4710,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 4684,
													"end": 4690,
													"name": "DUP6",
													"source": 5
												},
												{
													"begin": 4640,
													"end": 4711,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "45"
												},
												{
													"begin": 4640,
													"end": 4711,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4640,
													"end": 4711,
													"name": "tag",
													"source": 5,
													"value": "102"
												},
												{
													"begin": 4640,
													"end": 4711,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4721,
													"end": 4793,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "103"
												},
												{
													"begin": 4789,
													"end": 4791,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 4778,
													"end": 4787,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 4774,
													"end": 4792,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 4765,
													"end": 4771,
													"name": "DUP5",
													"source": 5
												},
												{
													"begin": 4721,
													"end": 4793,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "42"
												},
												{
													"begin": 4721,
													"end": 4793,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4721,
													"end": 4793,
													"name": "tag",
													"source": 5,
													"value": "103"
												},
												{
													"begin": 4721,
													"end": 4793,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4468,
													"end": 4800,
													"name": "SWAP4",
													"source": 5
												},
												{
													"begin": 4468,
													"end": 4800,
													"name": "SWAP3",
													"source": 5
												},
												{
													"begin": 4468,
													"end": 4800,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4468,
													"end": 4800,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4468,
													"end": 4800,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4468,
													"end": 4800,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												}
											]
										}
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/Vault.sol",
								"Contracts/VaultFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createVault()": "5d12928b",
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"VaultCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/VaultFactory.sol\":\"VaultFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"Contracts/Vault.sol\":{\"keccak256\":\"0xa27b7593b907c38d12d277fbc082bbcd1c8571c2015c6eedc3c2a71776f75b01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://804c235f43635db1fce3a354df285c7122bae95ec8c4372de32abae74b574e17\",\"dweb:/ipfs/QmasJvSo7MwrGymHTsArJZpcnNa1CAm1i3uZUujnH5KeKM\"]},\"Contracts/VaultFactory.sol\":{\"keccak256\":\"0xad6e4ea6e1be752884586d8a6223897d99ce613c76297fc06f03591ef6024a4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e33b8785db37d0ebb152357f1c603c1bd0a202bb1404025cab7a12ffbba28b8f\",\"dweb:/ipfs/QmNg8v1vypA6aonR1RTSAma8aRpPZ93BfuBZM67mHC4ZNB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
							"file": "../utils/Create2.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 498,
							"src": "126:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Create2",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 497,
										"src": "134:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 520,
							"src": "172:43:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "180:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "217:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "Clones",
							"nameLocation": "825:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "94289054",
									"id": 8,
									"name": "CloneArgumentsTooLong",
									"nameLocation": "844:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:0"
									},
									"src": "838:30:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1145:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 17,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1168:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 16,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															22,
															67
														],
														"referencedDeclaration": 67,
														"src": "1162:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 15,
												"id": 20,
												"nodeType": "Return",
												"src": "1155:31:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "874:191:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1079:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1093:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1085:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:24:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1135:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1127:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:18:0"
									},
									"scope": 398,
									"src": "1070:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1675:820:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 34,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1697:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1689:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1689:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1689:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1703:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1689:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 37,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1689:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "1685:123:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "1720:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 44,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1776:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 43,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1768:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 42,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1768:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1768:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1782:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1768:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 47,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1791:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 39,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1741:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1748:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1741:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1741:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 49,
															"nodeType": "RevertStatement",
															"src": "1734:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1842:553:0",
													"nodeType": "YulBlock",
													"src": "1842:553:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2047:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2047:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2060:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2060:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2070:4:0",
																								"nodeType": "YulLiteral",
																								"src": "2070:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "2076:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "2076:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2066:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2066:3:0"
																						},
																						"nativeSrc": "2066:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2066:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2056:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2056:3:0"
																				},
																				"nativeSrc": "2056:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2056:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2094:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2094:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2053:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2053:2:0"
																		},
																		"nativeSrc": "2053:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2053:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2040:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:0"
																},
																"nativeSrc": "2040:104:0",
																"nodeType": "YulFunctionCall",
																"src": "2040:104:0"
															},
															"nativeSrc": "2040:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "2040:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2265:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2265:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2278:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2278:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2284:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2284:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2274:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2274:3:0"
																				},
																				"nativeSrc": "2274:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2274:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2301:32:0",
																				"nodeType": "YulLiteral",
																				"src": "2301:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2271:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2271:2:0"
																		},
																		"nativeSrc": "2271:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2271:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2258:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:0"
																},
																"nativeSrc": "2258:77:0",
																"nodeType": "YulFunctionCall",
																"src": "2258:77:0"
															},
															"nativeSrc": "2258:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "2258:77:0"
														},
														{
															"nativeSrc": "2348:37:0",
															"nodeType": "YulAssignment",
															"src": "2348:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2367:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "2367:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2374:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2374:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2380:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2380:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "2360:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2360:6:0"
																},
																"nativeSrc": "2360:25:0",
																"nodeType": "YulFunctionCall",
																"src": "2360:25:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2348:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "2348:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2076:14:0",
														"valueSize": 1
													},
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2284:14:0",
														"valueSize": 1
													},
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "2348:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2367:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 52,
												"nodeType": "InlineAssembly",
												"src": "1817:578:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2408:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 54,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2420:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2420:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2408:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "2404:85:0",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "2432:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 59,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2453:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2460:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2453:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2453:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 63,
															"nodeType": "RevertStatement",
															"src": "2446:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1199:381:0",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1594:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1608:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1600:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1599:39:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1665:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1657:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1656:18:0"
									},
									"scope": 398,
									"src": "1585:910:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "2972:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 78,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "3008:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3024:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 77,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															84,
															131
														],
														"referencedDeclaration": 131,
														"src": "2989:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2989:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 76,
												"id": 82,
												"nodeType": "Return",
												"src": "2982:50:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2501:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2879:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2906:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2898:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 71,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:38:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2962:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2954:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2953:18:0"
									},
									"scope": 398,
									"src": "2870:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3612:827:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 98,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3634:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3626:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 96,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3626:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3626:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3640:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3626:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 101,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "3650:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3626:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "IfStatement",
												"src": "3622:123:0",
												"trueBody": {
													"id": 114,
													"nodeType": "Block",
													"src": "3657:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 108,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3713:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3705:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 106,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3705:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3705:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3719:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3705:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "3728:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 103,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3678:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3685:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "3678:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3678:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 113,
															"nodeType": "RevertStatement",
															"src": "3671:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "3779:560:0",
													"nodeType": "YulBlock",
													"src": "3779:560:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3984:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3984:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3997:4:0",
																						"nodeType": "YulLiteral",
																						"src": "3997:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4007:4:0",
																								"nodeType": "YulLiteral",
																								"src": "4007:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "4013:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "4013:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4003:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "4003:3:0"
																						},
																						"nativeSrc": "4003:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "4003:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3993:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3993:3:0"
																				},
																				"nativeSrc": "3993:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3993:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4031:48:0",
																				"nodeType": "YulLiteral",
																				"src": "4031:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3990:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "3990:2:0"
																		},
																		"nativeSrc": "3990:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3990:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3977:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:0"
																},
																"nativeSrc": "3977:104:0",
																"nodeType": "YulFunctionCall",
																"src": "3977:104:0"
															},
															"nativeSrc": "3977:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "3977:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4202:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4202:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4215:4:0",
																						"nodeType": "YulLiteral",
																						"src": "4215:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "4221:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "4221:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4211:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4211:3:0"
																				},
																				"nativeSrc": "4211:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4211:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4238:32:0",
																				"nodeType": "YulLiteral",
																				"src": "4238:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4208:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "4208:2:0"
																		},
																		"nativeSrc": "4208:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4208:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4195:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:0"
																},
																"nativeSrc": "4195:77:0",
																"nodeType": "YulFunctionCall",
																"src": "4195:77:0"
															},
															"nativeSrc": "4195:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "4195:77:0"
														},
														{
															"nativeSrc": "4285:44:0",
															"nodeType": "YulAssignment",
															"src": "4285:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4305:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4305:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4312:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4312:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4318:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4318:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4324:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4324:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "4297:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "4297:7:0"
																},
																"nativeSrc": "4297:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4297:32:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "4285:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "4285:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4013:14:0",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4221:14:0",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "4285:8:0",
														"valueSize": 1
													},
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "4324:4:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "4305:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 116,
												"nodeType": "InlineAssembly",
												"src": "3754:585:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 117,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "4352:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4372:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4364:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4364:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4352:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "4348:85:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "4376:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 123,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "4397:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4404:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "4397:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4397:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "4390:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3045:415:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3474:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3510:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3502:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3534:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 88,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3564:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:83:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3602:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3594:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:18:0"
									},
									"scope": 398,
									"src": "3465:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "4714:537:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4749:496:0",
													"nodeType": "YulBlock",
													"src": "4749:496:0",
													"statements": [
														{
															"nativeSrc": "4763:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4763:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4780:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4780:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4774:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4774:5:0"
																},
																"nativeSrc": "4774:11:0",
																"nodeType": "YulFunctionCall",
																"src": "4774:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "4767:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4767:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4809:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4809:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4814:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4814:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4805:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:0"
																		},
																		"nativeSrc": "4805:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4805:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4821:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "4821:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:0"
																},
																"nativeSrc": "4798:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4798:32:0"
															},
															"nativeSrc": "4798:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "4798:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4854:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4854:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4859:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4859:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4850:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:0"
																		},
																		"nativeSrc": "4850:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4866:34:0",
																		"nodeType": "YulLiteral",
																		"src": "4866:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4843:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:0"
																},
																"nativeSrc": "4843:58:0",
																"nodeType": "YulFunctionCall",
																"src": "4843:58:0"
															},
															"nativeSrc": "4843:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "4843:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4925:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4925:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4930:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4930:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4921:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4921:3:0"
																		},
																		"nativeSrc": "4921:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4921:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "4937:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "4937:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4914:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:0"
																},
																"nativeSrc": "4914:38:0",
																"nodeType": "YulFunctionCall",
																"src": "4914:38:0"
															},
															"nativeSrc": "4914:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "4914:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4972:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4977:42:0",
																		"nodeType": "YulLiteral",
																		"src": "4977:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4965:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:0"
																},
																"nativeSrc": "4965:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4965:55:0"
															},
															"nativeSrc": "4965:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4965:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5044:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5044:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5049:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5049:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5040:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5040:3:0"
																		},
																		"nativeSrc": "5040:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "5056:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "5056:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5033:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:0"
																},
																"nativeSrc": "5033:28:0",
																"nodeType": "YulFunctionCall",
																"src": "5033:28:0"
															},
															"nativeSrc": "5033:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "5033:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5085:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5085:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5090:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5090:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5081:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:0"
																		},
																		"nativeSrc": "5081:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5081:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5111:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5111:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5116:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5116:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5107:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5107:3:0"
																				},
																				"nativeSrc": "5107:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5107:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5123:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5123:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5097:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5097:9:0"
																		},
																		"nativeSrc": "5097:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5097:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5074:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5074:6:0"
																},
																"nativeSrc": "5074:55:0",
																"nodeType": "YulFunctionCall",
																"src": "5074:55:0"
															},
															"nativeSrc": "5074:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "5074:55:0"
														},
														{
															"nativeSrc": "5142:93:0",
															"nodeType": "YulAssignment",
															"src": "5142:93:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5173:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5173:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5178:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5178:4:0",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5169:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5169:3:0"
																				},
																				"nativeSrc": "5169:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5169:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5185:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5185:4:0",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5159:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5159:9:0"
																		},
																		"nativeSrc": "5159:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5159:31:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5192:42:0",
																		"nodeType": "YulLiteral",
																		"src": "5192:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5155:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "5155:3:0"
																},
																"nativeSrc": "5155:80:0",
																"nodeType": "YulFunctionCall",
																"src": "5155:80:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "5142:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "5142:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "4821:8:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "4937:14:0",
														"valueSize": 1
													},
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "5142:9:0",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "5056:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 143,
												"nodeType": "InlineAssembly",
												"src": "4724:521:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4445:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "4558:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4603:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4595:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4635:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4627:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "4657:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4649:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:86:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4703:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4695:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4694:19:0"
									},
									"scope": 398,
									"src": "4549:702:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "5500:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 156,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "5545:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "5561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 160,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5575:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5567:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5567:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 155,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															145,
															165
														],
														"referencedDeclaration": 145,
														"src": "5517:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5517:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 163,
												"nodeType": "Return",
												"src": "5510:71:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5257:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5370:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5415:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5407:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5439:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5397:60:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "5489:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5481:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5480:19:0"
									},
									"scope": 398,
									"src": "5361:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6094:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "6134:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "6150:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6156:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 175,
														"name": "cloneWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															182,
															236
														],
														"referencedDeclaration": 236,
														"src": "6111:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,uint256) returns (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6111:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 180,
												"nodeType": "Return",
												"src": "6104:54:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "5594:384:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "5992:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6023:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6015:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "6052:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6039:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6039:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6014:43:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "6084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6076:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6075:18:0"
									},
									"scope": 398,
									"src": "5983:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "6753:437:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6775:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6767:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6767:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6767:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6781:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "6767:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 199,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "6791:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6767:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "6763:123:0",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "6798:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 206,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "6854:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6846:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6846:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6846:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6860:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "6846:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "6869:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 201,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "6819:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6826:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "6819:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6819:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 211,
															"nodeType": "RevertStatement",
															"src": "6812:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "6908:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "6895:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"arguments": [
														{
															"id": 217,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6947:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "6963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 216,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "6919:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6919:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6895:73:0"
											},
											{
												"AST": {
													"nativeSrc": "7003:87:0",
													"nodeType": "YulBlock",
													"src": "7003:87:0",
													"statements": [
														{
															"nativeSrc": "7017:63:0",
															"nodeType": "YulAssignment",
															"src": "7017:63:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7036:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "7036:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "7047:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "7047:8:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7057:4:0",
																				"nodeType": "YulLiteral",
																				"src": "7057:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7043:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "7043:3:0"
																		},
																		"nativeSrc": "7043:19:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7043:19:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "7070:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "7070:8:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7064:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "7064:5:0"
																		},
																		"nativeSrc": "7064:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7064:15:0"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "7029:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "7029:6:0"
																},
																"nativeSrc": "7029:51:0",
																"nodeType": "YulFunctionCall",
																"src": "7029:51:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "7017:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "7017:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "7047:8:0",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "7070:8:0",
														"valueSize": 1
													},
													{
														"declaration": 192,
														"isOffset": false,
														"isSlot": false,
														"src": "7017:8:0",
														"valueSize": 1
													},
													{
														"declaration": 189,
														"isOffset": false,
														"isSlot": false,
														"src": "7036:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 221,
												"nodeType": "InlineAssembly",
												"src": "6978:112:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7103:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7123:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 223,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7115:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7115:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7103:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "7099:85:0",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "7127:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 228,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "7148:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7155:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "7148:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7148:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 232,
															"nodeType": "RevertStatement",
															"src": "7141:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6171:421:0",
										"text": " @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "6606:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6646:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6638:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6628:88:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "6743:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6735:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6734:18:0"
									},
									"scope": 398,
									"src": "6597:593:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "7934:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 249,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "7987:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 250,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "8003:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 251,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "8009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8015:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 248,
														"name": "cloneDeterministicWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															285
														],
														"referencedDeclaration": 285,
														"src": "7951:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,uint256) returns (address)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7951:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 247,
												"id": 254,
												"nodeType": "Return",
												"src": "7944:73:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "7196:565:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "7775:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "7828:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7820:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "7865:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7852:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7852:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "7887:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7879:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7810:87:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "7924:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7916:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7915:18:0"
									},
									"scope": 398,
									"src": "7766:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "8681:144:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "8704:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "8691:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 270,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"id": 273,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "8743:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "8759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 272,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "8715:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8715:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8691:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "8796:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 280,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "8803:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 281,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "8809:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 277,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8789:6:0",
														"memberName": "deploy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 462,
														"src": "8781:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (uint256,bytes32,bytes memory) returns (address)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8781:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 269,
												"id": 283,
												"nodeType": "Return",
												"src": "8774:44:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "8030:455:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "8499:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "8552:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8544:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "8589:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8576:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8576:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "8611:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8603:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:110:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "8671:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8663:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8662:18:0"
									},
									"scope": 398,
									"src": "8490:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "9161:166:0",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "9184:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "9171:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9171:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 302,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "9223:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "9239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 301,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "9195:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9195:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9284:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 310,
																	"name": "bytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "9300:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 309,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "9290:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9290:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 312,
															"name": "deployer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "9311:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 306,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "9261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9269:14:0",
														"memberName": "computeAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "9261:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9261:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 298,
												"id": 314,
												"nodeType": "Return",
												"src": "9254:66:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "8831:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "8961:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "9023:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9015:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "9060:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9047:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9047:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "9082:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9074:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "9104:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9096:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9005:113:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "9150:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9142:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9141:19:0"
									},
									"scope": 398,
									"src": "8952:375:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "9637:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "9699:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "9715:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 331,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9721:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9735:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9727:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9727:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "predictDeterministicAddressWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															316,
															339
														],
														"referencedDeclaration": 316,
														"src": "9654:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,address) pure returns (address)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9654:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 327,
												"id": 337,
												"nodeType": "Return",
												"src": "9647:94:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "9333:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "9463:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "9525:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9517:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "9562:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9549:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "9584:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9576:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9507:87:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "9626:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9618:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9617:19:0"
									},
									"scope": 398,
									"src": "9454:294:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "10441:246:0",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10464:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "10451:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 347,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10451:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 351,
																		"name": "instance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "10483:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10492:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "10483:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10497:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10483:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "3435",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10506:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"src": "10483:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10473:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 349,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10477:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10473:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10451:58:0"
											},
											{
												"AST": {
													"nativeSrc": "10577:81:0",
													"nodeType": "YulBlock",
													"src": "10577:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "instance",
																		"nativeSrc": "10603:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "10603:8:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "10617:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10617:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10625:2:0",
																				"nodeType": "YulLiteral",
																				"src": "10625:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10613:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "10613:3:0"
																		},
																		"nativeSrc": "10613:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10613:15:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10630:2:0",
																		"nodeType": "YulLiteral",
																		"src": "10630:2:0",
																		"type": "",
																		"value": "45"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "10640:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10640:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10634:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "10634:5:0"
																		},
																		"nativeSrc": "10634:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10634:13:0"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nativeSrc": "10591:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "10591:11:0"
																},
																"nativeSrc": "10591:57:0",
																"nodeType": "YulFunctionCall",
																"src": "10591:57:0"
															},
															"nativeSrc": "10591:57:0",
															"nodeType": "YulExpressionStatement",
															"src": "10591:57:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 342,
														"isOffset": false,
														"isSlot": false,
														"src": "10603:8:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "10617:6:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "10640:6:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 358,
												"nodeType": "InlineAssembly",
												"src": "10552:106:0"
											},
											{
												"expression": {
													"id": 359,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "10674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 346,
												"id": 360,
												"nodeType": "Return",
												"src": "10667:13:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "9754:603:0",
										"text": " @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchCloneArgs",
									"nameLocation": "10371:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "10394:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10386:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10385:18:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10427:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10426:14:0"
									},
									"scope": 398,
									"src": "10362:325:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "11476:362:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 372,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11495:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11490:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3234353331",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11504:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24531_by_1",
															"typeString": "int_const 24531"
														},
														"value": "24531"
													},
													"src": "11490:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "11486:55:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 376,
															"name": "CloneArgumentsTooLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "11518:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11518:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 378,
													"nodeType": "RevertStatement",
													"src": "11511:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "61",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															"value": "a"
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 385,
																			"name": "args",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "11636:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11641:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "11636:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3435",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11650:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_45_by_1",
																			"typeString": "int_const 45"
																		},
																		"value": "45"
																	},
																	"src": "11636:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11629:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint16_$",
																	"typeString": "type(uint16)"
																},
																"typeName": {
																	"id": 383,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "11629:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11629:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"hexValue": "3d81600a3d39f3363d3d373d3d3d363d73",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11671:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															}
														},
														{
															"id": 391,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "11728:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5af43d82803e903d91602b57fd5bf3",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11760:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															}
														},
														{
															"id": 393,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11813:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 380,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "11570:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11574:12:0",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "11570:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11570:261:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 371,
												"id": 395,
												"nodeType": "Return",
												"src": "11551:280:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "10693:640:0",
										"text": " @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_cloneCodeWithImmutableArgs",
									"nameLocation": "11347:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "11392:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11384:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "11429:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11416:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11416:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11374:65:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11462:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11462:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11461:14:0"
									},
									"scope": 398,
									"src": "11338:500:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 399,
							"src": "817:11023:0",
							"usedErrors": [
								8
							],
							"usedEvents": []
						}
					],
					"src": "100:11741:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
					"exportedSymbols": {
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 498,
							"sourceUnit": 520,
							"src": "127:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "135:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Create2",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "165:367:1",
								"text": " @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "Create2",
							"nameLocation": "541:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "555:50:1",
										"text": " @dev There's no code to deploy."
									},
									"errorSelector": "4ca249dc",
									"id": 406,
									"name": "Create2EmptyBytecode",
									"nameLocation": "616:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:2:1"
									},
									"src": "610:29:1"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1311:746:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1333:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1325:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1325:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1339:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1325:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 423,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1349:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1325:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "1321:125:1",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "1357:89:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 430,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1413:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				],
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1405:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 428,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1405:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1405:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1419:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1405:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 433,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "1428:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 425,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1378:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1385:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1378:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1378:57:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 435,
															"nodeType": "RevertStatement",
															"src": "1371:64:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 438,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1459:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1468:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1459:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1459:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "1455:80:1",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "1481:54:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 442,
																	"name": "Create2EmptyBytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1502:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "1495:29:1"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1569:392:1",
													"nodeType": "YulBlock",
													"src": "1569:392:1",
													"statements": [
														{
															"nativeSrc": "1583:67:1",
															"nodeType": "YulAssignment",
															"src": "1583:67:1",
															"value": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "1599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1611:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1611:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1621:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1607:3:1"
																		},
																		"nativeSrc": "1607:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1607:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1634:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:8:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1628:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1628:5:1"
																		},
																		"nativeSrc": "1628:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:15:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "1645:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:4:1"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "1591:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:7:1"
																},
																"nativeSrc": "1591:59:1",
																"nodeType": "YulFunctionCall",
																"src": "1591:59:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "1583:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1583:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1800:151:1",
																"nodeType": "YulBlock",
																"src": "1800:151:1",
																"statements": [
																	{
																		"nativeSrc": "1818:20:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1818:20:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1833:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1833:4:1",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1827:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1827:5:1"
																			},
																			"nativeSrc": "1827:11:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1827:11:1"
																		},
																		"variables": [
																			{
																				"name": "p",
																				"nativeSrc": "1822:1:1",
																				"nodeType": "YulTypedName",
																				"src": "1822:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1870:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1870:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1876:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1876:14:1"
																					},
																					"nativeSrc": "1876:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1876:16:1"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "1855:14:1",
																				"nodeType": "YulIdentifier",
																				"src": "1855:14:1"
																			},
																			"nativeSrc": "1855:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1855:38:1"
																		},
																		"nativeSrc": "1855:38:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:38:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1917:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1917:1:1"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1920:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1920:14:1"
																					},
																					"nativeSrc": "1920:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1920:16:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1910:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1910:6:1"
																			},
																			"nativeSrc": "1910:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1910:27:1"
																		},
																		"nativeSrc": "1910:27:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1910:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "addr",
																				"nativeSrc": "1762:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1762:4:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1755:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1755:6:1"
																		},
																		"nativeSrc": "1755:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "1780:14:1",
																							"nodeType": "YulIdentifier",
																							"src": "1780:14:1"
																						},
																						"nativeSrc": "1780:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:16:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1773:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1773:6:1"
																				},
																				"nativeSrc": "1773:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1773:24:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:1"
																		},
																		"nativeSrc": "1769:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:29:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1751:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1751:3:1"
																},
																"nativeSrc": "1751:48:1",
																"nodeType": "YulFunctionCall",
																"src": "1751:48:1"
															},
															"nativeSrc": "1748:203:1",
															"nodeType": "YulIf",
															"src": "1748:203:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1583:4:1",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1762:4:1",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "1599:6:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1611:8:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1634:8:1",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "1645:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 447,
												"nodeType": "InlineAssembly",
												"src": "1544:417:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 448,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1974:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1990:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 449,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1982:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1982:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1974:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "1970:81:1",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "1994:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 454,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2015:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2022:16:1",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2015:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2015:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 458,
															"nodeType": "RevertStatement",
															"src": "2008:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "645:560:1",
										"text": " @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nameLocation": "1219:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1234:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1226:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1250:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1242:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "bytecode",
												"nameLocation": "1269:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1256:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1256:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:53:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1297:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:14:1"
									},
									"scope": 497,
									"src": "1210:847:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2353:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 473,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2385:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 474,
															"name": "bytecodeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2391:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2413:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2405:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2405:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2405:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 472,
														"name": "computeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															482,
															496
														],
														"referencedDeclaration": 496,
														"src": "2370:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 480,
												"nodeType": "Return",
												"src": "2363:56:1"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2063:193:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2270:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2293:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2285:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2307:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2299:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:36:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2344:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:9:1"
									},
									"scope": 497,
									"src": "2261:165:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2784:1679:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2819:1638:1",
													"nodeType": "YulBlock",
													"src": "2819:1638:1",
													"statements": [
														{
															"nativeSrc": "2833:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2833:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2850:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2850:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2844:5:1"
																},
																"nativeSrc": "2844:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2844:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "2837:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2837:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4057:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4057:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4062:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4062:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4053:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:1"
																		},
																		"nativeSrc": "4053:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4053:14:1"
																	},
																	{
																		"name": "bytecodeHash",
																		"nativeSrc": "4069:12:1",
																		"nodeType": "YulIdentifier",
																		"src": "4069:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4046:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:1"
																},
																"nativeSrc": "4046:36:1",
																"nodeType": "YulFunctionCall",
																"src": "4046:36:1"
															},
															"nativeSrc": "4046:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "4046:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4106:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4106:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4111:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:1"
																		},
																		"nativeSrc": "4102:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:14:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4118:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4095:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:1"
																},
																"nativeSrc": "4095:28:1",
																"nodeType": "YulFunctionCall",
																"src": "4095:28:1"
															},
															"nativeSrc": "4095:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "4095:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4143:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4143:3:1"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4148:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4148:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:1"
																},
																"nativeSrc": "4136:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4136:21:1"
															},
															"nativeSrc": "4136:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4136:21:1"
														},
														{
															"nativeSrc": "4219:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4219:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4236:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4241:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4241:4:1",
																		"type": "",
																		"value": "0x0b"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4232:3:1"
																},
																"nativeSrc": "4232:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4232:14:1"
															},
															"variables": [
																{
																	"name": "start",
																	"nativeSrc": "4223:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4223:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nativeSrc": "4337:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4337:7:1"
																},
																"nativeSrc": "4337:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4337:20:1"
															},
															"nativeSrc": "4337:20:1",
															"nodeType": "YulExpressionStatement",
															"src": "4337:20:1"
														},
														{
															"nativeSrc": "4370:77:1",
															"nodeType": "YulAssignment",
															"src": "4370:77:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "start",
																				"nativeSrc": "4392:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4399:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4399:2:1",
																				"type": "",
																				"value": "85"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "4382:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "4382:9:1"
																		},
																		"nativeSrc": "4382:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4382:20:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:42:1",
																		"nodeType": "YulLiteral",
																		"src": "4404:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4378:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:1"
																},
																"nativeSrc": "4378:69:1",
																"nodeType": "YulFunctionCall",
																"src": "4378:69:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "4370:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4370:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "4370:4:1",
														"valueSize": 1
													},
													{
														"declaration": 487,
														"isOffset": false,
														"isSlot": false,
														"src": "4069:12:1",
														"valueSize": 1
													},
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": false,
														"src": "4148:8:1",
														"valueSize": 1
													},
													{
														"declaration": 485,
														"isOffset": false,
														"isSlot": false,
														"src": "4118:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 494,
												"nodeType": "InlineAssembly",
												"src": "2794:1663:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2432:232:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2678:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2701:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2693:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2715:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2707:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "2737:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2729:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:54:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2778:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2770:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:14:1"
									},
									"scope": 497,
									"src": "2669:1794:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "533:3932:1",
							"usedErrors": [
								406
							],
							"usedEvents": []
						}
					],
					"src": "101:4365:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							519
						]
					},
					"id": 520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:2",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "Errors",
							"nameLocation": "419:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:2",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 507,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "557:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "574:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:2"
									},
									"src": "531:59:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:2",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 510,
									"name": "FailedCall",
									"nameLocation": "696:10:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:2"
									},
									"src": "690:19:2"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:2",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 513,
									"name": "FailedDeployment",
									"nameLocation": "772:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:2"
									},
									"src": "766:25:2"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:2",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 518,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "884:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:2"
									},
									"src": "860:33:2"
								}
							],
							"scope": 520,
							"src": "411:484:2",
							"usedErrors": [
								507,
								510,
								513,
								518
							],
							"usedEvents": []
						}
					],
					"src": "100:796:2"
				},
				"id": 2
			},
			"Contracts/Vault.sol": {
				"ast": {
					"absolutePath": "Contracts/Vault.sol",
					"exportedSymbols": {
						"Vault": [
							584
						]
					},
					"id": 585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Vault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 584,
							"linearizedBaseContracts": [
								584
							],
							"name": "Vault",
							"nameLocation": "67:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 523,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "94:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "79:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 522,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "79:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b69ef8a8",
									"id": 525,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "120:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "105:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 524,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "105:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 531,
									"name": "Deposited",
									"nameLocation": "140:9:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "158:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "150:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "172:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "164:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:30:3"
									},
									"src": "134:46:3"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "231:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 537,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "249:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "266:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "258:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "258:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "258:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "249:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "270:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "241:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "241:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "241:51:3"
											},
											{
												"expression": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 546,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "302:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 547,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "310:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "302:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "302:14:3"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "195:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "214:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "206:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:16:3"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:0:3"
									},
									"scope": 584,
									"src": "186:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "365:148:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "383:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "387:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "383:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 557,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "397:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "383:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e206465706f736974",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "404:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba",
																"typeString": "literal_string \"Only owner can deposit\""
															},
															"value": "Only owner can deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_660aece9ccd96b9c7359419ce37a7942db775d4272c56678e97cc279e0a56fba",
																"typeString": "literal_string \"Only owner can deposit\""
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "375:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "375:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "375:54:3"
											},
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "439:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 563,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "450:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "454:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "450:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "439:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "439:20:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 568,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "484:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "488:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "484:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 570,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "496:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "500:5:3",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "496:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 567,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "474:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "474:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "EmitStatement",
												"src": "469:37:3"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "338:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:2:3"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "365:0:3"
									},
									"scope": 584,
									"src": "329:184:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "573:31:3",
										"statements": [
											{
												"expression": {
													"id": 580,
													"name": "balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 525,
													"src": "590:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 579,
												"id": 581,
												"nodeType": "Return",
												"src": "583:14:3"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "528:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:2:3"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "564:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:9:3"
									},
									"scope": 584,
									"src": "519:85:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 585,
							"src": "58:554:3",
							"usedErrors": [],
							"usedEvents": [
								531
							]
						}
					],
					"src": "32:581:3"
				},
				"id": 3
			},
			"Contracts/VaultFactory.sol": {
				"ast": {
					"absolutePath": "Contracts/VaultFactory.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						],
						"Vault": [
							584
						],
						"VaultFactory": [
							642
						]
					},
					"id": 643,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 587,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 643,
							"sourceUnit": 399,
							"src": "58:50:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/Vault.sol",
							"file": "./Vault.sol",
							"id": 588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 643,
							"sourceUnit": 585,
							"src": "109:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VaultFactory",
							"contractDependencies": [
								584
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 642,
							"linearizedBaseContracts": [
								642
							],
							"name": "VaultFactory",
							"nameLocation": "141:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5c60da1b",
									"id": 590,
									"mutability": "immutable",
									"name": "implementation",
									"nameLocation": "185:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "160:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 589,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "160:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5d9c31ffa0fecffd7cf379989a3c7af252f0335e0d2a1320b55245912c781f53",
									"id": 596,
									"name": "VaultCreated",
									"nameLocation": "212:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"mutability": "mutable",
												"name": "newVault",
												"nameLocation": "233:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "225:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:33:4"
									},
									"src": "206:52:4"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "278:80:4",
										"statements": [
											{
												"expression": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 599,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "288:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "313:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Vault_$584_$",
																		"typeString": "function () returns (contract Vault)"
																	},
																	"typeName": {
																		"id": 603,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 602,
																			"name": "Vault",
																			"nameLocations": [
																				"317:5:4"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 584,
																			"src": "317:5:4"
																		},
																		"referencedDeclaration": 584,
																		"src": "317:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Vault_$584",
																			"typeString": "contract Vault"
																		}
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "313:11:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Vault_$584",
																	"typeString": "contract Vault"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Vault_$584",
																	"typeString": "contract Vault"
																}
															],
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "305:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 600,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "305:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "305:20:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "288:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "288:37:4"
											}
										]
									},
									"id": 610,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:2:4"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:0:4"
									},
									"scope": 642,
									"src": "264:94:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "414:259:4",
										"statements": [
											{
												"assignments": [
													616
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "clone",
														"nameLocation": "432:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "424:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 615,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "424:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 621,
												"initialValue": {
													"arguments": [
														{
															"id": 619,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "453:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 617,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "440:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$398_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "447:5:4",
														"memberName": "clone",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "440:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "440:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "424:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307841623834383346363464394336643145634639623834394165363737644433333135383335636232",
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "534:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "526:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 626,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "526:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "526:51:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 623,
																	"name": "clone",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "508:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 622,
																"name": "Vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "502:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Vault_$584_$",
																	"typeString": "type(contract Vault)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "502:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Vault_$584",
																"typeString": "contract Vault"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "515:10:4",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 551,
														"src": "502:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "502:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "502:76:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 633,
															"name": "clone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "626:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 634,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "633:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "637:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "633:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 632,
														"name": "VaultCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "613:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "613:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "EmitStatement",
												"src": "608:36:4"
											},
											{
												"expression": {
													"id": 638,
													"name": "clone",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 616,
													"src": "661:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 614,
												"id": 639,
												"nodeType": "Return",
												"src": "654:12:4"
											}
										]
									},
									"functionSelector": "5d12928b",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createVault",
									"nameLocation": "373:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:2:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "405:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:9:4"
									},
									"scope": 642,
									"src": "364:309:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 643,
							"src": "132:548:4",
							"usedErrors": [
								507,
								513
							],
							"usedEvents": [
								596
							]
						}
					],
					"src": "32:649:4"
				},
				"id": 4
			}
		}
	}
}