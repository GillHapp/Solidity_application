{
	"id": "159ff59b94e02ec4e286960db1f83915",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/minimal1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"./Logic.sol\";\n\ncontract ProxyFactory {\n    address public logicImplementation;\n    address[] public allClones;\n\n    constructor(address _logic) {\n        logicImplementation = _logic;\n    }\n\n    function createClone(uint256 _value) external returns (address) {\n        address clone = Clones.clone(logicImplementation);\n        Logic(clone).initialize(msg.sender, _value);\n        allClones.push(clone);\n        return clone;\n    }\n\n    function getClones() external view returns (address[] memory) {\n        return allClones;\n    }\n}\n\n\n\n"
			},
			"Contracts/Logic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Logic {\n    address public owner;\n    uint256 public value;\n\n    function initialize(address _owner, uint256 _value) external {\n        require(owner == address(0), \"Already initialized\");\n        owner = _owner;\n        value = _value;\n    }\n\n    function updateValue(uint256 _newValue) external {\n        require(msg.sender == owner, \"Not the owner\");\n        value = _newValue;\n    }\n}\n\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [
						{
							"inputs": [],
							"name": "CloneArgumentsTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:11840  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:11840  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220572cfd18686fd7b58fd93356925dae12b5c14ab97aa302cd22a4796560b2ab6464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220572cfd18686fd7b58fd93356925dae12b5c14ab97aa302cd22a4796560b2ab6464736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0x2C REVERT XOR PUSH9 0x6FD7B58FD93356925D 0xAE SLT 0xB5 0xC1 BLOBBASEFEE 0xB9 PUSH27 0xA302CD22A4796560B2AB6464736F6C634300081A00330000000000 ",
							"sourceMap": "817:11023:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220572cfd18686fd7b58fd93356925dae12b5c14ab97aa302cd22a4796560b2ab6464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0x2C REVERT XOR PUSH9 0x6FD7B58FD93356925D 0xAE SLT 0xB5 0xC1 BLOBBASEFEE 0xB9 PUSH27 0xA302CD22A4796560B2AB6464736F6C634300081A00330000000000 ",
							"sourceMap": "817:11023:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_cloneCodeWithImmutableArgs(address,bytes memory)": "infinite",
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32,uint256)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory,uint256)": "infinite",
								"fetchCloneArgs(address)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220572cfd18686fd7b58fd93356925dae12b5c14ab97aa302cd22a4796560b2ab6464736f6c634300081a0033",
									".code": [
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/Logic.sol",
								"Contracts/minimal1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [
						{
							"inputs": [],
							"name": "Create2EmptyBytecode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"errors": {
							"Create2EmptyBytecode()": [
								{
									"details": "There's no code to deploy."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4B 0x2D CALLCODE MCOPY SWAP14 MLOAD GASPRICE 0xA6 0xC9 MCOPY OR PUSH3 0x461E2C OR MSTORE8 PUSH15 0xEB62AA9BDB6011B3D03F6D259B6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4B 0x2D CALLCODE MCOPY SWAP14 MLOAD GASPRICE 0xA6 0xC9 MCOPY OR PUSH3 0x461E2C OR MSTORE8 PUSH15 0xEB62AA9BDB6011B3D03F6D259B6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeAddress(bytes32,bytes32)": "infinite",
								"computeAddress(bytes32,bytes32,address)": "infinite",
								"deploy(uint256,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033",
									".code": [
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/Logic.sol",
								"Contracts/minimal1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/Logic.sol",
								"Contracts/minimal1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/Logic.sol": {
				"Logic": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newValue",
									"type": "uint256"
								}
							],
							"name": "updateValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "value",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/Logic.sol\":57:454  contract Logic {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/Logic.sol\":57:454  contract Logic {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3fa4f245\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x573c0bd3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/Logic.sol\":104:124  uint256 public value */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/Logic.sol\":314:452  function updateValue(uint256 _newValue) external {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"Contracts/Logic.sol\":78:98  address public owner */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/Logic.sol\":131:308  function initialize(address _owner, uint256 _value) external {... */\n    tag_6:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Contracts/Logic.sol\":104:124  uint256 public value */\n    tag_8:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Contracts/Logic.sol\":314:452  function updateValue(uint256 _newValue) external {... */\n    tag_14:\n        /* \"Contracts/Logic.sol\":395:400  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Logic.sol\":381:400  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Logic.sol\":381:391  msg.sender */\n      caller\n        /* \"Contracts/Logic.sol\":381:400  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/Logic.sol\":373:418  require(msg.sender == owner, \"Not the owner\") */\n      tag_24\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n        /* \"Contracts/Logic.sol\":436:445  _newValue */\n      dup1\n        /* \"Contracts/Logic.sol\":428:433  value */\n      0x01\n        /* \"Contracts/Logic.sol\":428:445  value = _newValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Logic.sol\":314:452  function updateValue(uint256 _newValue) external {... */\n      pop\n      jump\t// out\n        /* \"Contracts/Logic.sol\":78:98  address public owner */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Contracts/Logic.sol\":131:308  function initialize(address _owner, uint256 _value) external {... */\n    tag_22:\n        /* \"Contracts/Logic.sol\":227:228  0 */\n      0x00\n        /* \"Contracts/Logic.sol\":210:229  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Logic.sol\":210:215  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Logic.sol\":210:229  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/Logic.sol\":202:253  require(owner == address(0), \"Already initialized\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"Contracts/Logic.sol\":271:277  _owner */\n      dup2\n        /* \"Contracts/Logic.sol\":263:268  owner */\n      0x00\n      dup1\n        /* \"Contracts/Logic.sol\":263:277  owner = _owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Logic.sol\":295:301  _value */\n      dup1\n        /* \"Contracts/Logic.sol\":287:292  value */\n      0x01\n        /* \"Contracts/Logic.sol\":287:301  value = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Logic.sol\":131:308  function initialize(address _owner, uint256 _value) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_31:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_32:\n        /* \"#utility.yul\":177:201   */\n      tag_51\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_31\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_10:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_53\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_32\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_34:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_36:\n        /* \"#utility.yul\":842:866   */\n      tag_58\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_31\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_59:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_37:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_61\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_36\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_13:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_64\n      tag_34\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1118:1237   */\n    tag_63:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_65\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_37\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_38:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_39:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_68\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_38\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_40:\n        /* \"#utility.yul\":1698:1722   */\n      tag_70\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_39\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_18:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_72\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_40\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_41:\n        /* \"#utility.yul\":2036:2060   */\n      tag_74\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_39\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_75\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      dup1\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_75:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_42:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_77\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_41\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2710   */\n    tag_21:\n        /* \"#utility.yul\":2304:2310   */\n      0x00\n        /* \"#utility.yul\":2312:2318   */\n      dup1\n        /* \"#utility.yul\":2361:2363   */\n      0x40\n        /* \"#utility.yul\":2349:2358   */\n      dup4\n        /* \"#utility.yul\":2340:2347   */\n      dup6\n        /* \"#utility.yul\":2336:2359   */\n      sub\n        /* \"#utility.yul\":2332:2364   */\n      slt\n        /* \"#utility.yul\":2329:2448   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":2367:2446   */\n      tag_80\n      tag_34\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2329:2448   */\n    tag_79:\n        /* \"#utility.yul\":2487:2488   */\n      0x00\n        /* \"#utility.yul\":2512:2565   */\n      tag_81\n        /* \"#utility.yul\":2557:2564   */\n      dup6\n        /* \"#utility.yul\":2548:2554   */\n      dup3\n        /* \"#utility.yul\":2537:2546   */\n      dup7\n        /* \"#utility.yul\":2533:2555   */\n      add\n        /* \"#utility.yul\":2512:2565   */\n      tag_42\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2502:2565   */\n      swap3\n      pop\n        /* \"#utility.yul\":2458:2575   */\n      pop\n        /* \"#utility.yul\":2614:2616   */\n      0x20\n        /* \"#utility.yul\":2640:2693   */\n      tag_82\n        /* \"#utility.yul\":2685:2692   */\n      dup6\n        /* \"#utility.yul\":2676:2682   */\n      dup3\n        /* \"#utility.yul\":2665:2674   */\n      dup7\n        /* \"#utility.yul\":2661:2683   */\n      add\n        /* \"#utility.yul\":2640:2693   */\n      tag_37\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2630:2693   */\n      swap2\n      pop\n        /* \"#utility.yul\":2585:2703   */\n      pop\n        /* \"#utility.yul\":2236:2710   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2885   */\n    tag_43:\n        /* \"#utility.yul\":2800:2811   */\n      0x00\n        /* \"#utility.yul\":2834:2840   */\n      dup3\n        /* \"#utility.yul\":2829:2832   */\n      dup3\n        /* \"#utility.yul\":2822:2841   */\n      mstore\n        /* \"#utility.yul\":2874:2878   */\n      0x20\n        /* \"#utility.yul\":2869:2872   */\n      dup3\n        /* \"#utility.yul\":2865:2879   */\n      add\n        /* \"#utility.yul\":2850:2879   */\n      swap1\n      pop\n        /* \"#utility.yul\":2716:2885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3054   */\n    tag_44:\n        /* \"#utility.yul\":3031:3046   */\n      0x4e6f7420746865206f776e657200000000000000000000000000000000000000\n        /* \"#utility.yul\":3027:3028   */\n      0x00\n        /* \"#utility.yul\":3019:3025   */\n      dup3\n        /* \"#utility.yul\":3015:3029   */\n      add\n        /* \"#utility.yul\":3008:3047   */\n      mstore\n        /* \"#utility.yul\":2891:3054   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3060:3426   */\n    tag_45:\n        /* \"#utility.yul\":3202:3205   */\n      0x00\n        /* \"#utility.yul\":3223:3290   */\n      tag_86\n        /* \"#utility.yul\":3287:3289   */\n      0x0d\n        /* \"#utility.yul\":3282:3285   */\n      dup4\n        /* \"#utility.yul\":3223:3290   */\n      tag_43\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3216:3290   */\n      swap2\n      pop\n        /* \"#utility.yul\":3299:3392   */\n      tag_87\n        /* \"#utility.yul\":3388:3391   */\n      dup3\n        /* \"#utility.yul\":3299:3392   */\n      tag_44\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3417:3419   */\n      0x20\n        /* \"#utility.yul\":3412:3415   */\n      dup3\n        /* \"#utility.yul\":3408:3420   */\n      add\n        /* \"#utility.yul\":3401:3420   */\n      swap1\n      pop\n        /* \"#utility.yul\":3060:3426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3432:3851   */\n    tag_26:\n        /* \"#utility.yul\":3598:3602   */\n      0x00\n        /* \"#utility.yul\":3636:3638   */\n      0x20\n        /* \"#utility.yul\":3625:3634   */\n      dup3\n        /* \"#utility.yul\":3621:3639   */\n      add\n        /* \"#utility.yul\":3613:3639   */\n      swap1\n      pop\n        /* \"#utility.yul\":3685:3694   */\n      dup2\n        /* \"#utility.yul\":3679:3683   */\n      dup2\n        /* \"#utility.yul\":3675:3695   */\n      sub\n        /* \"#utility.yul\":3671:3672   */\n      0x00\n        /* \"#utility.yul\":3660:3669   */\n      dup4\n        /* \"#utility.yul\":3656:3673   */\n      add\n        /* \"#utility.yul\":3649:3696   */\n      mstore\n        /* \"#utility.yul\":3713:3844   */\n      tag_89\n        /* \"#utility.yul\":3839:3843   */\n      dup2\n        /* \"#utility.yul\":3713:3844   */\n      tag_45\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3705:3844   */\n      swap1\n      pop\n        /* \"#utility.yul\":3432:3851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:4026   */\n    tag_46:\n        /* \"#utility.yul\":3997:4018   */\n      0x416c726561647920696e697469616c697a656400000000000000000000000000\n        /* \"#utility.yul\":3993:3994   */\n      0x00\n        /* \"#utility.yul\":3985:3991   */\n      dup3\n        /* \"#utility.yul\":3981:3995   */\n      add\n        /* \"#utility.yul\":3974:4019   */\n      mstore\n        /* \"#utility.yul\":3857:4026   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4032:4398   */\n    tag_47:\n        /* \"#utility.yul\":4174:4177   */\n      0x00\n        /* \"#utility.yul\":4195:4262   */\n      tag_92\n        /* \"#utility.yul\":4259:4261   */\n      0x13\n        /* \"#utility.yul\":4254:4257   */\n      dup4\n        /* \"#utility.yul\":4195:4262   */\n      tag_43\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":4188:4262   */\n      swap2\n      pop\n        /* \"#utility.yul\":4271:4364   */\n      tag_93\n        /* \"#utility.yul\":4360:4363   */\n      dup3\n        /* \"#utility.yul\":4271:4364   */\n      tag_46\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":4389:4391   */\n      0x20\n        /* \"#utility.yul\":4384:4387   */\n      dup3\n        /* \"#utility.yul\":4380:4392   */\n      add\n        /* \"#utility.yul\":4373:4392   */\n      swap1\n      pop\n        /* \"#utility.yul\":4032:4398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4404:4823   */\n    tag_30:\n        /* \"#utility.yul\":4570:4574   */\n      0x00\n        /* \"#utility.yul\":4608:4610   */\n      0x20\n        /* \"#utility.yul\":4597:4606   */\n      dup3\n        /* \"#utility.yul\":4593:4611   */\n      add\n        /* \"#utility.yul\":4585:4611   */\n      swap1\n      pop\n        /* \"#utility.yul\":4657:4666   */\n      dup2\n        /* \"#utility.yul\":4651:4655   */\n      dup2\n        /* \"#utility.yul\":4647:4667   */\n      sub\n        /* \"#utility.yul\":4643:4644   */\n      0x00\n        /* \"#utility.yul\":4632:4641   */\n      dup4\n        /* \"#utility.yul\":4628:4645   */\n      add\n        /* \"#utility.yul\":4621:4668   */\n      mstore\n        /* \"#utility.yul\":4685:4816   */\n      tag_95\n        /* \"#utility.yul\":4811:4815   */\n      dup2\n        /* \"#utility.yul\":4685:4816   */\n      tag_47\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":4677:4816   */\n      swap1\n      pop\n        /* \"#utility.yul\":4404:4823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205fd390db2cb90cad5632338f9e0fbf310606c3370e30bd738951ea5f800e9ef664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506104b98061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80633fa4f2451461004e578063573c0bd31461006c5780638da5cb5b14610088578063cd6dc687146100a6575b5f80fd5b6100566100c2565b6040516100639190610271565b60405180910390f35b610086600480360381019061008191906102b8565b6100c8565b005b61009061015f565b60405161009d9190610322565b60405180910390f35b6100c060048036038101906100bb9190610365565b610182565b005b60015481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c906103fd565b60405180910390fd5b8060018190555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020690610465565b60405180910390fd5b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505050565b5f819050919050565b61026b81610259565b82525050565b5f6020820190506102845f830184610262565b92915050565b5f80fd5b61029781610259565b81146102a1575f80fd5b50565b5f813590506102b28161028e565b92915050565b5f602082840312156102cd576102cc61028a565b5b5f6102da848285016102a4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61030c826102e3565b9050919050565b61031c81610302565b82525050565b5f6020820190506103355f830184610313565b92915050565b61034481610302565b811461034e575f80fd5b50565b5f8135905061035f8161033b565b92915050565b5f806040838503121561037b5761037a61028a565b5b5f61038885828601610351565b9250506020610399858286016102a4565b9150509250929050565b5f82825260208201905092915050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f6103e7600d836103a3565b91506103f2826103b3565b602082019050919050565b5f6020820190508181035f830152610414816103db565b9050919050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f61044f6013836103a3565b915061045a8261041b565b602082019050919050565b5f6020820190508181035f83015261047c81610443565b905091905056fea26469706673582212205fd390db2cb90cad5632338f9e0fbf310606c3370e30bd738951ea5f800e9ef664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B9 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x573C0BD3 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x90 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x182 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C SWAP1 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x206 SWAP1 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26B DUP2 PUSH2 0x259 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284 PUSH0 DUP4 ADD DUP5 PUSH2 0x262 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x297 DUP2 PUSH2 0x259 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B2 DUP2 PUSH2 0x28E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x28A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DA DUP5 DUP3 DUP6 ADD PUSH2 0x2A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30C DUP3 PUSH2 0x2E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31C DUP2 PUSH2 0x302 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH0 DUP4 ADD DUP5 PUSH2 0x313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x344 DUP2 PUSH2 0x302 JUMP JUMPDEST DUP2 EQ PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35F DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0x28A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x388 DUP6 DUP3 DUP7 ADD PUSH2 0x351 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x399 DUP6 DUP3 DUP7 ADD PUSH2 0x2A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3E7 PUSH1 0xD DUP4 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F2 DUP3 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x414 DUP2 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x44F PUSH1 0x13 DUP4 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x45A DUP3 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x47C DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 0xD3 SWAP1 0xDB 0x2C 0xB9 0xC 0xAD JUMP ORIGIN CALLER DUP16 SWAP15 0xF 0xBF BALANCE MOD MOD 0xC3 CALLDATACOPY 0xE ADDRESS 0xBD PUSH20 0x8951EA5F800E9EF664736F6C634300081A003300 ",
							"sourceMap": "57:397:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@initialize_551": {
									"entryPoint": 386,
									"id": 551,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_523": {
									"entryPoint": 351,
									"id": 523,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateValue_569": {
									"entryPoint": 200,
									"id": 569,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@value_525": {
									"entryPoint": 194,
									"id": 525,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4826:5",
										"nodeType": "YulBlock",
										"src": "0:4826:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:5",
													"nodeType": "YulBlock",
													"src": "52:32:5",
													"statements": [
														{
															"nativeSrc": "62:16:5",
															"nodeType": "YulAssignment",
															"src": "62:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:5",
																"nodeType": "YulIdentifier",
																"src": "73:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:77:5"
											},
											{
												"body": {
													"nativeSrc": "155:53:5",
													"nodeType": "YulBlock",
													"src": "155:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:5"
																		},
																		"nativeSrc": "177:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:5"
																},
																"nativeSrc": "165:37:5",
																"nodeType": "YulFunctionCall",
																"src": "165:37:5"
															},
															"nativeSrc": "165:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:5",
														"nodeType": "YulTypedName",
														"src": "143:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:5",
														"nodeType": "YulTypedName",
														"src": "150:3:5",
														"type": ""
													}
												],
												"src": "90:118:5"
											},
											{
												"body": {
													"nativeSrc": "312:124:5",
													"nodeType": "YulBlock",
													"src": "312:124:5",
													"statements": [
														{
															"nativeSrc": "322:26:5",
															"nodeType": "YulAssignment",
															"src": "322:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:5",
																		"nodeType": "YulLiteral",
																		"src": "345:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:5"
																},
																"nativeSrc": "330:18:5",
																"nodeType": "YulFunctionCall",
																"src": "330:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:5",
																				"nodeType": "YulLiteral",
																				"src": "426:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:5"
																		},
																		"nativeSrc": "411:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:5"
																},
																"nativeSrc": "358:71:5",
																"nodeType": "YulFunctionCall",
																"src": "358:71:5"
															},
															"nativeSrc": "358:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:5",
														"nodeType": "YulTypedName",
														"src": "284:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:5",
														"nodeType": "YulTypedName",
														"src": "296:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:5",
														"nodeType": "YulTypedName",
														"src": "307:4:5",
														"type": ""
													}
												],
												"src": "214:222:5"
											},
											{
												"body": {
													"nativeSrc": "482:35:5",
													"nodeType": "YulBlock",
													"src": "482:35:5",
													"statements": [
														{
															"nativeSrc": "492:19:5",
															"nodeType": "YulAssignment",
															"src": "492:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:5",
																		"nodeType": "YulLiteral",
																		"src": "508:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:5"
																},
																"nativeSrc": "502:9:5",
																"nodeType": "YulFunctionCall",
																"src": "502:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:5",
														"nodeType": "YulTypedName",
														"src": "475:6:5",
														"type": ""
													}
												],
												"src": "442:75:5"
											},
											{
												"body": {
													"nativeSrc": "612:28:5",
													"nodeType": "YulBlock",
													"src": "612:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:5",
																		"nodeType": "YulLiteral",
																		"src": "629:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:5",
																		"nodeType": "YulLiteral",
																		"src": "632:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:5"
																},
																"nativeSrc": "622:12:5",
																"nodeType": "YulFunctionCall",
																"src": "622:12:5"
															},
															"nativeSrc": "622:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:5"
											},
											{
												"body": {
													"nativeSrc": "735:28:5",
													"nodeType": "YulBlock",
													"src": "735:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:5",
																		"nodeType": "YulLiteral",
																		"src": "752:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:5",
																		"nodeType": "YulLiteral",
																		"src": "755:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:5"
																},
																"nativeSrc": "745:12:5",
																"nodeType": "YulFunctionCall",
																"src": "745:12:5"
															},
															"nativeSrc": "745:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:5"
											},
											{
												"body": {
													"nativeSrc": "812:79:5",
													"nodeType": "YulBlock",
													"src": "812:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:5",
																"nodeType": "YulBlock",
																"src": "869:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:5",
																					"nodeType": "YulLiteral",
																					"src": "878:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:5",
																					"nodeType": "YulLiteral",
																					"src": "881:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:5"
																			},
																			"nativeSrc": "871:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:5"
																		},
																		"nativeSrc": "871:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:5"
																				},
																				"nativeSrc": "842:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:5"
																		},
																		"nativeSrc": "832:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:5"
																},
																"nativeSrc": "825:43:5",
																"nodeType": "YulFunctionCall",
																"src": "825:43:5"
															},
															"nativeSrc": "822:63:5",
															"nodeType": "YulIf",
															"src": "822:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:5",
														"nodeType": "YulTypedName",
														"src": "805:5:5",
														"type": ""
													}
												],
												"src": "769:122:5"
											},
											{
												"body": {
													"nativeSrc": "949:87:5",
													"nodeType": "YulBlock",
													"src": "949:87:5",
													"statements": [
														{
															"nativeSrc": "959:29:5",
															"nodeType": "YulAssignment",
															"src": "959:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:5"
																},
																"nativeSrc": "968:20:5",
																"nodeType": "YulFunctionCall",
																"src": "968:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:5"
																},
																"nativeSrc": "997:33:5",
																"nodeType": "YulFunctionCall",
																"src": "997:33:5"
															},
															"nativeSrc": "997:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:5",
														"nodeType": "YulTypedName",
														"src": "927:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:5",
														"nodeType": "YulTypedName",
														"src": "935:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:5",
														"nodeType": "YulTypedName",
														"src": "943:5:5",
														"type": ""
													}
												],
												"src": "897:139:5"
											},
											{
												"body": {
													"nativeSrc": "1108:263:5",
													"nodeType": "YulBlock",
													"src": "1108:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:5",
																"nodeType": "YulBlock",
																"src": "1154:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:5"
																			},
																			"nativeSrc": "1156:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:5"
																		},
																		"nativeSrc": "1156:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:5"
																		},
																		"nativeSrc": "1125:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:5"
																},
																"nativeSrc": "1121:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:5"
															},
															"nativeSrc": "1118:119:5",
															"nodeType": "YulIf",
															"src": "1118:119:5"
														},
														{
															"nativeSrc": "1247:117:5",
															"nodeType": "YulBlock",
															"src": "1247:117:5",
															"statements": [
																{
																	"nativeSrc": "1262:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:5"
																				},
																				"nativeSrc": "1322:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:5"
																		},
																		"nativeSrc": "1301:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:5",
														"nodeType": "YulTypedName",
														"src": "1078:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:5",
														"nodeType": "YulTypedName",
														"src": "1089:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:5",
														"nodeType": "YulTypedName",
														"src": "1101:6:5",
														"type": ""
													}
												],
												"src": "1042:329:5"
											},
											{
												"body": {
													"nativeSrc": "1422:81:5",
													"nodeType": "YulBlock",
													"src": "1422:81:5",
													"statements": [
														{
															"nativeSrc": "1432:65:5",
															"nodeType": "YulAssignment",
															"src": "1432:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:5"
																},
																"nativeSrc": "1443:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:5",
														"nodeType": "YulTypedName",
														"src": "1404:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:5",
														"nodeType": "YulTypedName",
														"src": "1414:7:5",
														"type": ""
													}
												],
												"src": "1377:126:5"
											},
											{
												"body": {
													"nativeSrc": "1554:51:5",
													"nodeType": "YulBlock",
													"src": "1554:51:5",
													"statements": [
														{
															"nativeSrc": "1564:35:5",
															"nodeType": "YulAssignment",
															"src": "1564:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:5"
																},
																"nativeSrc": "1575:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:5",
														"nodeType": "YulTypedName",
														"src": "1536:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:5",
														"nodeType": "YulTypedName",
														"src": "1546:7:5",
														"type": ""
													}
												],
												"src": "1509:96:5"
											},
											{
												"body": {
													"nativeSrc": "1676:53:5",
													"nodeType": "YulBlock",
													"src": "1676:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:5"
																		},
																		"nativeSrc": "1698:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:5"
																},
																"nativeSrc": "1686:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:5"
															},
															"nativeSrc": "1686:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:5",
														"nodeType": "YulTypedName",
														"src": "1664:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:5",
														"nodeType": "YulTypedName",
														"src": "1671:3:5",
														"type": ""
													}
												],
												"src": "1611:118:5"
											},
											{
												"body": {
													"nativeSrc": "1833:124:5",
													"nodeType": "YulBlock",
													"src": "1833:124:5",
													"statements": [
														{
															"nativeSrc": "1843:26:5",
															"nodeType": "YulAssignment",
															"src": "1843:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:5"
																},
																"nativeSrc": "1851:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:5"
																		},
																		"nativeSrc": "1932:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:5"
																},
																"nativeSrc": "1879:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:5"
															},
															"nativeSrc": "1879:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:5",
														"nodeType": "YulTypedName",
														"src": "1805:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:5",
														"nodeType": "YulTypedName",
														"src": "1817:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:5",
														"nodeType": "YulTypedName",
														"src": "1828:4:5",
														"type": ""
													}
												],
												"src": "1735:222:5"
											},
											{
												"body": {
													"nativeSrc": "2006:79:5",
													"nodeType": "YulBlock",
													"src": "2006:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2063:16:5",
																"nodeType": "YulBlock",
																"src": "2063:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2072:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2075:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2065:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:5"
																			},
																			"nativeSrc": "2065:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:5"
																		},
																		"nativeSrc": "2065:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2029:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2054:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2036:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:5"
																				},
																				"nativeSrc": "2036:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2026:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:5"
																		},
																		"nativeSrc": "2026:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2019:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:5"
																},
																"nativeSrc": "2019:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2019:43:5"
															},
															"nativeSrc": "2016:63:5",
															"nodeType": "YulIf",
															"src": "2016:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1963:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1999:5:5",
														"nodeType": "YulTypedName",
														"src": "1999:5:5",
														"type": ""
													}
												],
												"src": "1963:122:5"
											},
											{
												"body": {
													"nativeSrc": "2143:87:5",
													"nodeType": "YulBlock",
													"src": "2143:87:5",
													"statements": [
														{
															"nativeSrc": "2153:29:5",
															"nodeType": "YulAssignment",
															"src": "2153:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2175:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2162:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:5"
																},
																"nativeSrc": "2162:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2162:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2153:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2218:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2191:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:5"
																},
																"nativeSrc": "2191:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2191:33:5"
															},
															"nativeSrc": "2191:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2091:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2121:6:5",
														"nodeType": "YulTypedName",
														"src": "2121:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2129:3:5",
														"nodeType": "YulTypedName",
														"src": "2129:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2137:5:5",
														"nodeType": "YulTypedName",
														"src": "2137:5:5",
														"type": ""
													}
												],
												"src": "2091:139:5"
											},
											{
												"body": {
													"nativeSrc": "2319:391:5",
													"nodeType": "YulBlock",
													"src": "2319:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2365:83:5",
																"nodeType": "YulBlock",
																"src": "2365:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2367:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2367:77:5"
																			},
																			"nativeSrc": "2367:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2367:79:5"
																		},
																		"nativeSrc": "2367:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2367:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2340:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2340:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2349:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2349:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2336:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2336:3:5"
																		},
																		"nativeSrc": "2336:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2336:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2361:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2361:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2332:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2332:3:5"
																},
																"nativeSrc": "2332:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2332:32:5"
															},
															"nativeSrc": "2329:119:5",
															"nodeType": "YulIf",
															"src": "2329:119:5"
														},
														{
															"nativeSrc": "2458:117:5",
															"nodeType": "YulBlock",
															"src": "2458:117:5",
															"statements": [
																{
																	"nativeSrc": "2473:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2473:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2487:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2487:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2477:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2477:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2502:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2502:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2537:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2537:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2548:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2548:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2533:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2533:3:5"
																				},
																				"nativeSrc": "2533:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2533:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2557:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2557:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2512:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2512:20:5"
																		},
																		"nativeSrc": "2512:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2502:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2502:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2585:118:5",
															"nodeType": "YulBlock",
															"src": "2585:118:5",
															"statements": [
																{
																	"nativeSrc": "2600:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2600:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2614:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2614:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2604:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2604:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2630:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2630:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2665:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2665:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2676:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2676:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2661:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2661:3:5"
																				},
																				"nativeSrc": "2661:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2661:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2685:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2685:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2640:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2640:20:5"
																		},
																		"nativeSrc": "2640:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2640:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2630:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2630:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2236:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2281:9:5",
														"nodeType": "YulTypedName",
														"src": "2281:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2292:7:5",
														"nodeType": "YulTypedName",
														"src": "2292:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2304:6:5",
														"nodeType": "YulTypedName",
														"src": "2304:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2312:6:5",
														"nodeType": "YulTypedName",
														"src": "2312:6:5",
														"type": ""
													}
												],
												"src": "2236:474:5"
											},
											{
												"body": {
													"nativeSrc": "2812:73:5",
													"nodeType": "YulBlock",
													"src": "2812:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2829:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2829:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2834:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2834:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2822:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:5"
																},
																"nativeSrc": "2822:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2822:19:5"
															},
															"nativeSrc": "2822:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "2822:19:5"
														},
														{
															"nativeSrc": "2850:29:5",
															"nodeType": "YulAssignment",
															"src": "2850:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2869:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2869:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2874:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2874:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2865:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:5"
																},
																"nativeSrc": "2865:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2865:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2850:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "2850:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2716:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2784:3:5",
														"nodeType": "YulTypedName",
														"src": "2784:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2789:6:5",
														"nodeType": "YulTypedName",
														"src": "2789:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2800:11:5",
														"nodeType": "YulTypedName",
														"src": "2800:11:5",
														"type": ""
													}
												],
												"src": "2716:169:5"
											},
											{
												"body": {
													"nativeSrc": "2997:57:5",
													"nodeType": "YulBlock",
													"src": "2997:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3019:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3019:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3027:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3027:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3015:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:5"
																		},
																		"nativeSrc": "3015:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3015:14:5"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "3031:15:5",
																		"nodeType": "YulLiteral",
																		"src": "3031:15:5",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3008:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3008:6:5"
																},
																"nativeSrc": "3008:39:5",
																"nodeType": "YulFunctionCall",
																"src": "3008:39:5"
															},
															"nativeSrc": "3008:39:5",
															"nodeType": "YulExpressionStatement",
															"src": "3008:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
												"nativeSrc": "2891:163:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2989:6:5",
														"nodeType": "YulTypedName",
														"src": "2989:6:5",
														"type": ""
													}
												],
												"src": "2891:163:5"
											},
											{
												"body": {
													"nativeSrc": "3206:220:5",
													"nodeType": "YulBlock",
													"src": "3206:220:5",
													"statements": [
														{
															"nativeSrc": "3216:74:5",
															"nodeType": "YulAssignment",
															"src": "3216:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3282:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3282:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3287:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3287:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3223:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "3223:58:5"
																},
																"nativeSrc": "3223:67:5",
																"nodeType": "YulFunctionCall",
																"src": "3223:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3216:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3388:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3388:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																	"nativeSrc": "3299:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "3299:88:5"
																},
																"nativeSrc": "3299:93:5",
																"nodeType": "YulFunctionCall",
																"src": "3299:93:5"
															},
															"nativeSrc": "3299:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "3299:93:5"
														},
														{
															"nativeSrc": "3401:19:5",
															"nodeType": "YulAssignment",
															"src": "3401:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3412:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3412:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3417:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3417:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3408:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3408:3:5"
																},
																"nativeSrc": "3408:12:5",
																"nodeType": "YulFunctionCall",
																"src": "3408:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3401:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3401:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3060:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3194:3:5",
														"nodeType": "YulTypedName",
														"src": "3194:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3202:3:5",
														"nodeType": "YulTypedName",
														"src": "3202:3:5",
														"type": ""
													}
												],
												"src": "3060:366:5"
											},
											{
												"body": {
													"nativeSrc": "3603:248:5",
													"nodeType": "YulBlock",
													"src": "3603:248:5",
													"statements": [
														{
															"nativeSrc": "3613:26:5",
															"nodeType": "YulAssignment",
															"src": "3613:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3625:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3625:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3636:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3636:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3621:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3621:3:5"
																},
																"nativeSrc": "3621:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3621:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3613:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3613:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3660:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3660:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3671:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3671:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3656:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3656:3:5"
																		},
																		"nativeSrc": "3656:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3656:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3679:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "3679:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3685:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3685:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3675:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3675:3:5"
																		},
																		"nativeSrc": "3675:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3675:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3649:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3649:6:5"
																},
																"nativeSrc": "3649:47:5",
																"nodeType": "YulFunctionCall",
																"src": "3649:47:5"
															},
															"nativeSrc": "3649:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "3649:47:5"
														},
														{
															"nativeSrc": "3705:139:5",
															"nodeType": "YulAssignment",
															"src": "3705:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3839:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3839:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3713:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "3713:124:5"
																},
																"nativeSrc": "3713:131:5",
																"nodeType": "YulFunctionCall",
																"src": "3713:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3705:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3705:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3432:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3583:9:5",
														"nodeType": "YulTypedName",
														"src": "3583:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3598:4:5",
														"nodeType": "YulTypedName",
														"src": "3598:4:5",
														"type": ""
													}
												],
												"src": "3432:419:5"
											},
											{
												"body": {
													"nativeSrc": "3963:63:5",
													"nodeType": "YulBlock",
													"src": "3963:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3985:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3985:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3993:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3993:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3981:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3981:3:5"
																		},
																		"nativeSrc": "3981:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3981:14:5"
																	},
																	{
																		"hexValue": "416c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "3997:21:5",
																		"nodeType": "YulLiteral",
																		"src": "3997:21:5",
																		"type": "",
																		"value": "Already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3974:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3974:6:5"
																},
																"nativeSrc": "3974:45:5",
																"nodeType": "YulFunctionCall",
																"src": "3974:45:5"
															},
															"nativeSrc": "3974:45:5",
															"nodeType": "YulExpressionStatement",
															"src": "3974:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
												"nativeSrc": "3857:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3955:6:5",
														"nodeType": "YulTypedName",
														"src": "3955:6:5",
														"type": ""
													}
												],
												"src": "3857:169:5"
											},
											{
												"body": {
													"nativeSrc": "4178:220:5",
													"nodeType": "YulBlock",
													"src": "4178:220:5",
													"statements": [
														{
															"nativeSrc": "4188:74:5",
															"nodeType": "YulAssignment",
															"src": "4188:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4254:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4254:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4259:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4259:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4195:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4195:58:5"
																},
																"nativeSrc": "4195:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4195:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4188:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4188:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4360:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4360:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																	"nativeSrc": "4271:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4271:88:5"
																},
																"nativeSrc": "4271:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4271:93:5"
															},
															"nativeSrc": "4271:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4271:93:5"
														},
														{
															"nativeSrc": "4373:19:5",
															"nodeType": "YulAssignment",
															"src": "4373:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4384:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4384:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4389:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4389:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4380:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:5"
																},
																"nativeSrc": "4380:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4380:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4373:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4373:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4032:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4166:3:5",
														"nodeType": "YulTypedName",
														"src": "4166:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4174:3:5",
														"nodeType": "YulTypedName",
														"src": "4174:3:5",
														"type": ""
													}
												],
												"src": "4032:366:5"
											},
											{
												"body": {
													"nativeSrc": "4575:248:5",
													"nodeType": "YulBlock",
													"src": "4575:248:5",
													"statements": [
														{
															"nativeSrc": "4585:26:5",
															"nodeType": "YulAssignment",
															"src": "4585:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4597:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4597:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4608:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4593:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4593:3:5"
																},
																"nativeSrc": "4593:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4593:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4585:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4585:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4632:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4632:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4643:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4643:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4628:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4628:3:5"
																		},
																		"nativeSrc": "4628:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4628:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4651:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4651:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4657:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4657:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4647:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4647:3:5"
																		},
																		"nativeSrc": "4647:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4647:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4621:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4621:6:5"
																},
																"nativeSrc": "4621:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4621:47:5"
															},
															"nativeSrc": "4621:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "4621:47:5"
														},
														{
															"nativeSrc": "4677:139:5",
															"nodeType": "YulAssignment",
															"src": "4677:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4811:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4811:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4685:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "4685:124:5"
																},
																"nativeSrc": "4685:131:5",
																"nodeType": "YulFunctionCall",
																"src": "4685:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4677:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4677:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4404:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4555:9:5",
														"nodeType": "YulTypedName",
														"src": "4555:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4570:4:5",
														"nodeType": "YulTypedName",
														"src": "4570:4:5",
														"type": ""
													}
												],
												"src": "4404:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80633fa4f2451461004e578063573c0bd31461006c5780638da5cb5b14610088578063cd6dc687146100a6575b5f80fd5b6100566100c2565b6040516100639190610271565b60405180910390f35b610086600480360381019061008191906102b8565b6100c8565b005b61009061015f565b60405161009d9190610322565b60405180910390f35b6100c060048036038101906100bb9190610365565b610182565b005b60015481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c906103fd565b60405180910390fd5b8060018190555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020690610465565b60405180910390fd5b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505050565b5f819050919050565b61026b81610259565b82525050565b5f6020820190506102845f830184610262565b92915050565b5f80fd5b61029781610259565b81146102a1575f80fd5b50565b5f813590506102b28161028e565b92915050565b5f602082840312156102cd576102cc61028a565b5b5f6102da848285016102a4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61030c826102e3565b9050919050565b61031c81610302565b82525050565b5f6020820190506103355f830184610313565b92915050565b61034481610302565b811461034e575f80fd5b50565b5f8135905061035f8161033b565b92915050565b5f806040838503121561037b5761037a61028a565b5b5f61038885828601610351565b9250506020610399858286016102a4565b9150509250929050565b5f82825260208201905092915050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f6103e7600d836103a3565b91506103f2826103b3565b602082019050919050565b5f6020820190508181035f830152610414816103db565b9050919050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f61044f6013836103a3565b915061045a8261041b565b602082019050919050565b5f6020820190508181035f83015261047c81610443565b905091905056fea26469706673582212205fd390db2cb90cad5632338f9e0fbf310606c3370e30bd738951ea5f800e9ef664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x573C0BD3 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x90 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x182 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C SWAP1 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x206 SWAP1 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26B DUP2 PUSH2 0x259 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284 PUSH0 DUP4 ADD DUP5 PUSH2 0x262 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x297 DUP2 PUSH2 0x259 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B2 DUP2 PUSH2 0x28E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x28A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DA DUP5 DUP3 DUP6 ADD PUSH2 0x2A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30C DUP3 PUSH2 0x2E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31C DUP2 PUSH2 0x302 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH0 DUP4 ADD DUP5 PUSH2 0x313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x344 DUP2 PUSH2 0x302 JUMP JUMPDEST DUP2 EQ PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35F DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0x28A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x388 DUP6 DUP3 DUP7 ADD PUSH2 0x351 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x399 DUP6 DUP3 DUP7 ADD PUSH2 0x2A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3E7 PUSH1 0xD DUP4 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F2 DUP3 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x414 DUP2 PUSH2 0x3DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x44F PUSH1 0x13 DUP4 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x45A DUP3 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x47C DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 0xD3 SWAP1 0xDB 0x2C 0xB9 0xC 0xAD JUMP ORIGIN CALLER DUP16 SWAP15 0xF 0xBF BALANCE MOD MOD 0xC3 CALLDATACOPY 0xE ADDRESS 0xBD PUSH20 0x8951EA5F800E9EF664736F6C634300081A003300 ",
							"sourceMap": "57:397:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;104:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;314:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;78:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;131:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;104:20;;;;:::o;314:138::-;395:5;;;;;;;;;;381:19;;:10;:19;;;373:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;436:9;428:5;:17;;;;314:138;:::o;78:20::-;;;;;;;;;;;;:::o;131:177::-;227:1;210:19;;:5;;;;;;;;;;:19;;;202:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;271:6;263:5;;:14;;;;;;;;;;;;;;;;;;295:6;287:5;:14;;;;131:177;;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:474::-;2304:6;2312;2361:2;2349:9;2340:7;2336:23;2332:32;2329:119;;;2367:79;;:::i;:::-;2329:119;2487:1;2512:53;2557:7;2548:6;2537:9;2533:22;2512:53;:::i;:::-;2502:63;;2458:117;2614:2;2640:53;2685:7;2676:6;2665:9;2661:22;2640:53;:::i;:::-;2630:63;;2585:118;2236:474;;;;;:::o;2716:169::-;2800:11;2834:6;2829:3;2822:19;2874:4;2869:3;2865:14;2850:29;;2716:169;;;;:::o;2891:163::-;3031:15;3027:1;3019:6;3015:14;3008:39;2891:163;:::o;3060:366::-;3202:3;3223:67;3287:2;3282:3;3223:67;:::i;:::-;3216:74;;3299:93;3388:3;3299:93;:::i;:::-;3417:2;3412:3;3408:12;3401:19;;3060:366;;;:::o;3432:419::-;3598:4;3636:2;3625:9;3621:18;3613:26;;3685:9;3679:4;3675:20;3671:1;3660:9;3656:17;3649:47;3713:131;3839:4;3713:131;:::i;:::-;3705:139;;3432:419;;;:::o;3857:169::-;3997:21;3993:1;3985:6;3981:14;3974:45;3857:169;:::o;4032:366::-;4174:3;4195:67;4259:2;4254:3;4195:67;:::i;:::-;4188:74;;4271:93;4360:3;4271:93;:::i;:::-;4389:2;4384:3;4380:12;4373:19;;4032:366;;;:::o;4404:419::-;4570:4;4608:2;4597:9;4593:18;4585:26;;4657:9;4651:4;4647:20;4643:1;4632:9;4628:17;4621:47;4685:131;4811:4;4685:131;:::i;:::-;4677:139;;4404:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "241800",
								"executionCost": "279",
								"totalCost": "242079"
							},
							"external": {
								"initialize(address,uint256)": "49210",
								"owner()": "2527",
								"updateValue(uint256)": "24681",
								"value()": "2403"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 454,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 454,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 454,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 454,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 454,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 454,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 454,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 454,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 454,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 57,
									"end": 454,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 454,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fd390db2cb90cad5632338f9e0fbf310606c3370e30bd738951ea5f800e9ef664736f6c634300081a0033",
									".code": [
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "3FA4F245"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "573C0BD3"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "CD6DC687"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 454,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 104,
											"end": 124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 104,
											"end": 124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 104,
											"end": 124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 104,
											"end": 124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 104,
											"end": 124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 104,
											"end": 124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 104,
											"end": 124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 314,
											"end": 452,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 314,
											"end": 452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 314,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 314,
											"end": 452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 314,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 314,
											"end": 452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 78,
											"end": 98,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 78,
											"end": 98,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 131,
											"end": 308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 131,
											"end": 308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 131,
											"end": 308,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 131,
											"end": 308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 131,
											"end": 308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 131,
											"end": 308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 104,
											"end": 124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 124,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 104,
											"end": 124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 314,
											"end": 452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 395,
											"end": 400,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 381,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 381,
											"end": 391,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 381,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 381,
											"end": 400,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 373,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 373,
											"end": 418,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 373,
											"end": 418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 428,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 428,
											"end": 445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 428,
											"end": 445,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 428,
											"end": 445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 314,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78,
											"end": 98,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 131,
											"end": 308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 227,
											"end": 228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 229,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 210,
											"end": 229,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 215,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 210,
											"end": 215,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 210,
											"end": 215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 210,
											"end": 215,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 210,
											"end": 215,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 210,
											"end": 215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 210,
											"end": 215,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 210,
											"end": 215,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 210,
											"end": 215,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 229,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 210,
											"end": 229,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 229,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 202,
											"end": 253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 253,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 202,
											"end": 253,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 253,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 202,
											"end": 253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 202,
											"end": 253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 202,
											"end": 253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 253,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 202,
											"end": 253,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 202,
											"end": 253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 271,
											"end": 277,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 263,
											"end": 268,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 268,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 263,
											"end": 277,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 263,
											"end": 277,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 263,
											"end": 277,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 263,
											"end": 277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 292,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 287,
											"end": 301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 301,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2361,
											"end": 2363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2340,
											"end": 2347,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2359,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2364,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2448,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2329,
											"end": 2448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2367,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2367,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2367,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2329,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2512,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2502,
											"end": 2565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2502,
											"end": 2565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2616,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2685,
											"end": 2692,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2640,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2829,
											"end": 2832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 2841,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2878,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 3054,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2891,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420746865206F776E657200000000000000000000000000000000000000"
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3029,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 3054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 3054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3426,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3060,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3223,
											"end": 3290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3290,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3223,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3290,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3388,
											"end": 3391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3299,
											"end": 3392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3392,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3299,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3851,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3432,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3602,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3638,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3669,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 3673,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3696,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3713,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3844,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3713,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3705,
											"end": 3844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3705,
											"end": 3844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 4026,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3857,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4018,
											"name": "PUSH",
											"source": 5,
											"value": "416C726561647920696E697469616C697A656400000000000000000000000000"
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4019,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 4026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 4026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4398,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4032,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4259,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 4254,
											"end": 4257,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4195,
											"end": 4262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 4262,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4195,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4271,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4364,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4271,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4384,
											"end": 4387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4380,
											"end": 4392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4373,
											"end": 4392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4373,
											"end": 4392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4398,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4823,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 4404,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4597,
											"end": 4606,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4651,
											"end": 4655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4647,
											"end": 4667,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4628,
											"end": 4645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4621,
											"end": 4668,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4811,
											"end": 4815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4685,
											"end": 4816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4816,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4685,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4823,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/Logic.sol",
								"Contracts/minimal1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"initialize(address,uint256)": "cd6dc687",
							"owner()": "8da5cb5b",
							"updateValue(uint256)": "573c0bd3",
							"value()": "3fa4f245"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"updateValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Logic.sol\":\"Logic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/Logic.sol\":{\"keccak256\":\"0x51cbdde0ca2b4f80b6c6aec8c9a87dba1bc79e0879cc69af571a27c4c19ad5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12e0dcef062f730140c967342db66f0f74b5cda636992f531740c2f290fc6bfb\",\"dweb:/ipfs/QmZVQR7r4KtpWp53VjycCgChWFKrARg7GWKNxdtu5imaG1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 523,
								"contract": "Contracts/Logic.sol:Logic",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 525,
								"contract": "Contracts/Logic.sol:Logic",
								"label": "value",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/minimal1.sol": {
				"ProxyFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allClones",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "createClone",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClones",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "logicImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/minimal1.sol\":132:651  contract ProxyFactory {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/minimal1.sol\":233:306  constructor(address _logic) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Contracts/minimal1.sol\":293:299  _logic */\n  dup1\n    /* \"Contracts/minimal1.sol\":271:290  logicImplementation */\n  0x00\n  dup1\n    /* \"Contracts/minimal1.sol\":271:299  logicImplementation = _logic */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contracts/minimal1.sol\":233:306  constructor(address _logic) {... */\n  pop\n    /* \"Contracts/minimal1.sol\":132:651  contract ProxyFactory {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Contracts/minimal1.sol\":132:651  contract ProxyFactory {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/minimal1.sol\":132:651  contract ProxyFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x49ce0061\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7188ab89\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd7741cad\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfe3636f0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/minimal1.sol\":312:548  function createClone(uint256 _value) external returns (address) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/minimal1.sol\":160:194  address public logicImplementation */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/minimal1.sol\":200:226  address[] public allClones */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/minimal1.sol\":554:649  function getClones() external view returns (address[] memory) {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/minimal1.sol\":312:548  function createClone(uint256 _value) external returns (address) {... */\n    tag_10:\n        /* \"Contracts/minimal1.sol\":367:374  address */\n      0x00\n        /* \"Contracts/minimal1.sol\":386:399  address clone */\n      dup1\n        /* \"Contracts/minimal1.sol\":402:435  Clones.clone(logicImplementation) */\n      tag_25\n        /* \"Contracts/minimal1.sol\":415:434  logicImplementation */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/minimal1.sol\":402:414  Clones.clone */\n      tag_26\n        /* \"Contracts/minimal1.sol\":402:435  Clones.clone(logicImplementation) */\n      jump\t// in\n    tag_25:\n        /* \"Contracts/minimal1.sol\":386:435  address clone = Clones.clone(logicImplementation) */\n      swap1\n      pop\n        /* \"Contracts/minimal1.sol\":451:456  clone */\n      dup1\n        /* \"Contracts/minimal1.sol\":445:468  Logic(clone).initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcd6dc687\n        /* \"Contracts/minimal1.sol\":469:479  msg.sender */\n      caller\n        /* \"Contracts/minimal1.sol\":481:487  _value */\n      dup6\n        /* \"Contracts/minimal1.sol\":445:488  Logic(clone).initialize(msg.sender, _value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/minimal1.sol\":498:507  allClones */\n      0x01\n        /* \"Contracts/minimal1.sol\":513:518  clone */\n      dup2\n        /* \"Contracts/minimal1.sol\":498:519  allClones.push(clone) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/minimal1.sol\":536:541  clone */\n      dup1\n        /* \"Contracts/minimal1.sol\":529:541  return clone */\n      swap2\n      pop\n      pop\n        /* \"Contracts/minimal1.sol\":312:548  function createClone(uint256 _value) external returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Contracts/minimal1.sol\":160:194  address public logicImplementation */\n    tag_14:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Contracts/minimal1.sol\":200:226  address[] public allClones */\n    tag_18:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Contracts/minimal1.sol\":554:649  function getClones() external view returns (address[] memory) {... */\n    tag_21:\n        /* \"Contracts/minimal1.sol\":598:614  address[] memory */\n      0x60\n        /* \"Contracts/minimal1.sol\":633:642  allClones */\n      0x01\n        /* \"Contracts/minimal1.sol\":626:642  return allClones */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_37:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_37\n      jumpi\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Contracts/minimal1.sol\":554:649  function getClones() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1070:1193  function clone(address implementation) internal returns (address instance) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1127:1143  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1162:1186  clone(implementation, 0) */\n      tag_39\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1168:1182  implementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1184:1185  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1162:1167  clone */\n      tag_40\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1162:1186  clone(implementation, 0) */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1155:1186  return clone(implementation, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1070:1193  function clone(address implementation) internal returns (address instance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1585:2495  function clone(address implementation, uint256 value) internal returns (address instance) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1657:1673  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1713:1718  value */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1689:1710  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1689:1718  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1685:1808  if (address(this).balance < value) {... */\n      iszero\n      tag_42\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1768:1789  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1791:1796  value */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1741:1797  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1685:1808  if (address(this).balance < value) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2094:2142  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2076:2090  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2070:2074  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2066:2091  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2060:2064  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2056:2092  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2053:2143  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2047:2051  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2040:2144  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2301:2333  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2284:2298  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2278:2282  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2274:2299  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2271:2334  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2265:2269  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2258:2335  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2380:2384  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2374:2378  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2367:2372  value */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2360:2385  create(value, 0x09, 0x37) */\n      create\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2348:2385  instance := create(value, 0x09, 0x37) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2428:2429  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2408:2430  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2408:2416  instance */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2408:2430  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2404:2489  if (instance == address(0)) {... */\n      tag_45\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2453:2478  Errors.FailedDeployment() */\n      mload(0x40)\n      0xb06ebf3d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2404:2489  if (instance == address(0)) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1585:2495  function clone(address implementation, uint256 value) internal returns (address instance) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_47:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_49:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_50:\n        /* \"#utility.yul\":490:514   */\n      tag_69\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_49\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_70:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_51:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_72\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_50\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_75\n      tag_47\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":766:885   */\n    tag_74:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_76\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_51\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_52:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_53:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_79\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_52\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_54:\n        /* \"#utility.yul\":1346:1370   */\n      tag_81\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_53\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_12:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_83\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_54\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1725   */\n    tag_55:\n        /* \"#utility.yul\":1678:1684   */\n      0x00\n        /* \"#utility.yul\":1712:1717   */\n      dup2\n        /* \"#utility.yul\":1706:1718   */\n      mload\n        /* \"#utility.yul\":1696:1718   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1731:1915   */\n    tag_56:\n        /* \"#utility.yul\":1830:1841   */\n      0x00\n        /* \"#utility.yul\":1864:1870   */\n      dup3\n        /* \"#utility.yul\":1859:1862   */\n      dup3\n        /* \"#utility.yul\":1852:1871   */\n      mstore\n        /* \"#utility.yul\":1904:1908   */\n      0x20\n        /* \"#utility.yul\":1899:1902   */\n      dup3\n        /* \"#utility.yul\":1895:1909   */\n      add\n        /* \"#utility.yul\":1880:1909   */\n      swap1\n      pop\n        /* \"#utility.yul\":1731:1915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1921:2053   */\n    tag_57:\n        /* \"#utility.yul\":1988:1992   */\n      0x00\n        /* \"#utility.yul\":2011:2014   */\n      dup2\n        /* \"#utility.yul\":2003:2014   */\n      swap1\n      pop\n        /* \"#utility.yul\":2041:2045   */\n      0x20\n        /* \"#utility.yul\":2036:2039   */\n      dup3\n        /* \"#utility.yul\":2032:2046   */\n      add\n        /* \"#utility.yul\":2024:2046   */\n      swap1\n      pop\n        /* \"#utility.yul\":1921:2053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2167   */\n    tag_58:\n        /* \"#utility.yul\":2136:2160   */\n      tag_88\n        /* \"#utility.yul\":2154:2159   */\n      dup2\n        /* \"#utility.yul\":2136:2160   */\n      tag_53\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2131:2134   */\n      dup3\n        /* \"#utility.yul\":2124:2161   */\n      mstore\n        /* \"#utility.yul\":2059:2167   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2173:2352   */\n    tag_59:\n        /* \"#utility.yul\":2242:2252   */\n      0x00\n        /* \"#utility.yul\":2263:2309   */\n      tag_90\n        /* \"#utility.yul\":2305:2308   */\n      dup4\n        /* \"#utility.yul\":2297:2303   */\n      dup4\n        /* \"#utility.yul\":2263:2309   */\n      tag_58\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2341:2345   */\n      0x20\n        /* \"#utility.yul\":2336:2339   */\n      dup4\n        /* \"#utility.yul\":2332:2346   */\n      add\n        /* \"#utility.yul\":2318:2346   */\n      swap1\n      pop\n        /* \"#utility.yul\":2173:2352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2358:2471   */\n    tag_60:\n        /* \"#utility.yul\":2428:2432   */\n      0x00\n        /* \"#utility.yul\":2460:2464   */\n      0x20\n        /* \"#utility.yul\":2455:2458   */\n      dup3\n        /* \"#utility.yul\":2451:2465   */\n      add\n        /* \"#utility.yul\":2443:2465   */\n      swap1\n      pop\n        /* \"#utility.yul\":2358:2471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2507:3239   */\n    tag_61:\n        /* \"#utility.yul\":2626:2629   */\n      0x00\n        /* \"#utility.yul\":2655:2709   */\n      tag_93\n        /* \"#utility.yul\":2703:2708   */\n      dup3\n        /* \"#utility.yul\":2655:2709   */\n      tag_55\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2725:2811   */\n      tag_94\n        /* \"#utility.yul\":2804:2810   */\n      dup2\n        /* \"#utility.yul\":2799:2802   */\n      dup6\n        /* \"#utility.yul\":2725:2811   */\n      tag_56\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2718:2811   */\n      swap4\n      pop\n        /* \"#utility.yul\":2835:2891   */\n      tag_95\n        /* \"#utility.yul\":2885:2890   */\n      dup4\n        /* \"#utility.yul\":2835:2891   */\n      tag_57\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2914:2921   */\n      dup1\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2930:3214   */\n    tag_96:\n        /* \"#utility.yul\":2955:2961   */\n      dup4\n        /* \"#utility.yul\":2952:2953   */\n      dup2\n        /* \"#utility.yul\":2949:2962   */\n      lt\n        /* \"#utility.yul\":2930:3214   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3031:3037   */\n      dup2\n        /* \"#utility.yul\":3025:3038   */\n      mload\n        /* \"#utility.yul\":3058:3121   */\n      tag_99\n        /* \"#utility.yul\":3117:3120   */\n      dup9\n        /* \"#utility.yul\":3102:3115   */\n      dup3\n        /* \"#utility.yul\":3058:3121   */\n      tag_59\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3051:3121   */\n      swap8\n      pop\n        /* \"#utility.yul\":3144:3204   */\n      tag_100\n        /* \"#utility.yul\":3197:3203   */\n      dup4\n        /* \"#utility.yul\":3144:3204   */\n      tag_60\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3134:3204   */\n      swap3\n      pop\n        /* \"#utility.yul\":2990:3214   */\n      pop\n        /* \"#utility.yul\":2977:2978   */\n      0x01\n        /* \"#utility.yul\":2974:2975   */\n      dup2\n        /* \"#utility.yul\":2970:2979   */\n      add\n        /* \"#utility.yul\":2965:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2930:3214   */\n      jump(tag_96)\n    tag_98:\n        /* \"#utility.yul\":2934:2948   */\n      pop\n        /* \"#utility.yul\":3230:3233   */\n      dup6\n        /* \"#utility.yul\":3223:3233   */\n      swap4\n      pop\n        /* \"#utility.yul\":2631:3239   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2507:3239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3245:3618   */\n    tag_23:\n        /* \"#utility.yul\":3388:3392   */\n      0x00\n        /* \"#utility.yul\":3426:3428   */\n      0x20\n        /* \"#utility.yul\":3415:3424   */\n      dup3\n        /* \"#utility.yul\":3411:3429   */\n      add\n        /* \"#utility.yul\":3403:3429   */\n      swap1\n      pop\n        /* \"#utility.yul\":3475:3484   */\n      dup2\n        /* \"#utility.yul\":3469:3473   */\n      dup2\n        /* \"#utility.yul\":3465:3485   */\n      sub\n        /* \"#utility.yul\":3461:3462   */\n      0x00\n        /* \"#utility.yul\":3450:3459   */\n      dup4\n        /* \"#utility.yul\":3446:3463   */\n      add\n        /* \"#utility.yul\":3439:3486   */\n      mstore\n        /* \"#utility.yul\":3503:3611   */\n      tag_102\n        /* \"#utility.yul\":3606:3610   */\n      dup2\n        /* \"#utility.yul\":3597:3603   */\n      dup5\n        /* \"#utility.yul\":3503:3611   */\n      tag_61\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3495:3611   */\n      swap1\n      pop\n        /* \"#utility.yul\":3245:3618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3624:3742   */\n    tag_62:\n        /* \"#utility.yul\":3711:3735   */\n      tag_104\n        /* \"#utility.yul\":3729:3734   */\n      dup2\n        /* \"#utility.yul\":3711:3735   */\n      tag_49\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3706:3709   */\n      dup3\n        /* \"#utility.yul\":3699:3736   */\n      mstore\n        /* \"#utility.yul\":3624:3742   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3748:4080   */\n    tag_28:\n        /* \"#utility.yul\":3869:3873   */\n      0x00\n        /* \"#utility.yul\":3907:3909   */\n      0x40\n        /* \"#utility.yul\":3896:3905   */\n      dup3\n        /* \"#utility.yul\":3892:3910   */\n      add\n        /* \"#utility.yul\":3884:3910   */\n      swap1\n      pop\n        /* \"#utility.yul\":3920:3991   */\n      tag_106\n        /* \"#utility.yul\":3988:3989   */\n      0x00\n        /* \"#utility.yul\":3977:3986   */\n      dup4\n        /* \"#utility.yul\":3973:3990   */\n      add\n        /* \"#utility.yul\":3964:3970   */\n      dup6\n        /* \"#utility.yul\":3920:3991   */\n      tag_54\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4001:4073   */\n      tag_107\n        /* \"#utility.yul\":4069:4071   */\n      0x20\n        /* \"#utility.yul\":4058:4067   */\n      dup4\n        /* \"#utility.yul\":4054:4072   */\n      add\n        /* \"#utility.yul\":4045:4051   */\n      dup5\n        /* \"#utility.yul\":4001:4073   */\n      tag_62\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3748:4080   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4086:4418   */\n    tag_44:\n        /* \"#utility.yul\":4207:4211   */\n      0x00\n        /* \"#utility.yul\":4245:4247   */\n      0x40\n        /* \"#utility.yul\":4234:4243   */\n      dup3\n        /* \"#utility.yul\":4230:4248   */\n      add\n        /* \"#utility.yul\":4222:4248   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4329   */\n      tag_109\n        /* \"#utility.yul\":4326:4327   */\n      0x00\n        /* \"#utility.yul\":4315:4324   */\n      dup4\n        /* \"#utility.yul\":4311:4328   */\n      add\n        /* \"#utility.yul\":4302:4308   */\n      dup6\n        /* \"#utility.yul\":4258:4329   */\n      tag_62\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":4339:4411   */\n      tag_110\n        /* \"#utility.yul\":4407:4409   */\n      0x20\n        /* \"#utility.yul\":4396:4405   */\n      dup4\n        /* \"#utility.yul\":4392:4410   */\n      add\n        /* \"#utility.yul\":4383:4389   */\n      dup5\n        /* \"#utility.yul\":4339:4411   */\n      tag_62\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":4086:4418   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a010bc4f9e03ee932921c8b181f7ffaefdf5bfbd0970978b164f71161d06c45764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_589": {
									"entryPoint": null,
									"id": 589,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:5",
										"nodeType": "YulBlock",
										"src": "0:1199:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610707380380610707833981810160405281019061003191906100d4565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f80fd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b6105fb8061010c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c806349ce00611461004e5780637188ab891461007e578063d7741cad1461009c578063fe3636f0146100cc575b5f80fd5b6100686004803603810190610063919061040e565b6100ea565b6040516100759190610478565b60405180910390f35b6100866101e7565b6040516100939190610478565b60405180910390f35b6100b660048036038101906100b1919061040e565b61020a565b6040516100c39190610478565b60405180910390f35b6100d4610245565b6040516100e19190610548565b60405180910390f35b5f806101145f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff166102d0565b90508073ffffffffffffffffffffffffffffffffffffffff1663cd6dc68733856040518363ffffffff1660e01b8152600401610151929190610577565b5f604051808303815f87803b158015610168575f80fd5b505af115801561017a573d5f803e3d5ffd5b50505050600181908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080915050919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018181548110610219575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060018054806020026020016040519081016040528092919081815260200182805480156102c657602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161027d575b5050505050905090565b5f6102db825f6102e2565b9050919050565b5f8147101561032a5747826040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161032192919061059e565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103d1576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b5f80fd5b5f819050919050565b6103ed816103db565b81146103f7575f80fd5b50565b5f81359050610408816103e4565b92915050565b5f60208284031215610423576104226103d7565b5b5f610430848285016103fa565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61046282610439565b9050919050565b61047281610458565b82525050565b5f60208201905061048b5f830184610469565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6104c381610458565b82525050565b5f6104d483836104ba565b60208301905092915050565b5f602082019050919050565b5f6104f682610491565b610500818561049b565b935061050b836104ab565b805f5b8381101561053b57815161052288826104c9565b975061052d836104e0565b92505060018101905061050e565b5085935050505092915050565b5f6020820190508181035f83015261056081846104ec565b905092915050565b610571816103db565b82525050565b5f60408201905061058a5f830185610469565b6105976020830184610568565b9392505050565b5f6040820190506105b15f830185610568565b6105be6020830184610568565b939250505056fea2646970667358221220a010bc4f9e03ee932921c8b181f7ffaefdf5bfbd0970978b164f71161d06c45764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x707 CODESIZE SUB DUP1 PUSH2 0x707 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FB DUP1 PUSH2 0x10C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49CE0061 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7188AB89 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xD7741CAD EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xFE3636F0 EQ PUSH2 0xCC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH2 0x114 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2D0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD6DC687 CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP3 SWAP2 SWAP1 PUSH2 0x577 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x168 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x219 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x27D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2DB DUP3 PUSH0 PUSH2 0x2E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x32A JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x321 SWAP3 SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3ED DUP2 PUSH2 0x3DB JUMP JUMPDEST DUP2 EQ PUSH2 0x3F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x408 DUP2 PUSH2 0x3E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x423 JUMPI PUSH2 0x422 PUSH2 0x3D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x430 DUP5 DUP3 DUP6 ADD PUSH2 0x3FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x462 DUP3 PUSH2 0x439 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x472 DUP2 PUSH2 0x458 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48B PUSH0 DUP4 ADD DUP5 PUSH2 0x469 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C3 DUP2 PUSH2 0x458 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D4 DUP4 DUP4 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F6 DUP3 PUSH2 0x491 JUMP JUMPDEST PUSH2 0x500 DUP2 DUP6 PUSH2 0x49B JUMP JUMPDEST SWAP4 POP PUSH2 0x50B DUP4 PUSH2 0x4AB JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x53B JUMPI DUP2 MLOAD PUSH2 0x522 DUP9 DUP3 PUSH2 0x4C9 JUMP JUMPDEST SWAP8 POP PUSH2 0x52D DUP4 PUSH2 0x4E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x50E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x560 DUP2 DUP5 PUSH2 0x4EC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x571 DUP2 PUSH2 0x3DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x58A PUSH0 DUP4 ADD DUP6 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x597 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x568 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5B1 PUSH0 DUP4 ADD DUP6 PUSH2 0x568 JUMP JUMPDEST PUSH2 0x5BE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x568 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 LT 0xBC 0x4F SWAP15 SUB 0xEE SWAP4 0x29 0x21 0xC8 0xB1 DUP2 0xF7 SELFDESTRUCT 0xAE REVERT CREATE2 0xBF 0xBD MULMOD PUSH17 0x978B164F71161D06C45764736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "132:519:4:-:0;;;233:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;293:6;271:19;;:28;;;;;;;;;;;;;;;;;;233:73;132:519;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;132:519:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allClones_579": {
									"entryPoint": 522,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@clone_22": {
									"entryPoint": 720,
									"id": 22,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@clone_67": {
									"entryPoint": 738,
									"id": 67,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createClone_621": {
									"entryPoint": 234,
									"id": 621,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getClones_630": {
									"entryPoint": 581,
									"id": 630,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@logicImplementation_576": {
									"entryPoint": 487,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4421:5",
										"nodeType": "YulBlock",
										"src": "0:4421:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:32:5",
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nativeSrc": "389:16:5",
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:5",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nativeSrc": "460:79:5",
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:5",
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:5",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:5",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nativeSrc": "519:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nativeSrc": "519:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nativeSrc": "490:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nativeSrc": "480:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nativeSrc": "473:43:5",
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nativeSrc": "470:63:5",
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:5",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nativeSrc": "597:87:5",
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nativeSrc": "607:29:5",
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nativeSrc": "616:20:5",
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nativeSrc": "645:33:5",
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nativeSrc": "645:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:5",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:5",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:5",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nativeSrc": "756:263:5",
													"nodeType": "YulBlock",
													"src": "756:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:5",
																"nodeType": "YulBlock",
																"src": "802:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:5"
																			},
																			"nativeSrc": "804:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:5"
																		},
																		"nativeSrc": "804:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:5"
																		},
																		"nativeSrc": "773:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:5",
																		"nodeType": "YulLiteral",
																		"src": "798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:5"
																},
																"nativeSrc": "769:32:5",
																"nodeType": "YulFunctionCall",
																"src": "769:32:5"
															},
															"nativeSrc": "766:119:5",
															"nodeType": "YulIf",
															"src": "766:119:5"
														},
														{
															"nativeSrc": "895:117:5",
															"nodeType": "YulBlock",
															"src": "895:117:5",
															"statements": [
																{
																	"nativeSrc": "910:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:5",
																		"nodeType": "YulLiteral",
																		"src": "924:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:5",
																			"nodeType": "YulTypedName",
																			"src": "914:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:5",
																	"nodeType": "YulAssignment",
																	"src": "939:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:5"
																				},
																				"nativeSrc": "970:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:5"
																		},
																		"nativeSrc": "949:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:5",
														"nodeType": "YulTypedName",
														"src": "726:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:5",
														"nodeType": "YulTypedName",
														"src": "737:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:5",
														"nodeType": "YulTypedName",
														"src": "749:6:5",
														"type": ""
													}
												],
												"src": "690:329:5"
											},
											{
												"body": {
													"nativeSrc": "1070:81:5",
													"nodeType": "YulBlock",
													"src": "1070:81:5",
													"statements": [
														{
															"nativeSrc": "1080:65:5",
															"nodeType": "YulAssignment",
															"src": "1080:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:5"
																},
																"nativeSrc": "1091:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:5",
														"nodeType": "YulTypedName",
														"src": "1052:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:5",
														"nodeType": "YulTypedName",
														"src": "1062:7:5",
														"type": ""
													}
												],
												"src": "1025:126:5"
											},
											{
												"body": {
													"nativeSrc": "1202:51:5",
													"nodeType": "YulBlock",
													"src": "1202:51:5",
													"statements": [
														{
															"nativeSrc": "1212:35:5",
															"nodeType": "YulAssignment",
															"src": "1212:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:5"
																},
																"nativeSrc": "1223:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:5",
														"nodeType": "YulTypedName",
														"src": "1184:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:5",
														"nodeType": "YulTypedName",
														"src": "1194:7:5",
														"type": ""
													}
												],
												"src": "1157:96:5"
											},
											{
												"body": {
													"nativeSrc": "1324:53:5",
													"nodeType": "YulBlock",
													"src": "1324:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:5"
																		},
																		"nativeSrc": "1346:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:5"
																},
																"nativeSrc": "1334:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:5"
															},
															"nativeSrc": "1334:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1259:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:5",
														"nodeType": "YulTypedName",
														"src": "1312:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:5",
														"nodeType": "YulTypedName",
														"src": "1319:3:5",
														"type": ""
													}
												],
												"src": "1259:118:5"
											},
											{
												"body": {
													"nativeSrc": "1481:124:5",
													"nodeType": "YulBlock",
													"src": "1481:124:5",
													"statements": [
														{
															"nativeSrc": "1491:26:5",
															"nodeType": "YulAssignment",
															"src": "1491:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:5"
																},
																"nativeSrc": "1499:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:5"
																		},
																		"nativeSrc": "1580:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1527:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:5"
																},
																"nativeSrc": "1527:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:5"
															},
															"nativeSrc": "1527:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1383:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:5",
														"nodeType": "YulTypedName",
														"src": "1453:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:5",
														"nodeType": "YulTypedName",
														"src": "1465:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:5",
														"nodeType": "YulTypedName",
														"src": "1476:4:5",
														"type": ""
													}
												],
												"src": "1383:222:5"
											},
											{
												"body": {
													"nativeSrc": "1685:40:5",
													"nodeType": "YulBlock",
													"src": "1685:40:5",
													"statements": [
														{
															"nativeSrc": "1696:22:5",
															"nodeType": "YulAssignment",
															"src": "1696:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1712:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1712:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1706:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:5"
																},
																"nativeSrc": "1706:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1706:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1696:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1611:114:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1668:5:5",
														"nodeType": "YulTypedName",
														"src": "1668:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1678:6:5",
														"nodeType": "YulTypedName",
														"src": "1678:6:5",
														"type": ""
													}
												],
												"src": "1611:114:5"
											},
											{
												"body": {
													"nativeSrc": "1842:73:5",
													"nodeType": "YulBlock",
													"src": "1842:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1859:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1859:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1864:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1864:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1852:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1852:6:5"
																},
																"nativeSrc": "1852:19:5",
																"nodeType": "YulFunctionCall",
																"src": "1852:19:5"
															},
															"nativeSrc": "1852:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "1852:19:5"
														},
														{
															"nativeSrc": "1880:29:5",
															"nodeType": "YulAssignment",
															"src": "1880:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1899:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1899:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1904:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1904:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1895:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1895:3:5"
																},
																"nativeSrc": "1895:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1895:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1880:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "1880:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "1731:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1814:3:5",
														"nodeType": "YulTypedName",
														"src": "1814:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1819:6:5",
														"nodeType": "YulTypedName",
														"src": "1819:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1830:11:5",
														"nodeType": "YulTypedName",
														"src": "1830:11:5",
														"type": ""
													}
												],
												"src": "1731:184:5"
											},
											{
												"body": {
													"nativeSrc": "1993:60:5",
													"nodeType": "YulBlock",
													"src": "1993:60:5",
													"statements": [
														{
															"nativeSrc": "2003:11:5",
															"nodeType": "YulAssignment",
															"src": "2003:11:5",
															"value": {
																"name": "ptr",
																"nativeSrc": "2011:3:5",
																"nodeType": "YulIdentifier",
																"src": "2011:3:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2003:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2003:4:5"
																}
															]
														},
														{
															"nativeSrc": "2024:22:5",
															"nodeType": "YulAssignment",
															"src": "2024:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2036:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2036:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2041:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2041:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2032:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:5"
																},
																"nativeSrc": "2032:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2032:14:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2024:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2024:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1921:132:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1980:3:5",
														"nodeType": "YulTypedName",
														"src": "1980:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1988:4:5",
														"nodeType": "YulTypedName",
														"src": "1988:4:5",
														"type": ""
													}
												],
												"src": "1921:132:5"
											},
											{
												"body": {
													"nativeSrc": "2114:53:5",
													"nodeType": "YulBlock",
													"src": "2114:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2131:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2131:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2154:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2154:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2136:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2136:17:5"
																		},
																		"nativeSrc": "2136:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2136:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2124:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:5"
																},
																"nativeSrc": "2124:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2124:37:5"
															},
															"nativeSrc": "2124:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2124:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "2059:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2102:5:5",
														"nodeType": "YulTypedName",
														"src": "2102:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2109:3:5",
														"nodeType": "YulTypedName",
														"src": "2109:3:5",
														"type": ""
													}
												],
												"src": "2059:108:5"
											},
											{
												"body": {
													"nativeSrc": "2253:99:5",
													"nodeType": "YulBlock",
													"src": "2253:99:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2297:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2297:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2305:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2305:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "2263:33:5",
																	"nodeType": "YulIdentifier",
																	"src": "2263:33:5"
																},
																"nativeSrc": "2263:46:5",
																"nodeType": "YulFunctionCall",
																"src": "2263:46:5"
															},
															"nativeSrc": "2263:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "2263:46:5"
														},
														{
															"nativeSrc": "2318:28:5",
															"nodeType": "YulAssignment",
															"src": "2318:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2336:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2336:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2341:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2341:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2332:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2332:3:5"
																},
																"nativeSrc": "2332:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2332:14:5"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "2318:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "2318:10:5"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "2173:179:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "2226:6:5",
														"nodeType": "YulTypedName",
														"src": "2226:6:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2234:3:5",
														"nodeType": "YulTypedName",
														"src": "2234:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "2242:10:5",
														"nodeType": "YulTypedName",
														"src": "2242:10:5",
														"type": ""
													}
												],
												"src": "2173:179:5"
											},
											{
												"body": {
													"nativeSrc": "2433:38:5",
													"nodeType": "YulBlock",
													"src": "2433:38:5",
													"statements": [
														{
															"nativeSrc": "2443:22:5",
															"nodeType": "YulAssignment",
															"src": "2443:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2455:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2455:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2460:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2460:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2451:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:5"
																},
																"nativeSrc": "2451:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2451:14:5"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "2443:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2443:4:5"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "2358:113:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2420:3:5",
														"nodeType": "YulTypedName",
														"src": "2420:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "2428:4:5",
														"nodeType": "YulTypedName",
														"src": "2428:4:5",
														"type": ""
													}
												],
												"src": "2358:113:5"
											},
											{
												"body": {
													"nativeSrc": "2631:608:5",
													"nodeType": "YulBlock",
													"src": "2631:608:5",
													"statements": [
														{
															"nativeSrc": "2641:68:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2641:68:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2703:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2703:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "2655:47:5",
																	"nodeType": "YulIdentifier",
																	"src": "2655:47:5"
																},
																"nativeSrc": "2655:54:5",
																"nodeType": "YulFunctionCall",
																"src": "2655:54:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2645:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2645:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2718:93:5",
															"nodeType": "YulAssignment",
															"src": "2718:93:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2799:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2799:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2804:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2804:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "2725:73:5",
																	"nodeType": "YulIdentifier",
																	"src": "2725:73:5"
																},
																"nativeSrc": "2725:86:5",
																"nodeType": "YulFunctionCall",
																"src": "2725:86:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2718:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2718:3:5"
																}
															]
														},
														{
															"nativeSrc": "2820:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2820:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2885:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2885:5:5"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "2835:49:5",
																	"nodeType": "YulIdentifier",
																	"src": "2835:49:5"
																},
																"nativeSrc": "2835:56:5",
																"nodeType": "YulFunctionCall",
																"src": "2835:56:5"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "2824:7:5",
																	"nodeType": "YulTypedName",
																	"src": "2824:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2900:21:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2900:21:5",
															"value": {
																"name": "baseRef",
																"nativeSrc": "2914:7:5",
																"nodeType": "YulIdentifier",
																"src": "2914:7:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2904:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2904:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2990:224:5",
																"nodeType": "YulBlock",
																"src": "2990:224:5",
																"statements": [
																	{
																		"nativeSrc": "3004:34:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3004:34:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3031:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3031:6:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "3025:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3025:5:5"
																			},
																			"nativeSrc": "3025:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3025:13:5"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "3008:13:5",
																				"nodeType": "YulTypedName",
																				"src": "3008:13:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3051:70:5",
																		"nodeType": "YulAssignment",
																		"src": "3051:70:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "3102:13:5",
																					"nodeType": "YulIdentifier",
																					"src": "3102:13:5"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "3117:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3117:3:5"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "3058:43:5",
																				"nodeType": "YulIdentifier",
																				"src": "3058:43:5"
																			},
																			"nativeSrc": "3058:63:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3058:63:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3051:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3051:3:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3134:70:5",
																		"nodeType": "YulAssignment",
																		"src": "3134:70:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3197:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3197:6:5"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "3144:52:5",
																				"nodeType": "YulIdentifier",
																				"src": "3144:52:5"
																			},
																			"nativeSrc": "3144:60:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3144:60:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3134:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3134:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2952:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2952:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2955:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2955:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2949:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2949:2:5"
																},
																"nativeSrc": "2949:13:5",
																"nodeType": "YulFunctionCall",
																"src": "2949:13:5"
															},
															"nativeSrc": "2930:284:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2963:18:5",
																"nodeType": "YulBlock",
																"src": "2963:18:5",
																"statements": [
																	{
																		"nativeSrc": "2965:14:5",
																		"nodeType": "YulAssignment",
																		"src": "2965:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2974:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "2974:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2977:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2977:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2970:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2970:3:5"
																			},
																			"nativeSrc": "2970:9:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2970:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2965:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "2965:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2934:14:5",
																"nodeType": "YulBlock",
																"src": "2934:14:5",
																"statements": [
																	{
																		"nativeSrc": "2936:10:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2936:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2945:1:5",
																			"nodeType": "YulLiteral",
																			"src": "2945:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "2940:1:5",
																				"nodeType": "YulTypedName",
																				"src": "2940:1:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2930:284:5"
														},
														{
															"nativeSrc": "3223:10:5",
															"nodeType": "YulAssignment",
															"src": "3223:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "3230:3:5",
																"nodeType": "YulIdentifier",
																"src": "3230:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3223:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3223:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "2507:732:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2610:5:5",
														"nodeType": "YulTypedName",
														"src": "2610:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2617:3:5",
														"nodeType": "YulTypedName",
														"src": "2617:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2626:3:5",
														"nodeType": "YulTypedName",
														"src": "2626:3:5",
														"type": ""
													}
												],
												"src": "2507:732:5"
											},
											{
												"body": {
													"nativeSrc": "3393:225:5",
													"nodeType": "YulBlock",
													"src": "3393:225:5",
													"statements": [
														{
															"nativeSrc": "3403:26:5",
															"nodeType": "YulAssignment",
															"src": "3403:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3415:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3415:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3426:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3426:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3411:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3411:3:5"
																},
																"nativeSrc": "3411:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3411:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3403:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3403:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3450:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3450:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3461:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3461:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3446:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3446:3:5"
																		},
																		"nativeSrc": "3446:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3469:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "3469:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3475:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3475:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3465:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:5"
																		},
																		"nativeSrc": "3465:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3465:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3439:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:5"
																},
																"nativeSrc": "3439:47:5",
																"nodeType": "YulFunctionCall",
																"src": "3439:47:5"
															},
															"nativeSrc": "3439:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "3439:47:5"
														},
														{
															"nativeSrc": "3495:116:5",
															"nodeType": "YulAssignment",
															"src": "3495:116:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3597:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3597:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3606:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3606:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3503:93:5",
																	"nodeType": "YulIdentifier",
																	"src": "3503:93:5"
																},
																"nativeSrc": "3503:108:5",
																"nodeType": "YulFunctionCall",
																"src": "3503:108:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3495:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3495:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "3245:373:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3365:9:5",
														"nodeType": "YulTypedName",
														"src": "3365:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3377:6:5",
														"nodeType": "YulTypedName",
														"src": "3377:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3388:4:5",
														"nodeType": "YulTypedName",
														"src": "3388:4:5",
														"type": ""
													}
												],
												"src": "3245:373:5"
											},
											{
												"body": {
													"nativeSrc": "3689:53:5",
													"nodeType": "YulBlock",
													"src": "3689:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3706:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3706:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3729:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3729:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3711:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3711:17:5"
																		},
																		"nativeSrc": "3711:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3711:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3699:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3699:6:5"
																},
																"nativeSrc": "3699:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3699:37:5"
															},
															"nativeSrc": "3699:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3699:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3624:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3677:5:5",
														"nodeType": "YulTypedName",
														"src": "3677:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3684:3:5",
														"nodeType": "YulTypedName",
														"src": "3684:3:5",
														"type": ""
													}
												],
												"src": "3624:118:5"
											},
											{
												"body": {
													"nativeSrc": "3874:206:5",
													"nodeType": "YulBlock",
													"src": "3874:206:5",
													"statements": [
														{
															"nativeSrc": "3884:26:5",
															"nodeType": "YulAssignment",
															"src": "3884:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3896:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3896:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3907:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3907:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3892:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3892:3:5"
																},
																"nativeSrc": "3892:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3892:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3884:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3884:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3964:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3964:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3977:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3977:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3988:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3988:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3973:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3973:3:5"
																		},
																		"nativeSrc": "3973:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3973:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3920:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3920:43:5"
																},
																"nativeSrc": "3920:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3920:71:5"
															},
															"nativeSrc": "3920:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3920:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4045:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4045:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4058:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4058:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4069:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4069:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4054:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4054:3:5"
																		},
																		"nativeSrc": "4054:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4054:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4001:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4001:43:5"
																},
																"nativeSrc": "4001:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4001:72:5"
															},
															"nativeSrc": "4001:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4001:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3748:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3838:9:5",
														"nodeType": "YulTypedName",
														"src": "3838:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3850:6:5",
														"nodeType": "YulTypedName",
														"src": "3850:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3858:6:5",
														"nodeType": "YulTypedName",
														"src": "3858:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3869:4:5",
														"nodeType": "YulTypedName",
														"src": "3869:4:5",
														"type": ""
													}
												],
												"src": "3748:332:5"
											},
											{
												"body": {
													"nativeSrc": "4212:206:5",
													"nodeType": "YulBlock",
													"src": "4212:206:5",
													"statements": [
														{
															"nativeSrc": "4222:26:5",
															"nodeType": "YulAssignment",
															"src": "4222:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4234:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4234:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4245:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4245:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4230:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4230:3:5"
																},
																"nativeSrc": "4230:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4230:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4222:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4222:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4302:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4302:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4315:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4315:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4326:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4326:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4311:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4311:3:5"
																		},
																		"nativeSrc": "4311:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4258:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4258:43:5"
																},
																"nativeSrc": "4258:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4258:71:5"
															},
															"nativeSrc": "4258:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4258:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4383:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4383:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4396:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4396:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4407:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4407:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4392:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4392:3:5"
																		},
																		"nativeSrc": "4392:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4392:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4339:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4339:43:5"
																},
																"nativeSrc": "4339:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4339:72:5"
															},
															"nativeSrc": "4339:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4339:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4086:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4176:9:5",
														"nodeType": "YulTypedName",
														"src": "4176:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4188:6:5",
														"nodeType": "YulTypedName",
														"src": "4188:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4196:6:5",
														"nodeType": "YulTypedName",
														"src": "4196:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4207:4:5",
														"nodeType": "YulTypedName",
														"src": "4207:4:5",
														"type": ""
													}
												],
												"src": "4086:332:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c806349ce00611461004e5780637188ab891461007e578063d7741cad1461009c578063fe3636f0146100cc575b5f80fd5b6100686004803603810190610063919061040e565b6100ea565b6040516100759190610478565b60405180910390f35b6100866101e7565b6040516100939190610478565b60405180910390f35b6100b660048036038101906100b1919061040e565b61020a565b6040516100c39190610478565b60405180910390f35b6100d4610245565b6040516100e19190610548565b60405180910390f35b5f806101145f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff166102d0565b90508073ffffffffffffffffffffffffffffffffffffffff1663cd6dc68733856040518363ffffffff1660e01b8152600401610151929190610577565b5f604051808303815f87803b158015610168575f80fd5b505af115801561017a573d5f803e3d5ffd5b50505050600181908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080915050919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018181548110610219575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060018054806020026020016040519081016040528092919081815260200182805480156102c657602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161027d575b5050505050905090565b5f6102db825f6102e2565b9050919050565b5f8147101561032a5747826040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161032192919061059e565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103d1576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b5f80fd5b5f819050919050565b6103ed816103db565b81146103f7575f80fd5b50565b5f81359050610408816103e4565b92915050565b5f60208284031215610423576104226103d7565b5b5f610430848285016103fa565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61046282610439565b9050919050565b61047281610458565b82525050565b5f60208201905061048b5f830184610469565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6104c381610458565b82525050565b5f6104d483836104ba565b60208301905092915050565b5f602082019050919050565b5f6104f682610491565b610500818561049b565b935061050b836104ab565b805f5b8381101561053b57815161052288826104c9565b975061052d836104e0565b92505060018101905061050e565b5085935050505092915050565b5f6020820190508181035f83015261056081846104ec565b905092915050565b610571816103db565b82525050565b5f60408201905061058a5f830185610469565b6105976020830184610568565b9392505050565b5f6040820190506105b15f830185610568565b6105be6020830184610568565b939250505056fea2646970667358221220a010bc4f9e03ee932921c8b181f7ffaefdf5bfbd0970978b164f71161d06c45764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49CE0061 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7188AB89 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xD7741CAD EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xFE3636F0 EQ PUSH2 0xCC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH2 0x114 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2D0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD6DC687 CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP3 SWAP2 SWAP1 PUSH2 0x577 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x168 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x219 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x27D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2DB DUP3 PUSH0 PUSH2 0x2E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x32A JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x321 SWAP3 SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3ED DUP2 PUSH2 0x3DB JUMP JUMPDEST DUP2 EQ PUSH2 0x3F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x408 DUP2 PUSH2 0x3E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x423 JUMPI PUSH2 0x422 PUSH2 0x3D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x430 DUP5 DUP3 DUP6 ADD PUSH2 0x3FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x462 DUP3 PUSH2 0x439 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x472 DUP2 PUSH2 0x458 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48B PUSH0 DUP4 ADD DUP5 PUSH2 0x469 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C3 DUP2 PUSH2 0x458 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D4 DUP4 DUP4 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F6 DUP3 PUSH2 0x491 JUMP JUMPDEST PUSH2 0x500 DUP2 DUP6 PUSH2 0x49B JUMP JUMPDEST SWAP4 POP PUSH2 0x50B DUP4 PUSH2 0x4AB JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x53B JUMPI DUP2 MLOAD PUSH2 0x522 DUP9 DUP3 PUSH2 0x4C9 JUMP JUMPDEST SWAP8 POP PUSH2 0x52D DUP4 PUSH2 0x4E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x50E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x560 DUP2 DUP5 PUSH2 0x4EC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x571 DUP2 PUSH2 0x3DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x58A PUSH0 DUP4 ADD DUP6 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x597 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x568 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5B1 PUSH0 DUP4 ADD DUP6 PUSH2 0x568 JUMP JUMPDEST PUSH2 0x5BE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x568 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 LT 0xBC 0x4F SWAP15 SUB 0xEE SWAP4 0x29 0x21 0xC8 0xB1 DUP2 0xF7 SELFDESTRUCT 0xAE REVERT CREATE2 0xBF 0xBD MULMOD PUSH17 0x978B164F71161D06C45764736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "132:519:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;160:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;200:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;554:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:236;367:7;386:13;402:33;415:19;;;;;;;;;;402:12;:33::i;:::-;386:49;;451:5;445:23;;;469:10;481:6;445:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:9;513:5;498:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;536:5;529:12;;;312:236;;;:::o;160:34::-;;;;;;;;;;;;:::o;200:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;554:95::-;598:16;633:9;626:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:95;:::o;1070:123:0:-;1127:16;1162:24;1168:14;1184:1;1162:5;:24::i;:::-;1155:31;;1070:123;;;:::o;1585:910::-;1657:16;1713:5;1689:21;:29;1685:123;;;1768:21;1791:5;1741:56;;;;;;;;;;;;:::i;:::-;;;;;;;;1685:123;2094:48;2076:14;2070:4;2066:25;2060:4;2056:36;2053:90;2047:4;2040:104;2301:32;2284:14;2278:4;2274:25;2271:63;2265:4;2258:77;2380:4;2374;2367:5;2360:25;2348:37;;2428:1;2408:22;;:8;:22;;;2404:85;;2453:25;;;;;;;;;;;;;;2404:85;1585:910;;;;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:114::-;1678:6;1712:5;1706:12;1696:22;;1611:114;;;:::o;1731:184::-;1830:11;1864:6;1859:3;1852:19;1904:4;1899:3;1895:14;1880:29;;1731:184;;;;:::o;1921:132::-;1988:4;2011:3;2003:11;;2041:4;2036:3;2032:14;2024:22;;1921:132;;;:::o;2059:108::-;2136:24;2154:5;2136:24;:::i;:::-;2131:3;2124:37;2059:108;;:::o;2173:179::-;2242:10;2263:46;2305:3;2297:6;2263:46;:::i;:::-;2341:4;2336:3;2332:14;2318:28;;2173:179;;;;:::o;2358:113::-;2428:4;2460;2455:3;2451:14;2443:22;;2358:113;;;:::o;2507:732::-;2626:3;2655:54;2703:5;2655:54;:::i;:::-;2725:86;2804:6;2799:3;2725:86;:::i;:::-;2718:93;;2835:56;2885:5;2835:56;:::i;:::-;2914:7;2945:1;2930:284;2955:6;2952:1;2949:13;2930:284;;;3031:6;3025:13;3058:63;3117:3;3102:13;3058:63;:::i;:::-;3051:70;;3144:60;3197:6;3144:60;:::i;:::-;3134:70;;2990:224;2977:1;2974;2970:9;2965:14;;2930:284;;;2934:14;3230:3;3223:10;;2631:608;;;2507:732;;;;:::o;3245:373::-;3388:4;3426:2;3415:9;3411:18;3403:26;;3475:9;3469:4;3465:20;3461:1;3450:9;3446:17;3439:47;3503:108;3606:4;3597:6;3503:108;:::i;:::-;3495:116;;3245:373;;;;:::o;3624:118::-;3711:24;3729:5;3711:24;:::i;:::-;3706:3;3699:37;3624:118;;:::o;3748:332::-;3869:4;3907:2;3896:9;3892:18;3884:26;;3920:71;3988:1;3977:9;3973:17;3964:6;3920:71;:::i;:::-;4001:72;4069:2;4058:9;4054:18;4045:6;4001:72;:::i;:::-;3748:332;;;;;:::o;4086:::-;4207:4;4245:2;4234:9;4230:18;4222:26;;4258:71;4326:1;4315:9;4311:17;4302:6;4258:71;:::i;:::-;4339:72;4407:2;4396:9;4392:18;4383:6;4339:72;:::i;:::-;4086:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "306200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allClones(uint256)": "4966",
								"createClone(uint256)": "infinite",
								"getClones()": "infinite",
								"logicImplementation()": "2505"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 651,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 651,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 651,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 306,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 306,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 306,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 233,
									"end": 306,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 233,
									"end": 306,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 233,
									"end": 306,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 233,
									"end": 306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 233,
									"end": 306,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 293,
									"end": 299,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 271,
									"end": 290,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 290,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 271,
									"end": 299,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 271,
									"end": 299,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 271,
									"end": 299,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 271,
									"end": 299,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 233,
									"end": 306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 132,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 132,
									"end": 651,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 132,
									"end": 651,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 132,
									"end": 651,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 132,
									"end": 651,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 651,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 132,
									"end": 651,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 651,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 651,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 132,
									"end": 651,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 651,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a010bc4f9e03ee932921c8b181f7ffaefdf5bfbd0970978b164f71161d06c45764736f6c634300081a0033",
									".code": [
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "49CE0061"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "7188AB89"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "D7741CAD"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "FE3636F0"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 651,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 312,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 312,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 312,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 160,
											"end": 194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 160,
											"end": 194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 200,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 200,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 200,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 554,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 554,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 312,
											"end": 548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 367,
											"end": 374,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 402,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 415,
											"end": 434,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 434,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 415,
											"end": 434,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 415,
											"end": 434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 415,
											"end": 434,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 415,
											"end": 434,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 415,
											"end": 434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 415,
											"end": 434,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 415,
											"end": 434,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 415,
											"end": 434,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 402,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 402,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 402,
											"end": 435,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 402,
											"end": 435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 386,
											"end": 435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 386,
											"end": 435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 451,
											"end": 456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 445,
											"end": 468,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 445,
											"end": 468,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 445,
											"end": 468,
											"name": "PUSH",
											"source": 4,
											"value": "CD6DC687"
										},
										{
											"begin": 469,
											"end": 479,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 481,
											"end": 487,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 445,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 445,
											"end": 488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 445,
											"end": 488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 498,
											"end": 519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 529,
											"end": 541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 529,
											"end": 541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 529,
											"end": 541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 312,
											"end": 548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 160,
											"end": 194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 200,
											"end": 226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 554,
											"end": 649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 598,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 633,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 626,
											"end": 642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1168,
											"end": 1182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1710,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1789,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1741,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 2076,
											"end": 2090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2074,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2143,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 2284,
											"end": 2298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2334,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2385,
											"name": "CREATE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "B06EBF3D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1908,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2154,
											"end": 2159,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2136,
											"end": 2160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2161,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2242,
											"end": 2252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2305,
											"end": 2308,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2263,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2339,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2346,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2432,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2464,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2655,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2802,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2725,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2811,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2885,
											"end": 2890,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2835,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 2962,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3115,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3058,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3121,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3197,
											"end": 3203,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3144,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3204,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2990,
											"end": 3214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2974,
											"end": 2975,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2934,
											"end": 2948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 3239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 3239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 3239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 3239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3392,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3428,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3424,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3485,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3463,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3486,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3606,
											"end": 3610,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3503,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3742,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3624,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3729,
											"end": 3734,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3711,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3735,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3711,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 4080,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3748,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3869,
											"end": 3873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3988,
											"end": 3989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 3986,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3920,
											"end": 3991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3991,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3920,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4069,
											"end": 4071,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4001,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4073,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4001,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 4080,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 4080,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 4080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 4080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 4080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 4080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4418,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4086,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4247,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4326,
											"end": 4327,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4324,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4311,
											"end": 4328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4258,
											"end": 4329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4329,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4258,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4405,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4339,
											"end": 4411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4418,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4418,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"Contracts/Logic.sol",
								"Contracts/minimal1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allClones(uint256)": "d7741cad",
							"createClone(uint256)": "49ce0061",
							"getClones()": "fe3636f0",
							"logicImplementation()": "7188ab89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allClones\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createClone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClones\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"logicImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/minimal1.sol\":\"ProxyFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"Contracts/Logic.sol\":{\"keccak256\":\"0x51cbdde0ca2b4f80b6c6aec8c9a87dba1bc79e0879cc69af571a27c4c19ad5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12e0dcef062f730140c967342db66f0f74b5cda636992f531740c2f290fc6bfb\",\"dweb:/ipfs/QmZVQR7r4KtpWp53VjycCgChWFKrARg7GWKNxdtu5imaG1\"]},\"Contracts/minimal1.sol\":{\"keccak256\":\"0x04612a9f6318624f43c6d92d31860abfa90a8cff8f993feae617aaf2f76863d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e65deffaf35210f3038f3466764558cb9cd4e5ed1600abcba10eec8c84d530\",\"dweb:/ipfs/QmXYyqVKXkqVVfp8q1zBquvn1k7u8xeZciyvPSiXby2QNm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 576,
								"contract": "Contracts/minimal1.sol:ProxyFactory",
								"label": "logicImplementation",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 579,
								"contract": "Contracts/minimal1.sol:ProxyFactory",
								"label": "allClones",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
							"file": "../utils/Create2.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 498,
							"src": "126:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Create2",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 497,
										"src": "134:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 520,
							"src": "172:43:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "180:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "217:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "Clones",
							"nameLocation": "825:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "94289054",
									"id": 8,
									"name": "CloneArgumentsTooLong",
									"nameLocation": "844:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:0"
									},
									"src": "838:30:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1145:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 17,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1168:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 16,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															22,
															67
														],
														"referencedDeclaration": 67,
														"src": "1162:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 15,
												"id": 20,
												"nodeType": "Return",
												"src": "1155:31:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "874:191:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1079:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1093:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1085:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:24:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1135:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1127:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:18:0"
									},
									"scope": 398,
									"src": "1070:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1675:820:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 34,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1697:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1689:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1689:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1689:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1703:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1689:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 37,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1689:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "1685:123:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "1720:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 44,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1776:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 43,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1768:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 42,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1768:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1768:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1782:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1768:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 47,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1791:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 39,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1741:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1748:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1741:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1741:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 49,
															"nodeType": "RevertStatement",
															"src": "1734:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1842:553:0",
													"nodeType": "YulBlock",
													"src": "1842:553:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2047:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2047:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2060:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2060:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2070:4:0",
																								"nodeType": "YulLiteral",
																								"src": "2070:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "2076:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "2076:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2066:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2066:3:0"
																						},
																						"nativeSrc": "2066:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2066:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2056:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2056:3:0"
																				},
																				"nativeSrc": "2056:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2056:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2094:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2094:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2053:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2053:2:0"
																		},
																		"nativeSrc": "2053:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2053:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2040:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:0"
																},
																"nativeSrc": "2040:104:0",
																"nodeType": "YulFunctionCall",
																"src": "2040:104:0"
															},
															"nativeSrc": "2040:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "2040:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2265:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2265:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2278:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2278:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2284:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2284:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2274:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2274:3:0"
																				},
																				"nativeSrc": "2274:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2274:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2301:32:0",
																				"nodeType": "YulLiteral",
																				"src": "2301:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2271:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2271:2:0"
																		},
																		"nativeSrc": "2271:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2271:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2258:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:0"
																},
																"nativeSrc": "2258:77:0",
																"nodeType": "YulFunctionCall",
																"src": "2258:77:0"
															},
															"nativeSrc": "2258:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "2258:77:0"
														},
														{
															"nativeSrc": "2348:37:0",
															"nodeType": "YulAssignment",
															"src": "2348:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2367:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "2367:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2374:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2374:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2380:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2380:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "2360:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2360:6:0"
																},
																"nativeSrc": "2360:25:0",
																"nodeType": "YulFunctionCall",
																"src": "2360:25:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2348:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "2348:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2076:14:0",
														"valueSize": 1
													},
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2284:14:0",
														"valueSize": 1
													},
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "2348:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2367:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 52,
												"nodeType": "InlineAssembly",
												"src": "1817:578:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2408:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 54,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2420:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2420:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2408:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "2404:85:0",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "2432:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 59,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2453:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2460:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2453:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2453:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 63,
															"nodeType": "RevertStatement",
															"src": "2446:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1199:381:0",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1594:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1608:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1600:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1599:39:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1665:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1657:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1656:18:0"
									},
									"scope": 398,
									"src": "1585:910:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "2972:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 78,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "3008:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3024:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 77,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															84,
															131
														],
														"referencedDeclaration": 131,
														"src": "2989:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2989:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 76,
												"id": 82,
												"nodeType": "Return",
												"src": "2982:50:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2501:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2879:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2906:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2898:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 71,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:38:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2962:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2954:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2953:18:0"
									},
									"scope": 398,
									"src": "2870:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3612:827:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 98,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3634:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3626:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 96,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3626:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3626:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3640:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3626:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 101,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "3650:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3626:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "IfStatement",
												"src": "3622:123:0",
												"trueBody": {
													"id": 114,
													"nodeType": "Block",
													"src": "3657:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 108,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3713:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3705:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 106,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3705:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3705:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3719:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3705:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "3728:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 103,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3678:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3685:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "3678:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3678:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 113,
															"nodeType": "RevertStatement",
															"src": "3671:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "3779:560:0",
													"nodeType": "YulBlock",
													"src": "3779:560:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3984:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3984:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3997:4:0",
																						"nodeType": "YulLiteral",
																						"src": "3997:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4007:4:0",
																								"nodeType": "YulLiteral",
																								"src": "4007:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "4013:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "4013:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4003:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "4003:3:0"
																						},
																						"nativeSrc": "4003:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "4003:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3993:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3993:3:0"
																				},
																				"nativeSrc": "3993:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3993:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4031:48:0",
																				"nodeType": "YulLiteral",
																				"src": "4031:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3990:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "3990:2:0"
																		},
																		"nativeSrc": "3990:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3990:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3977:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:0"
																},
																"nativeSrc": "3977:104:0",
																"nodeType": "YulFunctionCall",
																"src": "3977:104:0"
															},
															"nativeSrc": "3977:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "3977:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4202:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4202:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4215:4:0",
																						"nodeType": "YulLiteral",
																						"src": "4215:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "4221:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "4221:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4211:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4211:3:0"
																				},
																				"nativeSrc": "4211:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4211:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4238:32:0",
																				"nodeType": "YulLiteral",
																				"src": "4238:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4208:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "4208:2:0"
																		},
																		"nativeSrc": "4208:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4208:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4195:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:0"
																},
																"nativeSrc": "4195:77:0",
																"nodeType": "YulFunctionCall",
																"src": "4195:77:0"
															},
															"nativeSrc": "4195:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "4195:77:0"
														},
														{
															"nativeSrc": "4285:44:0",
															"nodeType": "YulAssignment",
															"src": "4285:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4305:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4305:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4312:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4312:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4318:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4318:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4324:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4324:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "4297:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "4297:7:0"
																},
																"nativeSrc": "4297:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4297:32:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "4285:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "4285:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4013:14:0",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4221:14:0",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "4285:8:0",
														"valueSize": 1
													},
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "4324:4:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "4305:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 116,
												"nodeType": "InlineAssembly",
												"src": "3754:585:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 117,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "4352:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4372:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4364:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4364:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4352:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "4348:85:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "4376:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 123,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "4397:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4404:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "4397:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4397:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "4390:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3045:415:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3474:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3510:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3502:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3534:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 88,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3564:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:83:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3602:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3594:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:18:0"
									},
									"scope": 398,
									"src": "3465:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "4714:537:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4749:496:0",
													"nodeType": "YulBlock",
													"src": "4749:496:0",
													"statements": [
														{
															"nativeSrc": "4763:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4763:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4780:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4780:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4774:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4774:5:0"
																},
																"nativeSrc": "4774:11:0",
																"nodeType": "YulFunctionCall",
																"src": "4774:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "4767:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4767:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4809:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4809:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4814:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4814:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4805:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:0"
																		},
																		"nativeSrc": "4805:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4805:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4821:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "4821:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:0"
																},
																"nativeSrc": "4798:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4798:32:0"
															},
															"nativeSrc": "4798:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "4798:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4854:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4854:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4859:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4859:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4850:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:0"
																		},
																		"nativeSrc": "4850:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4866:34:0",
																		"nodeType": "YulLiteral",
																		"src": "4866:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4843:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:0"
																},
																"nativeSrc": "4843:58:0",
																"nodeType": "YulFunctionCall",
																"src": "4843:58:0"
															},
															"nativeSrc": "4843:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "4843:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4925:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4925:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4930:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4930:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4921:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4921:3:0"
																		},
																		"nativeSrc": "4921:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4921:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "4937:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "4937:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4914:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:0"
																},
																"nativeSrc": "4914:38:0",
																"nodeType": "YulFunctionCall",
																"src": "4914:38:0"
															},
															"nativeSrc": "4914:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "4914:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4972:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4977:42:0",
																		"nodeType": "YulLiteral",
																		"src": "4977:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4965:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:0"
																},
																"nativeSrc": "4965:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4965:55:0"
															},
															"nativeSrc": "4965:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4965:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5044:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5044:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5049:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5049:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5040:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5040:3:0"
																		},
																		"nativeSrc": "5040:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "5056:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "5056:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5033:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:0"
																},
																"nativeSrc": "5033:28:0",
																"nodeType": "YulFunctionCall",
																"src": "5033:28:0"
															},
															"nativeSrc": "5033:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "5033:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5085:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5085:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5090:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5090:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5081:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:0"
																		},
																		"nativeSrc": "5081:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5081:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5111:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5111:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5116:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5116:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5107:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5107:3:0"
																				},
																				"nativeSrc": "5107:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5107:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5123:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5123:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5097:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5097:9:0"
																		},
																		"nativeSrc": "5097:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5097:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5074:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5074:6:0"
																},
																"nativeSrc": "5074:55:0",
																"nodeType": "YulFunctionCall",
																"src": "5074:55:0"
															},
															"nativeSrc": "5074:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "5074:55:0"
														},
														{
															"nativeSrc": "5142:93:0",
															"nodeType": "YulAssignment",
															"src": "5142:93:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5173:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5173:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5178:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5178:4:0",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5169:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5169:3:0"
																				},
																				"nativeSrc": "5169:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5169:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5185:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5185:4:0",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5159:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5159:9:0"
																		},
																		"nativeSrc": "5159:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5159:31:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5192:42:0",
																		"nodeType": "YulLiteral",
																		"src": "5192:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5155:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "5155:3:0"
																},
																"nativeSrc": "5155:80:0",
																"nodeType": "YulFunctionCall",
																"src": "5155:80:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "5142:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "5142:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "4821:8:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "4937:14:0",
														"valueSize": 1
													},
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "5142:9:0",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "5056:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 143,
												"nodeType": "InlineAssembly",
												"src": "4724:521:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4445:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "4558:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4603:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4595:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4635:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4627:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "4657:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4649:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:86:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4703:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4695:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4694:19:0"
									},
									"scope": 398,
									"src": "4549:702:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "5500:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 156,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "5545:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "5561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 160,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5575:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5567:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5567:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 155,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															145,
															165
														],
														"referencedDeclaration": 145,
														"src": "5517:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5517:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 163,
												"nodeType": "Return",
												"src": "5510:71:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5257:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5370:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5415:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5407:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5439:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5397:60:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "5489:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5481:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5480:19:0"
									},
									"scope": 398,
									"src": "5361:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6094:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "6134:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "6150:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6156:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 175,
														"name": "cloneWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															182,
															236
														],
														"referencedDeclaration": 236,
														"src": "6111:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,uint256) returns (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6111:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 180,
												"nodeType": "Return",
												"src": "6104:54:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "5594:384:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "5992:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6023:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6015:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "6052:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6039:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6039:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6014:43:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "6084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6076:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6075:18:0"
									},
									"scope": 398,
									"src": "5983:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "6753:437:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6775:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6767:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6767:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6767:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6781:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "6767:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 199,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "6791:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6767:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "6763:123:0",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "6798:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 206,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "6854:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6846:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6846:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6846:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6860:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "6846:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "6869:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 201,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "6819:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6826:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "6819:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6819:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 211,
															"nodeType": "RevertStatement",
															"src": "6812:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "6908:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "6895:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"arguments": [
														{
															"id": 217,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6947:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "6963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 216,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "6919:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6919:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6895:73:0"
											},
											{
												"AST": {
													"nativeSrc": "7003:87:0",
													"nodeType": "YulBlock",
													"src": "7003:87:0",
													"statements": [
														{
															"nativeSrc": "7017:63:0",
															"nodeType": "YulAssignment",
															"src": "7017:63:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7036:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "7036:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "7047:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "7047:8:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7057:4:0",
																				"nodeType": "YulLiteral",
																				"src": "7057:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7043:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "7043:3:0"
																		},
																		"nativeSrc": "7043:19:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7043:19:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "7070:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "7070:8:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7064:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "7064:5:0"
																		},
																		"nativeSrc": "7064:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7064:15:0"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "7029:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "7029:6:0"
																},
																"nativeSrc": "7029:51:0",
																"nodeType": "YulFunctionCall",
																"src": "7029:51:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "7017:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "7017:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "7047:8:0",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "7070:8:0",
														"valueSize": 1
													},
													{
														"declaration": 192,
														"isOffset": false,
														"isSlot": false,
														"src": "7017:8:0",
														"valueSize": 1
													},
													{
														"declaration": 189,
														"isOffset": false,
														"isSlot": false,
														"src": "7036:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 221,
												"nodeType": "InlineAssembly",
												"src": "6978:112:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7103:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7123:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 223,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7115:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7115:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7103:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "7099:85:0",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "7127:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 228,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "7148:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7155:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "7148:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7148:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 232,
															"nodeType": "RevertStatement",
															"src": "7141:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6171:421:0",
										"text": " @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "6606:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6646:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6638:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6628:88:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "6743:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6735:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6734:18:0"
									},
									"scope": 398,
									"src": "6597:593:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "7934:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 249,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "7987:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 250,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "8003:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 251,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "8009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8015:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 248,
														"name": "cloneDeterministicWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															285
														],
														"referencedDeclaration": 285,
														"src": "7951:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,uint256) returns (address)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7951:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 247,
												"id": 254,
												"nodeType": "Return",
												"src": "7944:73:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "7196:565:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "7775:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "7828:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7820:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "7865:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7852:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7852:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "7887:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7879:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7810:87:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "7924:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7916:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7915:18:0"
									},
									"scope": 398,
									"src": "7766:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "8681:144:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "8704:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "8691:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 270,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"id": 273,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "8743:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "8759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 272,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "8715:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8715:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8691:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "8796:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 280,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "8803:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 281,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "8809:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 277,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8789:6:0",
														"memberName": "deploy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 462,
														"src": "8781:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (uint256,bytes32,bytes memory) returns (address)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8781:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 269,
												"id": 283,
												"nodeType": "Return",
												"src": "8774:44:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "8030:455:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "8499:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "8552:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8544:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "8589:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8576:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8576:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "8611:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8603:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:110:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "8671:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8663:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8662:18:0"
									},
									"scope": 398,
									"src": "8490:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "9161:166:0",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "9184:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "9171:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9171:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 302,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "9223:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "9239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 301,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "9195:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9195:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9284:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 310,
																	"name": "bytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "9300:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 309,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "9290:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9290:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 312,
															"name": "deployer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "9311:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 306,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "9261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9269:14:0",
														"memberName": "computeAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "9261:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9261:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 298,
												"id": 314,
												"nodeType": "Return",
												"src": "9254:66:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "8831:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "8961:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "9023:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9015:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "9060:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9047:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9047:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "9082:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9074:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "9104:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9096:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9005:113:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "9150:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9142:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9141:19:0"
									},
									"scope": 398,
									"src": "8952:375:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "9637:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "9699:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "9715:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 331,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9721:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9735:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9727:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9727:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "predictDeterministicAddressWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															316,
															339
														],
														"referencedDeclaration": 316,
														"src": "9654:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,address) pure returns (address)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9654:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 327,
												"id": 337,
												"nodeType": "Return",
												"src": "9647:94:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "9333:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "9463:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "9525:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9517:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "9562:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9549:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "9584:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9576:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9507:87:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "9626:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9618:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9617:19:0"
									},
									"scope": 398,
									"src": "9454:294:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "10441:246:0",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10464:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "10451:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 347,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10451:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 351,
																		"name": "instance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "10483:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10492:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "10483:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10497:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10483:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "3435",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10506:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"src": "10483:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10473:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 349,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10477:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10473:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10451:58:0"
											},
											{
												"AST": {
													"nativeSrc": "10577:81:0",
													"nodeType": "YulBlock",
													"src": "10577:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "instance",
																		"nativeSrc": "10603:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "10603:8:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "10617:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10617:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10625:2:0",
																				"nodeType": "YulLiteral",
																				"src": "10625:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10613:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "10613:3:0"
																		},
																		"nativeSrc": "10613:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10613:15:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10630:2:0",
																		"nodeType": "YulLiteral",
																		"src": "10630:2:0",
																		"type": "",
																		"value": "45"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "10640:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10640:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10634:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "10634:5:0"
																		},
																		"nativeSrc": "10634:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10634:13:0"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nativeSrc": "10591:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "10591:11:0"
																},
																"nativeSrc": "10591:57:0",
																"nodeType": "YulFunctionCall",
																"src": "10591:57:0"
															},
															"nativeSrc": "10591:57:0",
															"nodeType": "YulExpressionStatement",
															"src": "10591:57:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 342,
														"isOffset": false,
														"isSlot": false,
														"src": "10603:8:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "10617:6:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "10640:6:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 358,
												"nodeType": "InlineAssembly",
												"src": "10552:106:0"
											},
											{
												"expression": {
													"id": 359,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "10674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 346,
												"id": 360,
												"nodeType": "Return",
												"src": "10667:13:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "9754:603:0",
										"text": " @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchCloneArgs",
									"nameLocation": "10371:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "10394:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10386:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10385:18:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10427:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10426:14:0"
									},
									"scope": 398,
									"src": "10362:325:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "11476:362:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 372,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11495:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11490:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3234353331",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11504:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24531_by_1",
															"typeString": "int_const 24531"
														},
														"value": "24531"
													},
													"src": "11490:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "11486:55:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 376,
															"name": "CloneArgumentsTooLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "11518:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11518:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 378,
													"nodeType": "RevertStatement",
													"src": "11511:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "61",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															"value": "a"
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 385,
																			"name": "args",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "11636:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11641:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "11636:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3435",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11650:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_45_by_1",
																			"typeString": "int_const 45"
																		},
																		"value": "45"
																	},
																	"src": "11636:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11629:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint16_$",
																	"typeString": "type(uint16)"
																},
																"typeName": {
																	"id": 383,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "11629:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11629:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"hexValue": "3d81600a3d39f3363d3d373d3d3d363d73",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11671:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															}
														},
														{
															"id": 391,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "11728:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5af43d82803e903d91602b57fd5bf3",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11760:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															}
														},
														{
															"id": 393,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11813:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 380,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "11570:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11574:12:0",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "11570:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11570:261:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 371,
												"id": 395,
												"nodeType": "Return",
												"src": "11551:280:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "10693:640:0",
										"text": " @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_cloneCodeWithImmutableArgs",
									"nameLocation": "11347:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "11392:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11384:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "11429:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11416:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11416:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11374:65:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11462:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11462:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11461:14:0"
									},
									"scope": 398,
									"src": "11338:500:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 399,
							"src": "817:11023:0",
							"usedErrors": [
								8
							],
							"usedEvents": []
						}
					],
					"src": "100:11741:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
					"exportedSymbols": {
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 498,
							"sourceUnit": 520,
							"src": "127:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "135:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Create2",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "165:367:1",
								"text": " @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "Create2",
							"nameLocation": "541:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "555:50:1",
										"text": " @dev There's no code to deploy."
									},
									"errorSelector": "4ca249dc",
									"id": 406,
									"name": "Create2EmptyBytecode",
									"nameLocation": "616:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:2:1"
									},
									"src": "610:29:1"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1311:746:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1333:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1325:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1325:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1339:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1325:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 423,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1349:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1325:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "1321:125:1",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "1357:89:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 430,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1413:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				],
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1405:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 428,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1405:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1405:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1419:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1405:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 433,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "1428:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 425,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1378:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1385:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1378:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1378:57:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 435,
															"nodeType": "RevertStatement",
															"src": "1371:64:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 438,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1459:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1468:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1459:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1459:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "1455:80:1",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "1481:54:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 442,
																	"name": "Create2EmptyBytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1502:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "1495:29:1"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1569:392:1",
													"nodeType": "YulBlock",
													"src": "1569:392:1",
													"statements": [
														{
															"nativeSrc": "1583:67:1",
															"nodeType": "YulAssignment",
															"src": "1583:67:1",
															"value": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "1599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1611:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1611:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1621:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1607:3:1"
																		},
																		"nativeSrc": "1607:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1607:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1634:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:8:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1628:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1628:5:1"
																		},
																		"nativeSrc": "1628:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:15:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "1645:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:4:1"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "1591:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:7:1"
																},
																"nativeSrc": "1591:59:1",
																"nodeType": "YulFunctionCall",
																"src": "1591:59:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "1583:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1583:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1800:151:1",
																"nodeType": "YulBlock",
																"src": "1800:151:1",
																"statements": [
																	{
																		"nativeSrc": "1818:20:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1818:20:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1833:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1833:4:1",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1827:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1827:5:1"
																			},
																			"nativeSrc": "1827:11:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1827:11:1"
																		},
																		"variables": [
																			{
																				"name": "p",
																				"nativeSrc": "1822:1:1",
																				"nodeType": "YulTypedName",
																				"src": "1822:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1870:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1870:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1876:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1876:14:1"
																					},
																					"nativeSrc": "1876:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1876:16:1"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "1855:14:1",
																				"nodeType": "YulIdentifier",
																				"src": "1855:14:1"
																			},
																			"nativeSrc": "1855:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1855:38:1"
																		},
																		"nativeSrc": "1855:38:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:38:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1917:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1917:1:1"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1920:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1920:14:1"
																					},
																					"nativeSrc": "1920:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1920:16:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1910:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1910:6:1"
																			},
																			"nativeSrc": "1910:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1910:27:1"
																		},
																		"nativeSrc": "1910:27:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1910:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "addr",
																				"nativeSrc": "1762:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1762:4:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1755:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1755:6:1"
																		},
																		"nativeSrc": "1755:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "1780:14:1",
																							"nodeType": "YulIdentifier",
																							"src": "1780:14:1"
																						},
																						"nativeSrc": "1780:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:16:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1773:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1773:6:1"
																				},
																				"nativeSrc": "1773:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1773:24:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:1"
																		},
																		"nativeSrc": "1769:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:29:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1751:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1751:3:1"
																},
																"nativeSrc": "1751:48:1",
																"nodeType": "YulFunctionCall",
																"src": "1751:48:1"
															},
															"nativeSrc": "1748:203:1",
															"nodeType": "YulIf",
															"src": "1748:203:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1583:4:1",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1762:4:1",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "1599:6:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1611:8:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1634:8:1",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "1645:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 447,
												"nodeType": "InlineAssembly",
												"src": "1544:417:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 448,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1974:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1990:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 449,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1982:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1982:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1974:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "1970:81:1",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "1994:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 454,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2015:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2022:16:1",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2015:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2015:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 458,
															"nodeType": "RevertStatement",
															"src": "2008:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "645:560:1",
										"text": " @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nameLocation": "1219:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1234:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1226:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1250:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1242:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "bytecode",
												"nameLocation": "1269:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1256:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1256:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:53:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1297:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:14:1"
									},
									"scope": 497,
									"src": "1210:847:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2353:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 473,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2385:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 474,
															"name": "bytecodeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2391:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2413:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2405:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2405:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2405:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 472,
														"name": "computeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															482,
															496
														],
														"referencedDeclaration": 496,
														"src": "2370:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 480,
												"nodeType": "Return",
												"src": "2363:56:1"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2063:193:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2270:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2293:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2285:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2307:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2299:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:36:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2344:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:9:1"
									},
									"scope": 497,
									"src": "2261:165:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2784:1679:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2819:1638:1",
													"nodeType": "YulBlock",
													"src": "2819:1638:1",
													"statements": [
														{
															"nativeSrc": "2833:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2833:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2850:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2850:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2844:5:1"
																},
																"nativeSrc": "2844:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2844:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "2837:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2837:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4057:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4057:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4062:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4062:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4053:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:1"
																		},
																		"nativeSrc": "4053:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4053:14:1"
																	},
																	{
																		"name": "bytecodeHash",
																		"nativeSrc": "4069:12:1",
																		"nodeType": "YulIdentifier",
																		"src": "4069:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4046:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:1"
																},
																"nativeSrc": "4046:36:1",
																"nodeType": "YulFunctionCall",
																"src": "4046:36:1"
															},
															"nativeSrc": "4046:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "4046:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4106:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4106:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4111:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:1"
																		},
																		"nativeSrc": "4102:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:14:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4118:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4095:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:1"
																},
																"nativeSrc": "4095:28:1",
																"nodeType": "YulFunctionCall",
																"src": "4095:28:1"
															},
															"nativeSrc": "4095:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "4095:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4143:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4143:3:1"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4148:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4148:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:1"
																},
																"nativeSrc": "4136:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4136:21:1"
															},
															"nativeSrc": "4136:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4136:21:1"
														},
														{
															"nativeSrc": "4219:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4219:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4236:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4241:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4241:4:1",
																		"type": "",
																		"value": "0x0b"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4232:3:1"
																},
																"nativeSrc": "4232:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4232:14:1"
															},
															"variables": [
																{
																	"name": "start",
																	"nativeSrc": "4223:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4223:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nativeSrc": "4337:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4337:7:1"
																},
																"nativeSrc": "4337:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4337:20:1"
															},
															"nativeSrc": "4337:20:1",
															"nodeType": "YulExpressionStatement",
															"src": "4337:20:1"
														},
														{
															"nativeSrc": "4370:77:1",
															"nodeType": "YulAssignment",
															"src": "4370:77:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "start",
																				"nativeSrc": "4392:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4399:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4399:2:1",
																				"type": "",
																				"value": "85"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "4382:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "4382:9:1"
																		},
																		"nativeSrc": "4382:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4382:20:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:42:1",
																		"nodeType": "YulLiteral",
																		"src": "4404:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4378:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:1"
																},
																"nativeSrc": "4378:69:1",
																"nodeType": "YulFunctionCall",
																"src": "4378:69:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "4370:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4370:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "4370:4:1",
														"valueSize": 1
													},
													{
														"declaration": 487,
														"isOffset": false,
														"isSlot": false,
														"src": "4069:12:1",
														"valueSize": 1
													},
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": false,
														"src": "4148:8:1",
														"valueSize": 1
													},
													{
														"declaration": 485,
														"isOffset": false,
														"isSlot": false,
														"src": "4118:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 494,
												"nodeType": "InlineAssembly",
												"src": "2794:1663:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2432:232:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2678:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2701:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2693:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2715:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2707:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "2737:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2729:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:54:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2778:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2770:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:14:1"
									},
									"scope": 497,
									"src": "2669:1794:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "533:3932:1",
							"usedErrors": [
								406
							],
							"usedEvents": []
						}
					],
					"src": "101:4365:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							519
						]
					},
					"id": 520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:2",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "Errors",
							"nameLocation": "419:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:2",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 507,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "557:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "574:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:2"
									},
									"src": "531:59:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:2",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 510,
									"name": "FailedCall",
									"nameLocation": "696:10:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:2"
									},
									"src": "690:19:2"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:2",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 513,
									"name": "FailedDeployment",
									"nameLocation": "772:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:2"
									},
									"src": "766:25:2"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:2",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 518,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "884:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:2"
									},
									"src": "860:33:2"
								}
							],
							"scope": 520,
							"src": "411:484:2",
							"usedErrors": [
								507,
								510,
								513,
								518
							],
							"usedEvents": []
						}
					],
					"src": "100:796:2"
				},
				"id": 2
			},
			"Contracts/Logic.sol": {
				"ast": {
					"absolutePath": "Contracts/Logic.sol",
					"exportedSymbols": {
						"Logic": [
							570
						]
					},
					"id": 571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Logic",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 570,
							"linearizedBaseContracts": [
								570
							],
							"name": "Logic",
							"nameLocation": "66:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 523,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "93:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "78:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 522,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "78:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fa4f245",
									"id": 525,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "119:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "104:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 524,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "104:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "192:116:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "210:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "227:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "219:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 534,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "219:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "219:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "210:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "231:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "202:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "202:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "202:51:3"
											},
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 542,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "263:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 543,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "271:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "263:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "263:14:3"
											},
											{
												"expression": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 546,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "287:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 547,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "295:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "287:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "287:14:3"
											}
										]
									},
									"functionSelector": "cd6dc687",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "140:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "159:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "151:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "175:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "167:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:32:3"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:0:3"
									},
									"scope": 570,
									"src": "131:177:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "363:89:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 557,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "381:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "385:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "381:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 559,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "395:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "381:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "402:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "373:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "373:45:3"
											},
											{
												"expression": {
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 564,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "428:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 565,
														"name": "_newValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "436:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "428:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "428:17:3"
											}
										]
									},
									"functionSelector": "573c0bd3",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateValue",
									"nameLocation": "323:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "_newValue",
												"nameLocation": "343:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "335:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:19:3"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:3"
									},
									"scope": 570,
									"src": "314:138:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 571,
							"src": "57:397:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:424:3"
				},
				"id": 3
			},
			"Contracts/minimal1.sol": {
				"ast": {
					"absolutePath": "Contracts/minimal1.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						],
						"Logic": [
							570
						],
						"ProxyFactory": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 573,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 399,
							"src": "58:50:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/Logic.sol",
							"file": "./Logic.sol",
							"id": 574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 571,
							"src": "109:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ProxyFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "ProxyFactory",
							"nameLocation": "141:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7188ab89",
									"id": 576,
									"mutability": "mutable",
									"name": "logicImplementation",
									"nameLocation": "175:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "160:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 575,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "160:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7741cad",
									"id": 579,
									"mutability": "mutable",
									"name": "allClones",
									"nameLocation": "217:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "200:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 577,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "200:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 578,
										"nodeType": "ArrayTypeName",
										"src": "200:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "261:45:4",
										"statements": [
											{
												"expression": {
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 584,
														"name": "logicImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "271:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 585,
														"name": "_logic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "293:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "271:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "271:28:4"
											}
										]
									},
									"id": 589,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "253:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "245:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "244:16:4"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "261:0:4"
									},
									"scope": 631,
									"src": "233:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "376:172:4",
										"statements": [
											{
												"assignments": [
													597
												],
												"declarations": [
													{
														"constant": false,
														"id": 597,
														"mutability": "mutable",
														"name": "clone",
														"nameLocation": "394:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 620,
														"src": "386:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 596,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "386:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"id": 600,
															"name": "logicImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "415:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 598,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "402:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$398_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "409:5:4",
														"memberName": "clone",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "402:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "402:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "386:49:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 607,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "469:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "473:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "469:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "481:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 604,
																	"name": "clone",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "451:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 603,
																"name": "Logic",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "445:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Logic_$570_$",
																	"typeString": "type(contract Logic)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "445:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Logic_$570",
																"typeString": "contract Logic"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "458:10:4",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 551,
														"src": "445:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "445:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "445:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "clone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "513:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 612,
															"name": "allClones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "498:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "508:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "498:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "498:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "498:21:4"
											},
											{
												"expression": {
													"id": 618,
													"name": "clone",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 597,
													"src": "536:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 595,
												"id": 619,
												"nodeType": "Return",
												"src": "529:12:4"
											}
										]
									},
									"functionSelector": "49ce0061",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createClone",
									"nameLocation": "321:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "341:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "333:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:16:4"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "367:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:9:4"
									},
									"scope": 631,
									"src": "312:236:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "616:33:4",
										"statements": [
											{
												"expression": {
													"id": 627,
													"name": "allClones",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 579,
													"src": "633:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 626,
												"id": 628,
												"nodeType": "Return",
												"src": "626:16:4"
											}
										]
									},
									"functionSelector": "fe3636f0",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClones",
									"nameLocation": "563:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:2:4"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "598:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 623,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "598:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 624,
													"nodeType": "ArrayTypeName",
													"src": "598:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:18:4"
									},
									"scope": 631,
									"src": "554:95:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 632,
							"src": "132:519:4",
							"usedErrors": [
								507,
								513
							],
							"usedEvents": []
						}
					],
					"src": "32:623:4"
				},
				"id": 4
			}
		}
	}
}